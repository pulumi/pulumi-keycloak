// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { BindingsArgs, BindingsState } from "./bindings";
export type Bindings = import("./bindings").Bindings;
export const Bindings: typeof import("./bindings").Bindings = null as any;
utilities.lazyLoad(exports, ["Bindings"], () => require("./bindings"));

export { ExecutionArgs, ExecutionState } from "./execution";
export type Execution = import("./execution").Execution;
export const Execution: typeof import("./execution").Execution = null as any;
utilities.lazyLoad(exports, ["Execution"], () => require("./execution"));

export { ExecutionConfigArgs, ExecutionConfigState } from "./executionConfig";
export type ExecutionConfig = import("./executionConfig").ExecutionConfig;
export const ExecutionConfig: typeof import("./executionConfig").ExecutionConfig = null as any;
utilities.lazyLoad(exports, ["ExecutionConfig"], () => require("./executionConfig"));

export { FlowArgs, FlowState } from "./flow";
export type Flow = import("./flow").Flow;
export const Flow: typeof import("./flow").Flow = null as any;
utilities.lazyLoad(exports, ["Flow"], () => require("./flow"));

export { SubflowArgs, SubflowState } from "./subflow";
export type Subflow = import("./subflow").Subflow;
export const Subflow: typeof import("./subflow").Subflow = null as any;
utilities.lazyLoad(exports, ["Subflow"], () => require("./subflow"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "keycloak:authentication/bindings:Bindings":
                return new Bindings(name, <any>undefined, { urn })
            case "keycloak:authentication/execution:Execution":
                return new Execution(name, <any>undefined, { urn })
            case "keycloak:authentication/executionConfig:ExecutionConfig":
                return new ExecutionConfig(name, <any>undefined, { urn })
            case "keycloak:authentication/flow:Flow":
                return new Flow(name, <any>undefined, { urn })
            case "keycloak:authentication/subflow:Subflow":
                return new Subflow(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("keycloak", "authentication/bindings", _module)
pulumi.runtime.registerResourceModule("keycloak", "authentication/execution", _module)
pulumi.runtime.registerResourceModule("keycloak", "authentication/executionConfig", _module)
pulumi.runtime.registerResourceModule("keycloak", "authentication/flow", _module)
pulumi.runtime.registerResourceModule("keycloak", "authentication/subflow", _module)
