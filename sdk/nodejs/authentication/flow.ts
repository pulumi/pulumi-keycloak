// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Allows for creating and managing an authentication flow within Keycloak.
 *
 * [Authentication flows](https://www.keycloak.org/docs/11.0/server_admin/index.html#_authentication-flows) describe a sequence
 * of actions that a user or service must perform in order to be authenticated to Keycloak. The authentication flow itself
 * is a container for these actions, which are otherwise known as executions.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as keycloak from "@pulumi/keycloak";
 *
 * const realm = new keycloak.Realm("realm", {
 *     realm: "my-realm",
 *     enabled: true,
 * });
 * const flow = new keycloak.authentication.Flow("flow", {
 *     realmId: realm.id,
 *     alias: "my-flow-alias",
 * });
 * const execution = new keycloak.authentication.Execution("execution", {
 *     realmId: realm.id,
 *     parentFlowAlias: flow.alias,
 *     authenticator: "identity-provider-redirector",
 *     requirement: "REQUIRED",
 * });
 * ```
 *
 * ## Import
 *
 * Authentication flows can be imported using the format `{{realmId}}/{{authenticationFlowId}}`. The authentication flow ID is typically a GUID which is autogenerated when the flow is created via Keycloak. Unfortunately, it is not trivial to retrieve the authentication flow ID from the UI. The best way to do this is to visit the "Authentication" page in Keycloak, and use the network tab of your browser to view the response of the API call to `/auth/admin/realms/${realm}/authentication/flows`, which will be a list of authentication flows. Examplebash
 *
 * ```sh
 *  $ pulumi import keycloak:authentication/flow:Flow flow my-realm/e9a5641e-778c-4daf-89c0-f4ef617987d1
 * ```
 */
export class Flow extends pulumi.CustomResource {
    /**
     * Get an existing Flow resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FlowState, opts?: pulumi.CustomResourceOptions): Flow {
        return new Flow(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'keycloak:authentication/flow:Flow';

    /**
     * Returns true if the given object is an instance of Flow.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Flow {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Flow.__pulumiType;
    }

    /**
     * The alias for this authentication flow.
     */
    public readonly alias!: pulumi.Output<string>;
    /**
     * A description for the authentication flow.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The type of authentication flow to create. Valid choices include `basic-flow` and `client-flow`. Defaults to `basic-flow`.
     */
    public readonly providerId!: pulumi.Output<string | undefined>;
    /**
     * The realm that the authentication flow exists in.
     */
    public readonly realmId!: pulumi.Output<string>;

    /**
     * Create a Flow resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FlowArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FlowArgs | FlowState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as FlowState | undefined;
            inputs["alias"] = state ? state.alias : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["providerId"] = state ? state.providerId : undefined;
            inputs["realmId"] = state ? state.realmId : undefined;
        } else {
            const args = argsOrState as FlowArgs | undefined;
            if (!args || args.alias === undefined) {
                throw new Error("Missing required property 'alias'");
            }
            if (!args || args.realmId === undefined) {
                throw new Error("Missing required property 'realmId'");
            }
            inputs["alias"] = args ? args.alias : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["providerId"] = args ? args.providerId : undefined;
            inputs["realmId"] = args ? args.realmId : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Flow.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Flow resources.
 */
export interface FlowState {
    /**
     * The alias for this authentication flow.
     */
    readonly alias?: pulumi.Input<string>;
    /**
     * A description for the authentication flow.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The type of authentication flow to create. Valid choices include `basic-flow` and `client-flow`. Defaults to `basic-flow`.
     */
    readonly providerId?: pulumi.Input<string>;
    /**
     * The realm that the authentication flow exists in.
     */
    readonly realmId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Flow resource.
 */
export interface FlowArgs {
    /**
     * The alias for this authentication flow.
     */
    readonly alias: pulumi.Input<string>;
    /**
     * A description for the authentication flow.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The type of authentication flow to create. Valid choices include `basic-flow` and `client-flow`. Defaults to `basic-flow`.
     */
    readonly providerId?: pulumi.Input<string>;
    /**
     * The realm that the authentication flow exists in.
     */
    readonly realmId: pulumi.Input<string>;
}
