// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GoogleIdentityProviderArgs, GoogleIdentityProviderState } from "./googleIdentityProvider";
export type GoogleIdentityProvider = import("./googleIdentityProvider").GoogleIdentityProvider;
export const GoogleIdentityProvider: typeof import("./googleIdentityProvider").GoogleIdentityProvider = null as any;
utilities.lazyLoad(exports, ["GoogleIdentityProvider"], () => require("./googleIdentityProvider"));

export { IdentityProviderArgs, IdentityProviderState } from "./identityProvider";
export type IdentityProvider = import("./identityProvider").IdentityProvider;
export const IdentityProvider: typeof import("./identityProvider").IdentityProvider = null as any;
utilities.lazyLoad(exports, ["IdentityProvider"], () => require("./identityProvider"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "keycloak:oidc/googleIdentityProvider:GoogleIdentityProvider":
                return new GoogleIdentityProvider(name, <any>undefined, { urn })
            case "keycloak:oidc/identityProvider:IdentityProvider":
                return new IdentityProvider(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("keycloak", "oidc/googleIdentityProvider", _module)
pulumi.runtime.registerResourceModule("keycloak", "oidc/identityProvider", _module)
