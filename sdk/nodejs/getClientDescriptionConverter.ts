// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This data source uses the [ClientDescriptionConverter](https://www.keycloak.org/docs-api/6.0/javadocs/org/keycloak/exportimport/ClientDescriptionConverter.html) API to convert a generic client description into a Keycloak
 * client. This data can then be used to manage the client within Keycloak.
 */
export function getClientDescriptionConverter(args: GetClientDescriptionConverterArgs, opts?: pulumi.InvokeOptions): Promise<GetClientDescriptionConverterResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("keycloak:index/getClientDescriptionConverter:getClientDescriptionConverter", {
        "body": args.body,
        "realmId": args.realmId,
    }, opts);
}

/**
 * A collection of arguments for invoking getClientDescriptionConverter.
 */
export interface GetClientDescriptionConverterArgs {
    /**
     * The body of the request to convert.
     */
    body: string;
    /**
     * The realm to use for the client description converter API call.
     */
    realmId: string;
}

/**
 * A collection of values returned by getClientDescriptionConverter.
 */
export interface GetClientDescriptionConverterResult {
    readonly access: {[key: string]: any};
    readonly adminUrl: string;
    readonly attributes: {[key: string]: any};
    readonly authenticationFlowBindingOverrides: {[key: string]: any};
    readonly authorizationServicesEnabled: boolean;
    readonly authorizationSettings: {[key: string]: any};
    readonly baseUrl: string;
    readonly bearerOnly: boolean;
    readonly body: string;
    readonly clientAuthenticatorType: string;
    readonly clientId: string;
    readonly consentRequired: string;
    readonly defaultClientScopes: string[];
    readonly defaultRoles: string[];
    readonly description: string;
    readonly directAccessGrantsEnabled: boolean;
    readonly enabled: boolean;
    readonly frontchannelLogout: boolean;
    readonly fullScopeAllowed: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly implicitFlowEnabled: boolean;
    readonly name: string;
    readonly notBefore: number;
    readonly optionalClientScopes: string[];
    readonly origin: string;
    readonly protocol: string;
    readonly protocolMappers: outputs.GetClientDescriptionConverterProtocolMapper[];
    readonly publicClient: boolean;
    readonly realmId: string;
    readonly redirectUris: string[];
    readonly registeredNodes: {[key: string]: any};
    readonly registrationAccessToken: string;
    readonly rootUrl: string;
    readonly secret: string;
    readonly serviceAccountsEnabled: boolean;
    readonly standardFlowEnabled: boolean;
    readonly surrogateAuthRequired: boolean;
    readonly webOrigins: string[];
}
/**
 * This data source uses the [ClientDescriptionConverter](https://www.keycloak.org/docs-api/6.0/javadocs/org/keycloak/exportimport/ClientDescriptionConverter.html) API to convert a generic client description into a Keycloak
 * client. This data can then be used to manage the client within Keycloak.
 */
export function getClientDescriptionConverterOutput(args: GetClientDescriptionConverterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetClientDescriptionConverterResult> {
    return pulumi.output(args).apply((a: any) => getClientDescriptionConverter(a, opts))
}

/**
 * A collection of arguments for invoking getClientDescriptionConverter.
 */
export interface GetClientDescriptionConverterOutputArgs {
    /**
     * The body of the request to convert.
     */
    body: pulumi.Input<string>;
    /**
     * The realm to use for the client description converter API call.
     */
    realmId: pulumi.Input<string>;
}
