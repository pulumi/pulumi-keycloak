// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Use this data source to get the keys of a realm. Keys can be filtered by algorithm and status.
 *
 * Remarks:
 *
 * - A key must meet all filter criteria
 * - This data source may return more than one value.
 * - If no key matches the filter criteria, then an error will be returned.
 */
export function getRealmKeys(args: GetRealmKeysArgs, opts?: pulumi.InvokeOptions): Promise<GetRealmKeysResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("keycloak:index/getRealmKeys:getRealmKeys", {
        "algorithms": args.algorithms,
        "realmId": args.realmId,
        "statuses": args.statuses,
    }, opts);
}

/**
 * A collection of arguments for invoking getRealmKeys.
 */
export interface GetRealmKeysArgs {
    /**
     * When specified, keys will be filtered by algorithm. The algorithms can be any of `HS256`, `RS256`,`AES`, etc.
     */
    readonly algorithms?: string[];
    /**
     * The realm from which the keys will be retrieved.
     */
    readonly realmId: string;
    /**
     * When specified, keys will be filtered by status. The statuses can be any of `ACTIVE`, `DISABLED` and `PASSIVE`.
     */
    readonly statuses?: string[];
}

/**
 * A collection of values returned by getRealmKeys.
 */
export interface GetRealmKeysResult {
    readonly algorithms?: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * (Computed) A list of keys that match the filter criteria. Each key has the following attributes:
     */
    readonly keys: outputs.GetRealmKeysKey[];
    readonly realmId: string;
    /**
     * Key status (string)
     */
    readonly statuses?: string[];
}
