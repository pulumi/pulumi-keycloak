// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Allows for creating and managing LDAP user federation providers within Keycloak.
 *
 * Keycloak can use an LDAP user federation provider to federate users to Keycloak
 * from a directory system such as LDAP or Active Directory. Federated users
 * will exist within the realm and will be able to log in to clients. Federated
 * users can have their attributes defined using mappers.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as keycloak from "@pulumi/keycloak";
 *
 * const realm = new keycloak.Realm("realm", {
 *     realm: "my-realm",
 *     enabled: true,
 * });
 * const ldapUserFederation = new keycloak.ldap.UserFederation("ldapUserFederation", {
 *     realmId: realm.id,
 *     enabled: true,
 *     usernameLdapAttribute: "cn",
 *     rdnLdapAttribute: "cn",
 *     uuidLdapAttribute: "entryDN",
 *     userObjectClasses: [
 *         "simpleSecurityObject",
 *         "organizationalRole",
 *     ],
 *     connectionUrl: "ldap://openldap",
 *     usersDn: "dc=example,dc=org",
 *     bindDn: "cn=admin,dc=example,dc=org",
 *     bindCredential: "admin",
 *     connectionTimeout: "5s",
 *     readTimeout: "10s",
 *     kerberos: {
 *         kerberosRealm: "FOO.LOCAL",
 *         serverPrincipal: "HTTP/host.foo.com@FOO.LOCAL",
 *         keytab: "/etc/host.keytab",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * LDAP user federation providers can be imported using the format `{{realm_id}}/{{ldap_user_federation_id}}`. The ID of the LDAP user federation provider can be found within the Keycloak GUI and is typically a GUIDbash
 *
 * ```sh
 *  $ pulumi import keycloak:ldap/userFederation:UserFederation ldap_user_federation my-realm/af2a6ca3-e4d7-49c3-b08b-1b3c70b4b860
 * ```
 */
export class UserFederation extends pulumi.CustomResource {
    /**
     * Get an existing UserFederation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserFederationState, opts?: pulumi.CustomResourceOptions): UserFederation {
        return new UserFederation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'keycloak:ldap/userFederation:UserFederation';

    /**
     * Returns true if the given object is an instance of UserFederation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is UserFederation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UserFederation.__pulumiType;
    }

    /**
     * The number of users to sync within a single transaction. Defaults to `1000`.
     */
    public readonly batchSizeForSync!: pulumi.Output<number | undefined>;
    /**
     * Password of LDAP admin. This attribute must be set if `bindDn` is set.
     */
    public readonly bindCredential!: pulumi.Output<string | undefined>;
    /**
     * DN of LDAP admin, which will be used by Keycloak to access LDAP server. This attribute must be set if `bindCredential` is set.
     */
    public readonly bindDn!: pulumi.Output<string | undefined>;
    /**
     * A block containing the cache settings.
     */
    public readonly cache!: pulumi.Output<outputs.ldap.UserFederationCache | undefined>;
    /**
     * **Deprecated** Can be one of `DEFAULT`, `EVICT_DAILY`, `EVICT_WEEKLY`, `MAX_LIFESPAN`, or `NO_CACHE`. Defaults to `DEFAULT`.
     *
     * @deprecated use cache.policy instead
     */
    public readonly cachePolicy!: pulumi.Output<string | undefined>;
    /**
     * How frequently Keycloak should sync changed LDAP users, in seconds. Omit this property to disable periodic changed users sync.
     */
    public readonly changedSyncPeriod!: pulumi.Output<number | undefined>;
    /**
     * LDAP connection timeout in the format of a [Go duration string](https://golang.org/pkg/time/#Duration.String).
     */
    public readonly connectionTimeout!: pulumi.Output<string | undefined>;
    /**
     * Connection URL to the LDAP server.
     */
    public readonly connectionUrl!: pulumi.Output<string>;
    /**
     * Additional LDAP filter for filtering searched users. Must begin with `(` and end with `)`.
     */
    public readonly customUserSearchFilter!: pulumi.Output<string | undefined>;
    /**
     * Can be one of `READ_ONLY`, `WRITABLE`, or `UNSYNCED`. `UNSYNCED` allows user data to be imported but not synced back to LDAP. Defaults to `READ_ONLY`.
     */
    public readonly editMode!: pulumi.Output<string | undefined>;
    /**
     * When `false`, this provider will not be used when performing queries for users. Defaults to `true`.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * How frequently Keycloak should sync all LDAP users, in seconds. Omit this property to disable periodic full sync.
     */
    public readonly fullSyncPeriod!: pulumi.Output<number | undefined>;
    /**
     * When `true`, LDAP users will be imported into the Keycloak database. Defaults to `true`.
     */
    public readonly importEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * A block containing the kerberos settings.
     */
    public readonly kerberos!: pulumi.Output<outputs.ldap.UserFederationKerberos | undefined>;
    /**
     * Display name of the provider when displayed in the console.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * When true, Keycloak assumes the LDAP server supports pagination. Defaults to `true`.
     */
    public readonly pagination!: pulumi.Output<boolean | undefined>;
    /**
     * Priority of this provider when looking up users. Lower values are first. Defaults to `0`.
     */
    public readonly priority!: pulumi.Output<number | undefined>;
    /**
     * Name of the LDAP attribute to use as the relative distinguished name.
     */
    public readonly rdnLdapAttribute!: pulumi.Output<string>;
    /**
     * LDAP read timeout in the format of a [Go duration string](https://golang.org/pkg/time/#Duration.String).
     */
    public readonly readTimeout!: pulumi.Output<string | undefined>;
    /**
     * The realm that this provider will provide user federation for.
     */
    public readonly realmId!: pulumi.Output<string>;
    /**
     * Can be one of `ONE_LEVEL` or `SUBTREE`:
     * - `ONE_LEVEL`: Only search for users in the DN specified by `userDn`.
     * - `SUBTREE`: Search entire LDAP subtree.
     */
    public readonly searchScope!: pulumi.Output<string | undefined>;
    /**
     * When `true`, newly created users will be synced back to LDAP. Defaults to `false`.
     */
    public readonly syncRegistrations!: pulumi.Output<boolean | undefined>;
    /**
     * Can be one of `ALWAYS`, `ONLY_FOR_LDAPS`, or `NEVER`:
     */
    public readonly useTruststoreSpi!: pulumi.Output<string | undefined>;
    /**
     * Array of all values of LDAP objectClass attribute for users in LDAP. Must contain at least one.
     */
    public readonly userObjectClasses!: pulumi.Output<string[]>;
    /**
     * Name of the LDAP attribute to use as the Keycloak username.
     */
    public readonly usernameLdapAttribute!: pulumi.Output<string>;
    /**
     * Full DN of LDAP tree where your users are.
     */
    public readonly usersDn!: pulumi.Output<string>;
    /**
     * Name of the LDAP attribute to use as a unique object identifier for objects in LDAP.
     */
    public readonly uuidLdapAttribute!: pulumi.Output<string>;
    /**
     * When `true`, Keycloak will validate passwords using the realm policy before updating it.
     */
    public readonly validatePasswordPolicy!: pulumi.Output<boolean | undefined>;
    /**
     * Can be one of `OTHER`, `EDIRECTORY`, `AD`, `RHDS`, or `TIVOLI`. When this is selected in the GUI, it provides reasonable defaults for other fields. When used with the Keycloak API, this attribute does nothing, but is still required. Defaults to `OTHER`.
     */
    public readonly vendor!: pulumi.Output<string | undefined>;

    /**
     * Create a UserFederation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserFederationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UserFederationArgs | UserFederationState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as UserFederationState | undefined;
            inputs["batchSizeForSync"] = state ? state.batchSizeForSync : undefined;
            inputs["bindCredential"] = state ? state.bindCredential : undefined;
            inputs["bindDn"] = state ? state.bindDn : undefined;
            inputs["cache"] = state ? state.cache : undefined;
            inputs["cachePolicy"] = state ? state.cachePolicy : undefined;
            inputs["changedSyncPeriod"] = state ? state.changedSyncPeriod : undefined;
            inputs["connectionTimeout"] = state ? state.connectionTimeout : undefined;
            inputs["connectionUrl"] = state ? state.connectionUrl : undefined;
            inputs["customUserSearchFilter"] = state ? state.customUserSearchFilter : undefined;
            inputs["editMode"] = state ? state.editMode : undefined;
            inputs["enabled"] = state ? state.enabled : undefined;
            inputs["fullSyncPeriod"] = state ? state.fullSyncPeriod : undefined;
            inputs["importEnabled"] = state ? state.importEnabled : undefined;
            inputs["kerberos"] = state ? state.kerberos : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["pagination"] = state ? state.pagination : undefined;
            inputs["priority"] = state ? state.priority : undefined;
            inputs["rdnLdapAttribute"] = state ? state.rdnLdapAttribute : undefined;
            inputs["readTimeout"] = state ? state.readTimeout : undefined;
            inputs["realmId"] = state ? state.realmId : undefined;
            inputs["searchScope"] = state ? state.searchScope : undefined;
            inputs["syncRegistrations"] = state ? state.syncRegistrations : undefined;
            inputs["useTruststoreSpi"] = state ? state.useTruststoreSpi : undefined;
            inputs["userObjectClasses"] = state ? state.userObjectClasses : undefined;
            inputs["usernameLdapAttribute"] = state ? state.usernameLdapAttribute : undefined;
            inputs["usersDn"] = state ? state.usersDn : undefined;
            inputs["uuidLdapAttribute"] = state ? state.uuidLdapAttribute : undefined;
            inputs["validatePasswordPolicy"] = state ? state.validatePasswordPolicy : undefined;
            inputs["vendor"] = state ? state.vendor : undefined;
        } else {
            const args = argsOrState as UserFederationArgs | undefined;
            if (!args || args.connectionUrl === undefined) {
                throw new Error("Missing required property 'connectionUrl'");
            }
            if (!args || args.rdnLdapAttribute === undefined) {
                throw new Error("Missing required property 'rdnLdapAttribute'");
            }
            if (!args || args.realmId === undefined) {
                throw new Error("Missing required property 'realmId'");
            }
            if (!args || args.userObjectClasses === undefined) {
                throw new Error("Missing required property 'userObjectClasses'");
            }
            if (!args || args.usernameLdapAttribute === undefined) {
                throw new Error("Missing required property 'usernameLdapAttribute'");
            }
            if (!args || args.usersDn === undefined) {
                throw new Error("Missing required property 'usersDn'");
            }
            if (!args || args.uuidLdapAttribute === undefined) {
                throw new Error("Missing required property 'uuidLdapAttribute'");
            }
            inputs["batchSizeForSync"] = args ? args.batchSizeForSync : undefined;
            inputs["bindCredential"] = args ? args.bindCredential : undefined;
            inputs["bindDn"] = args ? args.bindDn : undefined;
            inputs["cache"] = args ? args.cache : undefined;
            inputs["cachePolicy"] = args ? args.cachePolicy : undefined;
            inputs["changedSyncPeriod"] = args ? args.changedSyncPeriod : undefined;
            inputs["connectionTimeout"] = args ? args.connectionTimeout : undefined;
            inputs["connectionUrl"] = args ? args.connectionUrl : undefined;
            inputs["customUserSearchFilter"] = args ? args.customUserSearchFilter : undefined;
            inputs["editMode"] = args ? args.editMode : undefined;
            inputs["enabled"] = args ? args.enabled : undefined;
            inputs["fullSyncPeriod"] = args ? args.fullSyncPeriod : undefined;
            inputs["importEnabled"] = args ? args.importEnabled : undefined;
            inputs["kerberos"] = args ? args.kerberos : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["pagination"] = args ? args.pagination : undefined;
            inputs["priority"] = args ? args.priority : undefined;
            inputs["rdnLdapAttribute"] = args ? args.rdnLdapAttribute : undefined;
            inputs["readTimeout"] = args ? args.readTimeout : undefined;
            inputs["realmId"] = args ? args.realmId : undefined;
            inputs["searchScope"] = args ? args.searchScope : undefined;
            inputs["syncRegistrations"] = args ? args.syncRegistrations : undefined;
            inputs["useTruststoreSpi"] = args ? args.useTruststoreSpi : undefined;
            inputs["userObjectClasses"] = args ? args.userObjectClasses : undefined;
            inputs["usernameLdapAttribute"] = args ? args.usernameLdapAttribute : undefined;
            inputs["usersDn"] = args ? args.usersDn : undefined;
            inputs["uuidLdapAttribute"] = args ? args.uuidLdapAttribute : undefined;
            inputs["validatePasswordPolicy"] = args ? args.validatePasswordPolicy : undefined;
            inputs["vendor"] = args ? args.vendor : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(UserFederation.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering UserFederation resources.
 */
export interface UserFederationState {
    /**
     * The number of users to sync within a single transaction. Defaults to `1000`.
     */
    readonly batchSizeForSync?: pulumi.Input<number>;
    /**
     * Password of LDAP admin. This attribute must be set if `bindDn` is set.
     */
    readonly bindCredential?: pulumi.Input<string>;
    /**
     * DN of LDAP admin, which will be used by Keycloak to access LDAP server. This attribute must be set if `bindCredential` is set.
     */
    readonly bindDn?: pulumi.Input<string>;
    /**
     * A block containing the cache settings.
     */
    readonly cache?: pulumi.Input<inputs.ldap.UserFederationCache>;
    /**
     * **Deprecated** Can be one of `DEFAULT`, `EVICT_DAILY`, `EVICT_WEEKLY`, `MAX_LIFESPAN`, or `NO_CACHE`. Defaults to `DEFAULT`.
     *
     * @deprecated use cache.policy instead
     */
    readonly cachePolicy?: pulumi.Input<string>;
    /**
     * How frequently Keycloak should sync changed LDAP users, in seconds. Omit this property to disable periodic changed users sync.
     */
    readonly changedSyncPeriod?: pulumi.Input<number>;
    /**
     * LDAP connection timeout in the format of a [Go duration string](https://golang.org/pkg/time/#Duration.String).
     */
    readonly connectionTimeout?: pulumi.Input<string>;
    /**
     * Connection URL to the LDAP server.
     */
    readonly connectionUrl?: pulumi.Input<string>;
    /**
     * Additional LDAP filter for filtering searched users. Must begin with `(` and end with `)`.
     */
    readonly customUserSearchFilter?: pulumi.Input<string>;
    /**
     * Can be one of `READ_ONLY`, `WRITABLE`, or `UNSYNCED`. `UNSYNCED` allows user data to be imported but not synced back to LDAP. Defaults to `READ_ONLY`.
     */
    readonly editMode?: pulumi.Input<string>;
    /**
     * When `false`, this provider will not be used when performing queries for users. Defaults to `true`.
     */
    readonly enabled?: pulumi.Input<boolean>;
    /**
     * How frequently Keycloak should sync all LDAP users, in seconds. Omit this property to disable periodic full sync.
     */
    readonly fullSyncPeriod?: pulumi.Input<number>;
    /**
     * When `true`, LDAP users will be imported into the Keycloak database. Defaults to `true`.
     */
    readonly importEnabled?: pulumi.Input<boolean>;
    /**
     * A block containing the kerberos settings.
     */
    readonly kerberos?: pulumi.Input<inputs.ldap.UserFederationKerberos>;
    /**
     * Display name of the provider when displayed in the console.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * When true, Keycloak assumes the LDAP server supports pagination. Defaults to `true`.
     */
    readonly pagination?: pulumi.Input<boolean>;
    /**
     * Priority of this provider when looking up users. Lower values are first. Defaults to `0`.
     */
    readonly priority?: pulumi.Input<number>;
    /**
     * Name of the LDAP attribute to use as the relative distinguished name.
     */
    readonly rdnLdapAttribute?: pulumi.Input<string>;
    /**
     * LDAP read timeout in the format of a [Go duration string](https://golang.org/pkg/time/#Duration.String).
     */
    readonly readTimeout?: pulumi.Input<string>;
    /**
     * The realm that this provider will provide user federation for.
     */
    readonly realmId?: pulumi.Input<string>;
    /**
     * Can be one of `ONE_LEVEL` or `SUBTREE`:
     * - `ONE_LEVEL`: Only search for users in the DN specified by `userDn`.
     * - `SUBTREE`: Search entire LDAP subtree.
     */
    readonly searchScope?: pulumi.Input<string>;
    /**
     * When `true`, newly created users will be synced back to LDAP. Defaults to `false`.
     */
    readonly syncRegistrations?: pulumi.Input<boolean>;
    /**
     * Can be one of `ALWAYS`, `ONLY_FOR_LDAPS`, or `NEVER`:
     */
    readonly useTruststoreSpi?: pulumi.Input<string>;
    /**
     * Array of all values of LDAP objectClass attribute for users in LDAP. Must contain at least one.
     */
    readonly userObjectClasses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the LDAP attribute to use as the Keycloak username.
     */
    readonly usernameLdapAttribute?: pulumi.Input<string>;
    /**
     * Full DN of LDAP tree where your users are.
     */
    readonly usersDn?: pulumi.Input<string>;
    /**
     * Name of the LDAP attribute to use as a unique object identifier for objects in LDAP.
     */
    readonly uuidLdapAttribute?: pulumi.Input<string>;
    /**
     * When `true`, Keycloak will validate passwords using the realm policy before updating it.
     */
    readonly validatePasswordPolicy?: pulumi.Input<boolean>;
    /**
     * Can be one of `OTHER`, `EDIRECTORY`, `AD`, `RHDS`, or `TIVOLI`. When this is selected in the GUI, it provides reasonable defaults for other fields. When used with the Keycloak API, this attribute does nothing, but is still required. Defaults to `OTHER`.
     */
    readonly vendor?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a UserFederation resource.
 */
export interface UserFederationArgs {
    /**
     * The number of users to sync within a single transaction. Defaults to `1000`.
     */
    readonly batchSizeForSync?: pulumi.Input<number>;
    /**
     * Password of LDAP admin. This attribute must be set if `bindDn` is set.
     */
    readonly bindCredential?: pulumi.Input<string>;
    /**
     * DN of LDAP admin, which will be used by Keycloak to access LDAP server. This attribute must be set if `bindCredential` is set.
     */
    readonly bindDn?: pulumi.Input<string>;
    /**
     * A block containing the cache settings.
     */
    readonly cache?: pulumi.Input<inputs.ldap.UserFederationCache>;
    /**
     * **Deprecated** Can be one of `DEFAULT`, `EVICT_DAILY`, `EVICT_WEEKLY`, `MAX_LIFESPAN`, or `NO_CACHE`. Defaults to `DEFAULT`.
     *
     * @deprecated use cache.policy instead
     */
    readonly cachePolicy?: pulumi.Input<string>;
    /**
     * How frequently Keycloak should sync changed LDAP users, in seconds. Omit this property to disable periodic changed users sync.
     */
    readonly changedSyncPeriod?: pulumi.Input<number>;
    /**
     * LDAP connection timeout in the format of a [Go duration string](https://golang.org/pkg/time/#Duration.String).
     */
    readonly connectionTimeout?: pulumi.Input<string>;
    /**
     * Connection URL to the LDAP server.
     */
    readonly connectionUrl: pulumi.Input<string>;
    /**
     * Additional LDAP filter for filtering searched users. Must begin with `(` and end with `)`.
     */
    readonly customUserSearchFilter?: pulumi.Input<string>;
    /**
     * Can be one of `READ_ONLY`, `WRITABLE`, or `UNSYNCED`. `UNSYNCED` allows user data to be imported but not synced back to LDAP. Defaults to `READ_ONLY`.
     */
    readonly editMode?: pulumi.Input<string>;
    /**
     * When `false`, this provider will not be used when performing queries for users. Defaults to `true`.
     */
    readonly enabled?: pulumi.Input<boolean>;
    /**
     * How frequently Keycloak should sync all LDAP users, in seconds. Omit this property to disable periodic full sync.
     */
    readonly fullSyncPeriod?: pulumi.Input<number>;
    /**
     * When `true`, LDAP users will be imported into the Keycloak database. Defaults to `true`.
     */
    readonly importEnabled?: pulumi.Input<boolean>;
    /**
     * A block containing the kerberos settings.
     */
    readonly kerberos?: pulumi.Input<inputs.ldap.UserFederationKerberos>;
    /**
     * Display name of the provider when displayed in the console.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * When true, Keycloak assumes the LDAP server supports pagination. Defaults to `true`.
     */
    readonly pagination?: pulumi.Input<boolean>;
    /**
     * Priority of this provider when looking up users. Lower values are first. Defaults to `0`.
     */
    readonly priority?: pulumi.Input<number>;
    /**
     * Name of the LDAP attribute to use as the relative distinguished name.
     */
    readonly rdnLdapAttribute: pulumi.Input<string>;
    /**
     * LDAP read timeout in the format of a [Go duration string](https://golang.org/pkg/time/#Duration.String).
     */
    readonly readTimeout?: pulumi.Input<string>;
    /**
     * The realm that this provider will provide user federation for.
     */
    readonly realmId: pulumi.Input<string>;
    /**
     * Can be one of `ONE_LEVEL` or `SUBTREE`:
     * - `ONE_LEVEL`: Only search for users in the DN specified by `userDn`.
     * - `SUBTREE`: Search entire LDAP subtree.
     */
    readonly searchScope?: pulumi.Input<string>;
    /**
     * When `true`, newly created users will be synced back to LDAP. Defaults to `false`.
     */
    readonly syncRegistrations?: pulumi.Input<boolean>;
    /**
     * Can be one of `ALWAYS`, `ONLY_FOR_LDAPS`, or `NEVER`:
     */
    readonly useTruststoreSpi?: pulumi.Input<string>;
    /**
     * Array of all values of LDAP objectClass attribute for users in LDAP. Must contain at least one.
     */
    readonly userObjectClasses: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the LDAP attribute to use as the Keycloak username.
     */
    readonly usernameLdapAttribute: pulumi.Input<string>;
    /**
     * Full DN of LDAP tree where your users are.
     */
    readonly usersDn: pulumi.Input<string>;
    /**
     * Name of the LDAP attribute to use as a unique object identifier for objects in LDAP.
     */
    readonly uuidLdapAttribute: pulumi.Input<string>;
    /**
     * When `true`, Keycloak will validate passwords using the realm policy before updating it.
     */
    readonly validatePasswordPolicy?: pulumi.Input<boolean>;
    /**
     * Can be one of `OTHER`, `EDIRECTORY`, `AD`, `RHDS`, or `TIVOLI`. When this is selected in the GUI, it provides reasonable defaults for other fields. When used with the Keycloak API, this attribute does nothing, but is still required. Defaults to `OTHER`.
     */
    readonly vendor?: pulumi.Input<string>;
}
