// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { CustomMapperArgs, CustomMapperState } from "./customMapper";
export type CustomMapper = import("./customMapper").CustomMapper;
export const CustomMapper: typeof import("./customMapper").CustomMapper = null as any;
utilities.lazyLoad(exports, ["CustomMapper"], () => require("./customMapper"));

export { FullNameMapperArgs, FullNameMapperState } from "./fullNameMapper";
export type FullNameMapper = import("./fullNameMapper").FullNameMapper;
export const FullNameMapper: typeof import("./fullNameMapper").FullNameMapper = null as any;
utilities.lazyLoad(exports, ["FullNameMapper"], () => require("./fullNameMapper"));

export { GroupMapperArgs, GroupMapperState } from "./groupMapper";
export type GroupMapper = import("./groupMapper").GroupMapper;
export const GroupMapper: typeof import("./groupMapper").GroupMapper = null as any;
utilities.lazyLoad(exports, ["GroupMapper"], () => require("./groupMapper"));

export { HardcodedAttributeMapperArgs, HardcodedAttributeMapperState } from "./hardcodedAttributeMapper";
export type HardcodedAttributeMapper = import("./hardcodedAttributeMapper").HardcodedAttributeMapper;
export const HardcodedAttributeMapper: typeof import("./hardcodedAttributeMapper").HardcodedAttributeMapper = null as any;
utilities.lazyLoad(exports, ["HardcodedAttributeMapper"], () => require("./hardcodedAttributeMapper"));

export { HardcodedGroupMapperArgs, HardcodedGroupMapperState } from "./hardcodedGroupMapper";
export type HardcodedGroupMapper = import("./hardcodedGroupMapper").HardcodedGroupMapper;
export const HardcodedGroupMapper: typeof import("./hardcodedGroupMapper").HardcodedGroupMapper = null as any;
utilities.lazyLoad(exports, ["HardcodedGroupMapper"], () => require("./hardcodedGroupMapper"));

export { HardcodedRoleMapperArgs, HardcodedRoleMapperState } from "./hardcodedRoleMapper";
export type HardcodedRoleMapper = import("./hardcodedRoleMapper").HardcodedRoleMapper;
export const HardcodedRoleMapper: typeof import("./hardcodedRoleMapper").HardcodedRoleMapper = null as any;
utilities.lazyLoad(exports, ["HardcodedRoleMapper"], () => require("./hardcodedRoleMapper"));

export { MsadLdsUserAccountControlMapperArgs, MsadLdsUserAccountControlMapperState } from "./msadLdsUserAccountControlMapper";
export type MsadLdsUserAccountControlMapper = import("./msadLdsUserAccountControlMapper").MsadLdsUserAccountControlMapper;
export const MsadLdsUserAccountControlMapper: typeof import("./msadLdsUserAccountControlMapper").MsadLdsUserAccountControlMapper = null as any;
utilities.lazyLoad(exports, ["MsadLdsUserAccountControlMapper"], () => require("./msadLdsUserAccountControlMapper"));

export { MsadUserAccountControlMapperArgs, MsadUserAccountControlMapperState } from "./msadUserAccountControlMapper";
export type MsadUserAccountControlMapper = import("./msadUserAccountControlMapper").MsadUserAccountControlMapper;
export const MsadUserAccountControlMapper: typeof import("./msadUserAccountControlMapper").MsadUserAccountControlMapper = null as any;
utilities.lazyLoad(exports, ["MsadUserAccountControlMapper"], () => require("./msadUserAccountControlMapper"));

export { RoleMapperArgs, RoleMapperState } from "./roleMapper";
export type RoleMapper = import("./roleMapper").RoleMapper;
export const RoleMapper: typeof import("./roleMapper").RoleMapper = null as any;
utilities.lazyLoad(exports, ["RoleMapper"], () => require("./roleMapper"));

export { UserAttributeMapperArgs, UserAttributeMapperState } from "./userAttributeMapper";
export type UserAttributeMapper = import("./userAttributeMapper").UserAttributeMapper;
export const UserAttributeMapper: typeof import("./userAttributeMapper").UserAttributeMapper = null as any;
utilities.lazyLoad(exports, ["UserAttributeMapper"], () => require("./userAttributeMapper"));

export { UserFederationArgs, UserFederationState } from "./userFederation";
export type UserFederation = import("./userFederation").UserFederation;
export const UserFederation: typeof import("./userFederation").UserFederation = null as any;
utilities.lazyLoad(exports, ["UserFederation"], () => require("./userFederation"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "keycloak:ldap/customMapper:CustomMapper":
                return new CustomMapper(name, <any>undefined, { urn })
            case "keycloak:ldap/fullNameMapper:FullNameMapper":
                return new FullNameMapper(name, <any>undefined, { urn })
            case "keycloak:ldap/groupMapper:GroupMapper":
                return new GroupMapper(name, <any>undefined, { urn })
            case "keycloak:ldap/hardcodedAttributeMapper:HardcodedAttributeMapper":
                return new HardcodedAttributeMapper(name, <any>undefined, { urn })
            case "keycloak:ldap/hardcodedGroupMapper:HardcodedGroupMapper":
                return new HardcodedGroupMapper(name, <any>undefined, { urn })
            case "keycloak:ldap/hardcodedRoleMapper:HardcodedRoleMapper":
                return new HardcodedRoleMapper(name, <any>undefined, { urn })
            case "keycloak:ldap/msadLdsUserAccountControlMapper:MsadLdsUserAccountControlMapper":
                return new MsadLdsUserAccountControlMapper(name, <any>undefined, { urn })
            case "keycloak:ldap/msadUserAccountControlMapper:MsadUserAccountControlMapper":
                return new MsadUserAccountControlMapper(name, <any>undefined, { urn })
            case "keycloak:ldap/roleMapper:RoleMapper":
                return new RoleMapper(name, <any>undefined, { urn })
            case "keycloak:ldap/userAttributeMapper:UserAttributeMapper":
                return new UserAttributeMapper(name, <any>undefined, { urn })
            case "keycloak:ldap/userFederation:UserFederation":
                return new UserFederation(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("keycloak", "ldap/customMapper", _module)
pulumi.runtime.registerResourceModule("keycloak", "ldap/fullNameMapper", _module)
pulumi.runtime.registerResourceModule("keycloak", "ldap/groupMapper", _module)
pulumi.runtime.registerResourceModule("keycloak", "ldap/hardcodedAttributeMapper", _module)
pulumi.runtime.registerResourceModule("keycloak", "ldap/hardcodedGroupMapper", _module)
pulumi.runtime.registerResourceModule("keycloak", "ldap/hardcodedRoleMapper", _module)
pulumi.runtime.registerResourceModule("keycloak", "ldap/msadLdsUserAccountControlMapper", _module)
pulumi.runtime.registerResourceModule("keycloak", "ldap/msadUserAccountControlMapper", _module)
pulumi.runtime.registerResourceModule("keycloak", "ldap/roleMapper", _module)
pulumi.runtime.registerResourceModule("keycloak", "ldap/userAttributeMapper", _module)
pulumi.runtime.registerResourceModule("keycloak", "ldap/userFederation", _module)
