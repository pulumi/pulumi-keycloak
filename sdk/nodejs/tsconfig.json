{
    "compilerOptions": {
        "outDir": "bin",
        "target": "es2016",
        "module": "commonjs",
        "moduleResolution": "node",
        "declaration": true,
        "sourceMap": true,
        "stripInternal": true,
        "experimentalDecorators": true,
        "noFallthroughCasesInSwitch": true,
        "forceConsistentCasingInFileNames": true,
        "strict": true
    },
    "files": [
        "attributeImporterIdentityProviderMapper.ts",
        "attributeToRoleIdentityMapper.ts",
        "authentication/execution.ts",
        "authentication/executionConfig.ts",
        "authentication/flow.ts",
        "authentication/index.ts",
        "authentication/subflow.ts",
        "config/index.ts",
        "config/vars.ts",
        "customUserFederation.ts",
        "defaultGroups.ts",
        "genericClientProtocolMapper.ts",
        "genericClientRoleMapper.ts",
        "getGroup.ts",
        "getRealm.ts",
        "getRealmKeys.ts",
        "getRole.ts",
        "group.ts",
        "groupMemberships.ts",
        "groupRoles.ts",
        "hardcodedAttributeIdentityProviderMapper.ts",
        "hardcodedRoleIdentityMapper.ts",
        "index.ts",
        "ldap/fullNameMapper.ts",
        "ldap/groupMapper.ts",
        "ldap/hardcodedGroupMapper.ts",
        "ldap/hardcodedRoleMapper.ts",
        "ldap/index.ts",
        "ldap/msadLdsUserAccountControlMapper.ts",
        "ldap/msadUserAccountControlMapper.ts",
        "ldap/roleMapper.ts",
        "ldap/userAttributeMapper.ts",
        "ldap/userFederation.ts",
        "oidc/googleIdentityProvider.ts",
        "oidc/identityProvider.ts",
        "oidc/index.ts",
        "openid/audienceProtocolMapper.ts",
        "openid/client.ts",
        "openid/clientAggregatePolicy.ts",
        "openid/clientAuthorizationPermission.ts",
        "openid/clientAuthorizationResource.ts",
        "openid/clientAuthorizationScope.ts",
        "openid/clientDefaultScopes.ts",
        "openid/clientGroupPolicy.ts",
        "openid/clientJsPolicy.ts",
        "openid/clientOptionalScopes.ts",
        "openid/clientPolicy.ts",
        "openid/clientRolePolicy.ts",
        "openid/clientScope.ts",
        "openid/clientServiceAccountRealmRole.ts",
        "openid/clientServiceAccountRole.ts",
        "openid/clientTimePolicy.ts",
        "openid/clientUserPolicy.ts",
        "openid/fullNameProtocolMapper.ts",
        "openid/getClient.ts",
        "openid/getClientAuthorizationPolicy.ts",
        "openid/getClientServiceAccountUser.ts",
        "openid/groupMembershipProtocolMapper.ts",
        "openid/hardcodedClaimProtocolMapper.ts",
        "openid/hardcodedRoleProtocolMapper.ts",
        "openid/index.ts",
        "openid/userAttributeProtocolMapper.ts",
        "openid/userClientRoleProtocolMapper.ts",
        "openid/userPropertyProtocolMapper.ts",
        "openid/userRealmRoleProtocolMapper.ts",
        "openid/userSessionNoteProtocolMapper.ts",
        "provider.ts",
        "realm.ts",
        "realmEvents.ts",
        "requiredAction.ts",
        "role.ts",
        "saml/client.ts",
        "saml/getClientInstallationProvider.ts",
        "saml/identityProvider.ts",
        "saml/index.ts",
        "saml/userAttributeProtocolMapper.ts",
        "saml/userPropertyProtocolMapper.ts",
        "types/index.ts",
        "types/input.ts",
        "types/output.ts",
        "user.ts",
        "userTemplateImporterIdentityProviderMapper.ts",
        "utilities.ts"
    ]
}

