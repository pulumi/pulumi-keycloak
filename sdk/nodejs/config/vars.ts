// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("keycloak");

export declare const additionalHeaders: {[key: string]: string} | undefined;
Object.defineProperty(exports, "additionalHeaders", {
    get() {
        return __config.getObject<{[key: string]: string}>("additionalHeaders");
    },
    enumerable: true,
});

export declare const basePath: string | undefined;
Object.defineProperty(exports, "basePath", {
    get() {
        return __config.get("basePath");
    },
    enumerable: true,
});

export declare const clientId: string | undefined;
Object.defineProperty(exports, "clientId", {
    get() {
        return __config.get("clientId");
    },
    enumerable: true,
});

export declare const clientSecret: string | undefined;
Object.defineProperty(exports, "clientSecret", {
    get() {
        return __config.get("clientSecret");
    },
    enumerable: true,
});

/**
 * Timeout (in seconds) of the Keycloak client
 */
export declare const clientTimeout: number;
Object.defineProperty(exports, "clientTimeout", {
    get() {
        return __config.getObject<number>("clientTimeout") ?? (utilities.getEnvNumber("KEYCLOAK_CLIENT_TIMEOUT") || 5);
    },
    enumerable: true,
});

/**
 * Whether or not to login to Keycloak instance on provider initialization
 */
export declare const initialLogin: boolean | undefined;
Object.defineProperty(exports, "initialLogin", {
    get() {
        return __config.getObject<boolean>("initialLogin");
    },
    enumerable: true,
});

export declare const password: string | undefined;
Object.defineProperty(exports, "password", {
    get() {
        return __config.get("password");
    },
    enumerable: true,
});

export declare const realm: string | undefined;
Object.defineProperty(exports, "realm", {
    get() {
        return __config.get("realm");
    },
    enumerable: true,
});

/**
 * Allows x509 calls using an unknown CA certificate (for development purposes)
 */
export declare const rootCaCertificate: string | undefined;
Object.defineProperty(exports, "rootCaCertificate", {
    get() {
        return __config.get("rootCaCertificate");
    },
    enumerable: true,
});

/**
 * Allows ignoring insecure certificates when set to true. Defaults to false. Disabling security check is dangerous and
 * should be avoided.
 */
export declare const tlsInsecureSkipVerify: boolean | undefined;
Object.defineProperty(exports, "tlsInsecureSkipVerify", {
    get() {
        return __config.getObject<boolean>("tlsInsecureSkipVerify");
    },
    enumerable: true,
});

/**
 * The base URL of the Keycloak instance, before `/auth`
 */
export declare const url: string | undefined;
Object.defineProperty(exports, "url", {
    get() {
        return __config.get("url");
    },
    enumerable: true,
});

export declare const username: string | undefined;
Object.defineProperty(exports, "username", {
    get() {
        return __config.get("username");
    },
    enumerable: true,
});

