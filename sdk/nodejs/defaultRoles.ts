// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Allows managing default realm roles within Keycloak.
 *
 * Note: This feature was added in Keycloak v13, so this resource will not work on older versions of Keycloak.
 *
 * ## Example Usage
 * ### Realm Role)
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as keycloak from "@pulumi/keycloak";
 *
 * const realm = new keycloak.Realm("realm", {
 *     realm: "my-realm",
 *     enabled: true,
 * });
 * const defalutRoles = new keycloak.DefaultRoles("defalutRoles", {
 *     realmId: realm.id,
 *     defaultRoles: ["uma_authorization"],
 * });
 * ```
 *
 * ## Import
 *
 * Default roles can be imported using the format `{{realm_id}}/{{default_role_id}}`, where `default_role_id` is the unique ID of the composite role that Keycloak uses to control default realm level roles. The ID is not easy to find in the GUI, but it appears in the dev tools when editing the default roles. Examplebash
 *
 * ```sh
 *  $ pulumi import keycloak:index/defaultRoles:DefaultRoles default_roles my-realm/a04c35c2-e95a-4dc5-bd32-e83a21be9e7d
 * ```
 */
export class DefaultRoles extends pulumi.CustomResource {
    /**
     * Get an existing DefaultRoles resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DefaultRolesState, opts?: pulumi.CustomResourceOptions): DefaultRoles {
        return new DefaultRoles(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'keycloak:index/defaultRoles:DefaultRoles';

    /**
     * Returns true if the given object is an instance of DefaultRoles.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DefaultRoles {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DefaultRoles.__pulumiType;
    }

    /**
     * Realm level roles assigned to new users by default.
     */
    public readonly defaultRoles!: pulumi.Output<string[]>;
    /**
     * The realm this role exists within.
     */
    public readonly realmId!: pulumi.Output<string>;

    /**
     * Create a DefaultRoles resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DefaultRolesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DefaultRolesArgs | DefaultRolesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DefaultRolesState | undefined;
            resourceInputs["defaultRoles"] = state ? state.defaultRoles : undefined;
            resourceInputs["realmId"] = state ? state.realmId : undefined;
        } else {
            const args = argsOrState as DefaultRolesArgs | undefined;
            if ((!args || args.defaultRoles === undefined) && !opts.urn) {
                throw new Error("Missing required property 'defaultRoles'");
            }
            if ((!args || args.realmId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'realmId'");
            }
            resourceInputs["defaultRoles"] = args ? args.defaultRoles : undefined;
            resourceInputs["realmId"] = args ? args.realmId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DefaultRoles.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DefaultRoles resources.
 */
export interface DefaultRolesState {
    /**
     * Realm level roles assigned to new users by default.
     */
    defaultRoles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The realm this role exists within.
     */
    realmId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DefaultRoles resource.
 */
export interface DefaultRolesArgs {
    /**
     * Realm level roles assigned to new users by default.
     */
    defaultRoles: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The realm this role exists within.
     */
    realmId: pulumi.Input<string>;
}
