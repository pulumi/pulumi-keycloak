// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.keycloak.saml.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UserPropertyProtocolMapperState extends com.pulumi.resources.ResourceArgs {

    public static final UserPropertyProtocolMapperState Empty = new UserPropertyProtocolMapperState();

    @Import(name="clientId")
    private @Nullable Output<String> clientId;

    public Optional<Output<String>> clientId() {
        return Optional.ofNullable(this.clientId);
    }

    @Import(name="clientScopeId")
    private @Nullable Output<String> clientScopeId;

    public Optional<Output<String>> clientScopeId() {
        return Optional.ofNullable(this.clientScopeId);
    }

    @Import(name="friendlyName")
    private @Nullable Output<String> friendlyName;

    public Optional<Output<String>> friendlyName() {
        return Optional.ofNullable(this.friendlyName);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="realmId")
    private @Nullable Output<String> realmId;

    public Optional<Output<String>> realmId() {
        return Optional.ofNullable(this.realmId);
    }

    @Import(name="samlAttributeName")
    private @Nullable Output<String> samlAttributeName;

    public Optional<Output<String>> samlAttributeName() {
        return Optional.ofNullable(this.samlAttributeName);
    }

    @Import(name="samlAttributeNameFormat")
    private @Nullable Output<String> samlAttributeNameFormat;

    public Optional<Output<String>> samlAttributeNameFormat() {
        return Optional.ofNullable(this.samlAttributeNameFormat);
    }

    @Import(name="userProperty")
    private @Nullable Output<String> userProperty;

    public Optional<Output<String>> userProperty() {
        return Optional.ofNullable(this.userProperty);
    }

    private UserPropertyProtocolMapperState() {}

    private UserPropertyProtocolMapperState(UserPropertyProtocolMapperState $) {
        this.clientId = $.clientId;
        this.clientScopeId = $.clientScopeId;
        this.friendlyName = $.friendlyName;
        this.name = $.name;
        this.realmId = $.realmId;
        this.samlAttributeName = $.samlAttributeName;
        this.samlAttributeNameFormat = $.samlAttributeNameFormat;
        this.userProperty = $.userProperty;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserPropertyProtocolMapperState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserPropertyProtocolMapperState $;

        public Builder() {
            $ = new UserPropertyProtocolMapperState();
        }

        public Builder(UserPropertyProtocolMapperState defaults) {
            $ = new UserPropertyProtocolMapperState(Objects.requireNonNull(defaults));
        }

        public Builder clientId(@Nullable Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        public Builder clientScopeId(@Nullable Output<String> clientScopeId) {
            $.clientScopeId = clientScopeId;
            return this;
        }

        public Builder clientScopeId(String clientScopeId) {
            return clientScopeId(Output.of(clientScopeId));
        }

        public Builder friendlyName(@Nullable Output<String> friendlyName) {
            $.friendlyName = friendlyName;
            return this;
        }

        public Builder friendlyName(String friendlyName) {
            return friendlyName(Output.of(friendlyName));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder realmId(@Nullable Output<String> realmId) {
            $.realmId = realmId;
            return this;
        }

        public Builder realmId(String realmId) {
            return realmId(Output.of(realmId));
        }

        public Builder samlAttributeName(@Nullable Output<String> samlAttributeName) {
            $.samlAttributeName = samlAttributeName;
            return this;
        }

        public Builder samlAttributeName(String samlAttributeName) {
            return samlAttributeName(Output.of(samlAttributeName));
        }

        public Builder samlAttributeNameFormat(@Nullable Output<String> samlAttributeNameFormat) {
            $.samlAttributeNameFormat = samlAttributeNameFormat;
            return this;
        }

        public Builder samlAttributeNameFormat(String samlAttributeNameFormat) {
            return samlAttributeNameFormat(Output.of(samlAttributeNameFormat));
        }

        public Builder userProperty(@Nullable Output<String> userProperty) {
            $.userProperty = userProperty;
            return this;
        }

        public Builder userProperty(String userProperty) {
            return userProperty(Output.of(userProperty));
        }

        public UserPropertyProtocolMapperState build() {
            return $;
        }
    }

}
