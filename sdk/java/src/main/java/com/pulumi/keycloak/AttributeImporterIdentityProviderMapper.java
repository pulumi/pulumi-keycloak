// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.keycloak;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.keycloak.AttributeImporterIdentityProviderMapperArgs;
import com.pulumi.keycloak.Utilities;
import com.pulumi.keycloak.inputs.AttributeImporterIdentityProviderMapperState;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## # keycloak.AttributeImporterIdentityProviderMapper
 * 
 * Allows to create and manage identity provider mappers within Keycloak.
 * 
 * ### Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.keycloak.AttributeImporterIdentityProviderMapper;
 * import com.pulumi.keycloak.AttributeImporterIdentityProviderMapperArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testMapper = new AttributeImporterIdentityProviderMapper("testMapper", AttributeImporterIdentityProviderMapperArgs.builder()        
 *             .realm("my-realm")
 *             .name("my-mapper")
 *             .identityProviderAlias("idp_alias")
 *             .attributeName("http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname")
 *             .userAttribute("lastName")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Argument Reference
 * 
 * The following arguments are supported:
 * 
 * - `realm` - (Required) The name of the realm.
 * - `name` - (Required) The name of the mapper.
 * - `identity_provider_alias` - (Required) The alias of the associated identity provider.
 * - `user_attribute` - (Required) The user attribute name to store SAML attribute.
 * - `attribute_name` - (Optional) The Name of attribute to search for in assertion. You can leave this blank and specify a friendly name instead.
 * - `attribute_friendly_name` - (Optional) The friendly name of attribute to search for in assertion.  You can leave this blank and specify an attribute name instead.
 * - `claim_name` - (Optional) The claim name.
 * 
 * ### Import
 * 
 * Identity provider mapper can be imported using the format `{{realm_id}}/{{idp_alias}}/{{idp_mapper_id}}`, where `idp_alias` is the identity provider alias, and `idp_mapper_id` is the unique ID that Keycloak
 * assigns to the mapper upon creation. This value can be found in the URI when editing this mapper in the GUI, and is typically a GUID.
 * 
 * Example:
 * 
 */
@ResourceType(type="keycloak:index/attributeImporterIdentityProviderMapper:AttributeImporterIdentityProviderMapper")
public class AttributeImporterIdentityProviderMapper extends com.pulumi.resources.CustomResource {
    /**
     * Attribute Friendly Name
     * 
     */
    @Export(name="attributeFriendlyName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> attributeFriendlyName;

    /**
     * @return Attribute Friendly Name
     * 
     */
    public Output<Optional<String>> attributeFriendlyName() {
        return Codegen.optional(this.attributeFriendlyName);
    }
    /**
     * Attribute Name
     * 
     */
    @Export(name="attributeName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> attributeName;

    /**
     * @return Attribute Name
     * 
     */
    public Output<Optional<String>> attributeName() {
        return Codegen.optional(this.attributeName);
    }
    /**
     * Claim Name
     * 
     */
    @Export(name="claimName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> claimName;

    /**
     * @return Claim Name
     * 
     */
    public Output<Optional<String>> claimName() {
        return Codegen.optional(this.claimName);
    }
    @Export(name="extraConfig", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output</* @Nullable */ Map<String,Object>> extraConfig;

    public Output<Optional<Map<String,Object>>> extraConfig() {
        return Codegen.optional(this.extraConfig);
    }
    /**
     * IDP Alias
     * 
     */
    @Export(name="identityProviderAlias", refs={String.class}, tree="[0]")
    private Output<String> identityProviderAlias;

    /**
     * @return IDP Alias
     * 
     */
    public Output<String> identityProviderAlias() {
        return this.identityProviderAlias;
    }
    /**
     * IDP Mapper Name
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return IDP Mapper Name
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Realm Name
     * 
     */
    @Export(name="realm", refs={String.class}, tree="[0]")
    private Output<String> realm;

    /**
     * @return Realm Name
     * 
     */
    public Output<String> realm() {
        return this.realm;
    }
    /**
     * User Attribute
     * 
     */
    @Export(name="userAttribute", refs={String.class}, tree="[0]")
    private Output<String> userAttribute;

    /**
     * @return User Attribute
     * 
     */
    public Output<String> userAttribute() {
        return this.userAttribute;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AttributeImporterIdentityProviderMapper(String name) {
        this(name, AttributeImporterIdentityProviderMapperArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AttributeImporterIdentityProviderMapper(String name, AttributeImporterIdentityProviderMapperArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AttributeImporterIdentityProviderMapper(String name, AttributeImporterIdentityProviderMapperArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("keycloak:index/attributeImporterIdentityProviderMapper:AttributeImporterIdentityProviderMapper", name, args == null ? AttributeImporterIdentityProviderMapperArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AttributeImporterIdentityProviderMapper(String name, Output<String> id, @Nullable AttributeImporterIdentityProviderMapperState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("keycloak:index/attributeImporterIdentityProviderMapper:AttributeImporterIdentityProviderMapper", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AttributeImporterIdentityProviderMapper get(String name, Output<String> id, @Nullable AttributeImporterIdentityProviderMapperState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AttributeImporterIdentityProviderMapper(name, id, state, options);
    }
}
