// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.keycloak.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RealmSecurityDefensesBruteForceDetection {
    private @Nullable Integer failureResetTimeSeconds;
    private @Nullable Integer maxFailureWaitSeconds;
    private @Nullable Integer maxLoginFailures;
    private @Nullable Integer minimumQuickLoginWaitSeconds;
    private @Nullable Boolean permanentLockout;
    private @Nullable Integer quickLoginCheckMilliSeconds;
    private @Nullable Integer waitIncrementSeconds;

    private RealmSecurityDefensesBruteForceDetection() {}
    public Optional<Integer> failureResetTimeSeconds() {
        return Optional.ofNullable(this.failureResetTimeSeconds);
    }
    public Optional<Integer> maxFailureWaitSeconds() {
        return Optional.ofNullable(this.maxFailureWaitSeconds);
    }
    public Optional<Integer> maxLoginFailures() {
        return Optional.ofNullable(this.maxLoginFailures);
    }
    public Optional<Integer> minimumQuickLoginWaitSeconds() {
        return Optional.ofNullable(this.minimumQuickLoginWaitSeconds);
    }
    public Optional<Boolean> permanentLockout() {
        return Optional.ofNullable(this.permanentLockout);
    }
    public Optional<Integer> quickLoginCheckMilliSeconds() {
        return Optional.ofNullable(this.quickLoginCheckMilliSeconds);
    }
    public Optional<Integer> waitIncrementSeconds() {
        return Optional.ofNullable(this.waitIncrementSeconds);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RealmSecurityDefensesBruteForceDetection defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer failureResetTimeSeconds;
        private @Nullable Integer maxFailureWaitSeconds;
        private @Nullable Integer maxLoginFailures;
        private @Nullable Integer minimumQuickLoginWaitSeconds;
        private @Nullable Boolean permanentLockout;
        private @Nullable Integer quickLoginCheckMilliSeconds;
        private @Nullable Integer waitIncrementSeconds;
        public Builder() {}
        public Builder(RealmSecurityDefensesBruteForceDetection defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.failureResetTimeSeconds = defaults.failureResetTimeSeconds;
    	      this.maxFailureWaitSeconds = defaults.maxFailureWaitSeconds;
    	      this.maxLoginFailures = defaults.maxLoginFailures;
    	      this.minimumQuickLoginWaitSeconds = defaults.minimumQuickLoginWaitSeconds;
    	      this.permanentLockout = defaults.permanentLockout;
    	      this.quickLoginCheckMilliSeconds = defaults.quickLoginCheckMilliSeconds;
    	      this.waitIncrementSeconds = defaults.waitIncrementSeconds;
        }

        @CustomType.Setter
        public Builder failureResetTimeSeconds(@Nullable Integer failureResetTimeSeconds) {

            this.failureResetTimeSeconds = failureResetTimeSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder maxFailureWaitSeconds(@Nullable Integer maxFailureWaitSeconds) {

            this.maxFailureWaitSeconds = maxFailureWaitSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder maxLoginFailures(@Nullable Integer maxLoginFailures) {

            this.maxLoginFailures = maxLoginFailures;
            return this;
        }
        @CustomType.Setter
        public Builder minimumQuickLoginWaitSeconds(@Nullable Integer minimumQuickLoginWaitSeconds) {

            this.minimumQuickLoginWaitSeconds = minimumQuickLoginWaitSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder permanentLockout(@Nullable Boolean permanentLockout) {

            this.permanentLockout = permanentLockout;
            return this;
        }
        @CustomType.Setter
        public Builder quickLoginCheckMilliSeconds(@Nullable Integer quickLoginCheckMilliSeconds) {

            this.quickLoginCheckMilliSeconds = quickLoginCheckMilliSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder waitIncrementSeconds(@Nullable Integer waitIncrementSeconds) {

            this.waitIncrementSeconds = waitIncrementSeconds;
            return this;
        }
        public RealmSecurityDefensesBruteForceDetection build() {
            final var _resultValue = new RealmSecurityDefensesBruteForceDetection();
            _resultValue.failureResetTimeSeconds = failureResetTimeSeconds;
            _resultValue.maxFailureWaitSeconds = maxFailureWaitSeconds;
            _resultValue.maxLoginFailures = maxLoginFailures;
            _resultValue.minimumQuickLoginWaitSeconds = minimumQuickLoginWaitSeconds;
            _resultValue.permanentLockout = permanentLockout;
            _resultValue.quickLoginCheckMilliSeconds = quickLoginCheckMilliSeconds;
            _resultValue.waitIncrementSeconds = waitIncrementSeconds;
            return _resultValue;
        }
    }
}
