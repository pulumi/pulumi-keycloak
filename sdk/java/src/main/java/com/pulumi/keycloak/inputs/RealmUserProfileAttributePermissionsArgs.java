// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.keycloak.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class RealmUserProfileAttributePermissionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final RealmUserProfileAttributePermissionsArgs Empty = new RealmUserProfileAttributePermissionsArgs();

    /**
     * A list of profiles that will be able to edit the attribute. One of `admin`, `user`.
     * 
     */
    @Import(name="edits", required=true)
    private Output<List<String>> edits;

    /**
     * @return A list of profiles that will be able to edit the attribute. One of `admin`, `user`.
     * 
     */
    public Output<List<String>> edits() {
        return this.edits;
    }

    /**
     * A list of profiles that will be able to view the attribute. One of `admin`, `user`.
     * 
     */
    @Import(name="views", required=true)
    private Output<List<String>> views;

    /**
     * @return A list of profiles that will be able to view the attribute. One of `admin`, `user`.
     * 
     */
    public Output<List<String>> views() {
        return this.views;
    }

    private RealmUserProfileAttributePermissionsArgs() {}

    private RealmUserProfileAttributePermissionsArgs(RealmUserProfileAttributePermissionsArgs $) {
        this.edits = $.edits;
        this.views = $.views;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RealmUserProfileAttributePermissionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RealmUserProfileAttributePermissionsArgs $;

        public Builder() {
            $ = new RealmUserProfileAttributePermissionsArgs();
        }

        public Builder(RealmUserProfileAttributePermissionsArgs defaults) {
            $ = new RealmUserProfileAttributePermissionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param edits A list of profiles that will be able to edit the attribute. One of `admin`, `user`.
         * 
         * @return builder
         * 
         */
        public Builder edits(Output<List<String>> edits) {
            $.edits = edits;
            return this;
        }

        /**
         * @param edits A list of profiles that will be able to edit the attribute. One of `admin`, `user`.
         * 
         * @return builder
         * 
         */
        public Builder edits(List<String> edits) {
            return edits(Output.of(edits));
        }

        /**
         * @param edits A list of profiles that will be able to edit the attribute. One of `admin`, `user`.
         * 
         * @return builder
         * 
         */
        public Builder edits(String... edits) {
            return edits(List.of(edits));
        }

        /**
         * @param views A list of profiles that will be able to view the attribute. One of `admin`, `user`.
         * 
         * @return builder
         * 
         */
        public Builder views(Output<List<String>> views) {
            $.views = views;
            return this;
        }

        /**
         * @param views A list of profiles that will be able to view the attribute. One of `admin`, `user`.
         * 
         * @return builder
         * 
         */
        public Builder views(List<String> views) {
            return views(Output.of(views));
        }

        /**
         * @param views A list of profiles that will be able to view the attribute. One of `admin`, `user`.
         * 
         * @return builder
         * 
         */
        public Builder views(String... views) {
            return views(List.of(views));
        }

        public RealmUserProfileAttributePermissionsArgs build() {
            if ($.edits == null) {
                throw new MissingRequiredPropertyException("RealmUserProfileAttributePermissionsArgs", "edits");
            }
            if ($.views == null) {
                throw new MissingRequiredPropertyException("RealmUserProfileAttributePermissionsArgs", "views");
            }
            return $;
        }
    }

}
