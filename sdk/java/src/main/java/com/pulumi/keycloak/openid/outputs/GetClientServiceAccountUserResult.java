// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.keycloak.openid.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.keycloak.openid.outputs.GetClientServiceAccountUserFederatedIdentity;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetClientServiceAccountUserResult {
    private Map<String,Object> attributes;
    private String clientId;
    private String email;
    private Boolean emailVerified;
    private Boolean enabled;
    private List<GetClientServiceAccountUserFederatedIdentity> federatedIdentities;
    private String firstName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String lastName;
    private String realmId;
    private String username;

    private GetClientServiceAccountUserResult() {}
    public Map<String,Object> attributes() {
        return this.attributes;
    }
    public String clientId() {
        return this.clientId;
    }
    public String email() {
        return this.email;
    }
    public Boolean emailVerified() {
        return this.emailVerified;
    }
    public Boolean enabled() {
        return this.enabled;
    }
    public List<GetClientServiceAccountUserFederatedIdentity> federatedIdentities() {
        return this.federatedIdentities;
    }
    public String firstName() {
        return this.firstName;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String lastName() {
        return this.lastName;
    }
    public String realmId() {
        return this.realmId;
    }
    public String username() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClientServiceAccountUserResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Map<String,Object> attributes;
        private String clientId;
        private String email;
        private Boolean emailVerified;
        private Boolean enabled;
        private List<GetClientServiceAccountUserFederatedIdentity> federatedIdentities;
        private String firstName;
        private String id;
        private String lastName;
        private String realmId;
        private String username;
        public Builder() {}
        public Builder(GetClientServiceAccountUserResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attributes = defaults.attributes;
    	      this.clientId = defaults.clientId;
    	      this.email = defaults.email;
    	      this.emailVerified = defaults.emailVerified;
    	      this.enabled = defaults.enabled;
    	      this.federatedIdentities = defaults.federatedIdentities;
    	      this.firstName = defaults.firstName;
    	      this.id = defaults.id;
    	      this.lastName = defaults.lastName;
    	      this.realmId = defaults.realmId;
    	      this.username = defaults.username;
        }

        @CustomType.Setter
        public Builder attributes(Map<String,Object> attributes) {
            this.attributes = Objects.requireNonNull(attributes);
            return this;
        }
        @CustomType.Setter
        public Builder clientId(String clientId) {
            this.clientId = Objects.requireNonNull(clientId);
            return this;
        }
        @CustomType.Setter
        public Builder email(String email) {
            this.email = Objects.requireNonNull(email);
            return this;
        }
        @CustomType.Setter
        public Builder emailVerified(Boolean emailVerified) {
            this.emailVerified = Objects.requireNonNull(emailVerified);
            return this;
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            this.enabled = Objects.requireNonNull(enabled);
            return this;
        }
        @CustomType.Setter
        public Builder federatedIdentities(List<GetClientServiceAccountUserFederatedIdentity> federatedIdentities) {
            this.federatedIdentities = Objects.requireNonNull(federatedIdentities);
            return this;
        }
        public Builder federatedIdentities(GetClientServiceAccountUserFederatedIdentity... federatedIdentities) {
            return federatedIdentities(List.of(federatedIdentities));
        }
        @CustomType.Setter
        public Builder firstName(String firstName) {
            this.firstName = Objects.requireNonNull(firstName);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder lastName(String lastName) {
            this.lastName = Objects.requireNonNull(lastName);
            return this;
        }
        @CustomType.Setter
        public Builder realmId(String realmId) {
            this.realmId = Objects.requireNonNull(realmId);
            return this;
        }
        @CustomType.Setter
        public Builder username(String username) {
            this.username = Objects.requireNonNull(username);
            return this;
        }
        public GetClientServiceAccountUserResult build() {
            final var _resultValue = new GetClientServiceAccountUserResult();
            _resultValue.attributes = attributes;
            _resultValue.clientId = clientId;
            _resultValue.email = email;
            _resultValue.emailVerified = emailVerified;
            _resultValue.enabled = enabled;
            _resultValue.federatedIdentities = federatedIdentities;
            _resultValue.firstName = firstName;
            _resultValue.id = id;
            _resultValue.lastName = lastName;
            _resultValue.realmId = realmId;
            _resultValue.username = username;
            return _resultValue;
        }
    }
}
