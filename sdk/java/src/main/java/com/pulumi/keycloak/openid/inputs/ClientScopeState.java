// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.keycloak.openid.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClientScopeState extends com.pulumi.resources.ResourceArgs {

    public static final ClientScopeState Empty = new ClientScopeState();

    /**
     * When set, a consent screen will be displayed to users authenticating to clients with this scope attached. The consent screen will display the string value of this attribute.
     * 
     */
    @Import(name="consentScreenText")
    private @Nullable Output<String> consentScreenText;

    /**
     * @return When set, a consent screen will be displayed to users authenticating to clients with this scope attached. The consent screen will display the string value of this attribute.
     * 
     */
    public Optional<Output<String>> consentScreenText() {
        return Optional.ofNullable(this.consentScreenText);
    }

    /**
     * The description of this client scope in the GUI.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of this client scope in the GUI.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Specify order of the client scope in GUI (such as in Consent page) as integer.
     * 
     */
    @Import(name="guiOrder")
    private @Nullable Output<Integer> guiOrder;

    /**
     * @return Specify order of the client scope in GUI (such as in Consent page) as integer.
     * 
     */
    public Optional<Output<Integer>> guiOrder() {
        return Optional.ofNullable(this.guiOrder);
    }

    /**
     * When `true`, the name of this client scope will be added to the access token property &#39;scope&#39; as well as to the Token Introspection Endpoint response.
     * 
     */
    @Import(name="includeInTokenScope")
    private @Nullable Output<Boolean> includeInTokenScope;

    /**
     * @return When `true`, the name of this client scope will be added to the access token property &#39;scope&#39; as well as to the Token Introspection Endpoint response.
     * 
     */
    public Optional<Output<Boolean>> includeInTokenScope() {
        return Optional.ofNullable(this.includeInTokenScope);
    }

    /**
     * The display name of this client scope in the GUI.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The display name of this client scope in the GUI.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The realm this client scope belongs to.
     * 
     */
    @Import(name="realmId")
    private @Nullable Output<String> realmId;

    /**
     * @return The realm this client scope belongs to.
     * 
     */
    public Optional<Output<String>> realmId() {
        return Optional.ofNullable(this.realmId);
    }

    private ClientScopeState() {}

    private ClientScopeState(ClientScopeState $) {
        this.consentScreenText = $.consentScreenText;
        this.description = $.description;
        this.guiOrder = $.guiOrder;
        this.includeInTokenScope = $.includeInTokenScope;
        this.name = $.name;
        this.realmId = $.realmId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClientScopeState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClientScopeState $;

        public Builder() {
            $ = new ClientScopeState();
        }

        public Builder(ClientScopeState defaults) {
            $ = new ClientScopeState(Objects.requireNonNull(defaults));
        }

        /**
         * @param consentScreenText When set, a consent screen will be displayed to users authenticating to clients with this scope attached. The consent screen will display the string value of this attribute.
         * 
         * @return builder
         * 
         */
        public Builder consentScreenText(@Nullable Output<String> consentScreenText) {
            $.consentScreenText = consentScreenText;
            return this;
        }

        /**
         * @param consentScreenText When set, a consent screen will be displayed to users authenticating to clients with this scope attached. The consent screen will display the string value of this attribute.
         * 
         * @return builder
         * 
         */
        public Builder consentScreenText(String consentScreenText) {
            return consentScreenText(Output.of(consentScreenText));
        }

        /**
         * @param description The description of this client scope in the GUI.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of this client scope in the GUI.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param guiOrder Specify order of the client scope in GUI (such as in Consent page) as integer.
         * 
         * @return builder
         * 
         */
        public Builder guiOrder(@Nullable Output<Integer> guiOrder) {
            $.guiOrder = guiOrder;
            return this;
        }

        /**
         * @param guiOrder Specify order of the client scope in GUI (such as in Consent page) as integer.
         * 
         * @return builder
         * 
         */
        public Builder guiOrder(Integer guiOrder) {
            return guiOrder(Output.of(guiOrder));
        }

        /**
         * @param includeInTokenScope When `true`, the name of this client scope will be added to the access token property &#39;scope&#39; as well as to the Token Introspection Endpoint response.
         * 
         * @return builder
         * 
         */
        public Builder includeInTokenScope(@Nullable Output<Boolean> includeInTokenScope) {
            $.includeInTokenScope = includeInTokenScope;
            return this;
        }

        /**
         * @param includeInTokenScope When `true`, the name of this client scope will be added to the access token property &#39;scope&#39; as well as to the Token Introspection Endpoint response.
         * 
         * @return builder
         * 
         */
        public Builder includeInTokenScope(Boolean includeInTokenScope) {
            return includeInTokenScope(Output.of(includeInTokenScope));
        }

        /**
         * @param name The display name of this client scope in the GUI.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The display name of this client scope in the GUI.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param realmId The realm this client scope belongs to.
         * 
         * @return builder
         * 
         */
        public Builder realmId(@Nullable Output<String> realmId) {
            $.realmId = realmId;
            return this;
        }

        /**
         * @param realmId The realm this client scope belongs to.
         * 
         * @return builder
         * 
         */
        public Builder realmId(String realmId) {
            return realmId(Output.of(realmId));
        }

        public ClientScopeState build() {
            return $;
        }
    }

}
