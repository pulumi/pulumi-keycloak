// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.keycloak;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.keycloak.RealmArgs;
import com.pulumi.keycloak.Utilities;
import com.pulumi.keycloak.inputs.RealmState;
import com.pulumi.keycloak.outputs.RealmInternationalization;
import com.pulumi.keycloak.outputs.RealmOtpPolicy;
import com.pulumi.keycloak.outputs.RealmSecurityDefenses;
import com.pulumi.keycloak.outputs.RealmSmtpServer;
import com.pulumi.keycloak.outputs.RealmWebAuthnPasswordlessPolicy;
import com.pulumi.keycloak.outputs.RealmWebAuthnPolicy;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Allows for creating and managing Realms within Keycloak.
 * 
 * A realm manages a logical collection of users, credentials, roles, and groups. Users log in to realms and can be federated
 * from multiple sources.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.keycloak.Realm;
 * import com.pulumi.keycloak.RealmArgs;
 * import com.pulumi.keycloak.inputs.RealmSmtpServerArgs;
 * import com.pulumi.keycloak.inputs.RealmSmtpServerAuthArgs;
 * import com.pulumi.keycloak.inputs.RealmInternationalizationArgs;
 * import com.pulumi.keycloak.inputs.RealmSecurityDefensesArgs;
 * import com.pulumi.keycloak.inputs.RealmSecurityDefensesHeadersArgs;
 * import com.pulumi.keycloak.inputs.RealmSecurityDefensesBruteForceDetectionArgs;
 * import com.pulumi.keycloak.inputs.RealmWebAuthnPolicyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         var realm = new Realm("realm", RealmArgs.builder()
 *             .realm("my-realm")
 *             .enabled(true)
 *             .displayName("my realm")
 *             .displayNameHtml("<b>my realm</b>")
 *             .loginTheme("base")
 *             .accessCodeLifespan("1h")
 *             .sslRequired("external")
 *             .passwordPolicy("upperCase(1) and length(8) and forceExpiredPasswordChange(365) and notUsername")
 *             .attributes(Map.of("mycustomAttribute", "myCustomValue"))
 *             .smtpServer(RealmSmtpServerArgs.builder()
 *                 .host("smtp.example.com")
 *                 .from("example}{@literal @}{@code example.com")
 *                 .auth(RealmSmtpServerAuthArgs.builder()
 *                     .username("tom")
 *                     .password("password")
 *                     .build())
 *                 .build())
 *             .internationalization(RealmInternationalizationArgs.builder()
 *                 .supportedLocales(                
 *                     "en",
 *                     "de",
 *                     "es")
 *                 .defaultLocale("en")
 *                 .build())
 *             .securityDefenses(RealmSecurityDefensesArgs.builder()
 *                 .headers(RealmSecurityDefensesHeadersArgs.builder()
 *                     .xFrameOptions("DENY")
 *                     .contentSecurityPolicy("frame-src 'self'; frame-ancestors 'self'; object-src 'none';")
 *                     .contentSecurityPolicyReportOnly("")
 *                     .xContentTypeOptions("nosniff")
 *                     .xRobotsTag("none")
 *                     .xXssProtection("1; mode=block")
 *                     .strictTransportSecurity("max-age=31536000; includeSubDomains")
 *                     .build())
 *                 .bruteForceDetection(RealmSecurityDefensesBruteForceDetectionArgs.builder()
 *                     .permanentLockout(false)
 *                     .maxLoginFailures(30)
 *                     .waitIncrementSeconds(60)
 *                     .quickLoginCheckMilliSeconds(1000)
 *                     .minimumQuickLoginWaitSeconds(60)
 *                     .maxFailureWaitSeconds(900)
 *                     .failureResetTimeSeconds(43200)
 *                     .build())
 *                 .build())
 *             .webAuthnPolicy(RealmWebAuthnPolicyArgs.builder()
 *                 .relyingPartyEntityName("Example")
 *                 .relyingPartyId("keycloak.example.com")
 *                 .signatureAlgorithms(                
 *                     "ES256",
 *                     "RS256")
 *                 .build())
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Default Client Scopes
 * 
 * - `default_default_client_scopes` - (Optional) A list of default `default client scopes` to be used for client definitions. Defaults to `[]` or keycloak&#39;s built-in default `default client-scopes`. For an alternative, please refer to the dedicated resource `keycloak.RealmDefaultClientScopes`.
 * - `default_optional_client_scopes` - (Optional) A list of default `optional client scopes` to be used for client definitions. Defaults to `[]` or keycloak&#39;s built-in default `optional client-scopes`. For an alternative, please refer to the dedicated resource `keycloak.RealmOptionalClientScopes`.
 * 
 * ## Import
 * 
 * Realms can be imported using their name.
 * 
 * Example:
 * 
 * bash
 * 
 * ```sh
 * $ pulumi import keycloak:index/realm:Realm realm my-realm
 * ```
 * 
 */
@ResourceType(type="keycloak:index/realm:Realm")
public class Realm extends com.pulumi.resources.CustomResource {
    @Export(name="accessCodeLifespan", refs={String.class}, tree="[0]")
    private Output<String> accessCodeLifespan;

    public Output<String> accessCodeLifespan() {
        return this.accessCodeLifespan;
    }
    @Export(name="accessCodeLifespanLogin", refs={String.class}, tree="[0]")
    private Output<String> accessCodeLifespanLogin;

    public Output<String> accessCodeLifespanLogin() {
        return this.accessCodeLifespanLogin;
    }
    @Export(name="accessCodeLifespanUserAction", refs={String.class}, tree="[0]")
    private Output<String> accessCodeLifespanUserAction;

    public Output<String> accessCodeLifespanUserAction() {
        return this.accessCodeLifespanUserAction;
    }
    @Export(name="accessTokenLifespan", refs={String.class}, tree="[0]")
    private Output<String> accessTokenLifespan;

    public Output<String> accessTokenLifespan() {
        return this.accessTokenLifespan;
    }
    @Export(name="accessTokenLifespanForImplicitFlow", refs={String.class}, tree="[0]")
    private Output<String> accessTokenLifespanForImplicitFlow;

    public Output<String> accessTokenLifespanForImplicitFlow() {
        return this.accessTokenLifespanForImplicitFlow;
    }
    @Export(name="accountTheme", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> accountTheme;

    public Output<Optional<String>> accountTheme() {
        return Codegen.optional(this.accountTheme);
    }
    @Export(name="actionTokenGeneratedByAdminLifespan", refs={String.class}, tree="[0]")
    private Output<String> actionTokenGeneratedByAdminLifespan;

    public Output<String> actionTokenGeneratedByAdminLifespan() {
        return this.actionTokenGeneratedByAdminLifespan;
    }
    @Export(name="actionTokenGeneratedByUserLifespan", refs={String.class}, tree="[0]")
    private Output<String> actionTokenGeneratedByUserLifespan;

    public Output<String> actionTokenGeneratedByUserLifespan() {
        return this.actionTokenGeneratedByUserLifespan;
    }
    @Export(name="adminTheme", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> adminTheme;

    public Output<Optional<String>> adminTheme() {
        return Codegen.optional(this.adminTheme);
    }
    /**
     * A map of custom attributes to add to the realm.
     * 
     */
    @Export(name="attributes", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> attributes;

    /**
     * @return A map of custom attributes to add to the realm.
     * 
     */
    public Output<Optional<Map<String,String>>> attributes() {
        return Codegen.optional(this.attributes);
    }
    /**
     * Which flow should be used for BrowserFlow
     * 
     */
    @Export(name="browserFlow", refs={String.class}, tree="[0]")
    private Output<String> browserFlow;

    /**
     * @return Which flow should be used for BrowserFlow
     * 
     */
    public Output<String> browserFlow() {
        return this.browserFlow;
    }
    /**
     * Which flow should be used for ClientAuthenticationFlow
     * 
     */
    @Export(name="clientAuthenticationFlow", refs={String.class}, tree="[0]")
    private Output<String> clientAuthenticationFlow;

    /**
     * @return Which flow should be used for ClientAuthenticationFlow
     * 
     */
    public Output<String> clientAuthenticationFlow() {
        return this.clientAuthenticationFlow;
    }
    @Export(name="clientSessionIdleTimeout", refs={String.class}, tree="[0]")
    private Output<String> clientSessionIdleTimeout;

    public Output<String> clientSessionIdleTimeout() {
        return this.clientSessionIdleTimeout;
    }
    @Export(name="clientSessionMaxLifespan", refs={String.class}, tree="[0]")
    private Output<String> clientSessionMaxLifespan;

    public Output<String> clientSessionMaxLifespan() {
        return this.clientSessionMaxLifespan;
    }
    @Export(name="defaultDefaultClientScopes", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> defaultDefaultClientScopes;

    public Output<Optional<List<String>>> defaultDefaultClientScopes() {
        return Codegen.optional(this.defaultDefaultClientScopes);
    }
    @Export(name="defaultOptionalClientScopes", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> defaultOptionalClientScopes;

    public Output<Optional<List<String>>> defaultOptionalClientScopes() {
        return Codegen.optional(this.defaultOptionalClientScopes);
    }
    @Export(name="defaultSignatureAlgorithm", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> defaultSignatureAlgorithm;

    public Output<Optional<String>> defaultSignatureAlgorithm() {
        return Codegen.optional(this.defaultSignatureAlgorithm);
    }
    /**
     * Which flow should be used for DirectGrantFlow
     * 
     */
    @Export(name="directGrantFlow", refs={String.class}, tree="[0]")
    private Output<String> directGrantFlow;

    /**
     * @return Which flow should be used for DirectGrantFlow
     * 
     */
    public Output<String> directGrantFlow() {
        return this.directGrantFlow;
    }
    /**
     * The display name for the realm that is shown when logging in to the admin console.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> displayName;

    /**
     * @return The display name for the realm that is shown when logging in to the admin console.
     * 
     */
    public Output<Optional<String>> displayName() {
        return Codegen.optional(this.displayName);
    }
    /**
     * The display name for the realm that is rendered as HTML on the screen when logging in to the admin console.
     * 
     */
    @Export(name="displayNameHtml", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> displayNameHtml;

    /**
     * @return The display name for the realm that is rendered as HTML on the screen when logging in to the admin console.
     * 
     */
    public Output<Optional<String>> displayNameHtml() {
        return Codegen.optional(this.displayNameHtml);
    }
    /**
     * Which flow should be used for DockerAuthenticationFlow
     * 
     */
    @Export(name="dockerAuthenticationFlow", refs={String.class}, tree="[0]")
    private Output<String> dockerAuthenticationFlow;

    /**
     * @return Which flow should be used for DockerAuthenticationFlow
     * 
     */
    public Output<String> dockerAuthenticationFlow() {
        return this.dockerAuthenticationFlow;
    }
    @Export(name="duplicateEmailsAllowed", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> duplicateEmailsAllowed;

    public Output<Boolean> duplicateEmailsAllowed() {
        return this.duplicateEmailsAllowed;
    }
    @Export(name="editUsernameAllowed", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> editUsernameAllowed;

    public Output<Boolean> editUsernameAllowed() {
        return this.editUsernameAllowed;
    }
    @Export(name="emailTheme", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> emailTheme;

    public Output<Optional<String>> emailTheme() {
        return Codegen.optional(this.emailTheme);
    }
    /**
     * When `false`, users and clients will not be able to access this realm. Defaults to `true`.
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enabled;

    /**
     * @return When `false`, users and clients will not be able to access this realm. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> enabled() {
        return Codegen.optional(this.enabled);
    }
    /**
     * Which flow should be used for FirstBrokerLoginFlow
     * 
     */
    @Export(name="firstBrokerLoginFlow", refs={String.class}, tree="[0]")
    private Output<String> firstBrokerLoginFlow;

    /**
     * @return Which flow should be used for FirstBrokerLoginFlow
     * 
     */
    public Output<String> firstBrokerLoginFlow() {
        return this.firstBrokerLoginFlow;
    }
    /**
     * When specified, this will be used as the realm&#39;s internal ID within Keycloak. When not specified, the realm&#39;s internal ID will be set to the realm&#39;s name.
     * 
     */
    @Export(name="internalId", refs={String.class}, tree="[0]")
    private Output<String> internalId;

    /**
     * @return When specified, this will be used as the realm&#39;s internal ID within Keycloak. When not specified, the realm&#39;s internal ID will be set to the realm&#39;s name.
     * 
     */
    public Output<String> internalId() {
        return this.internalId;
    }
    @Export(name="internationalization", refs={RealmInternationalization.class}, tree="[0]")
    private Output</* @Nullable */ RealmInternationalization> internationalization;

    public Output<Optional<RealmInternationalization>> internationalization() {
        return Codegen.optional(this.internationalization);
    }
    @Export(name="loginTheme", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> loginTheme;

    public Output<Optional<String>> loginTheme() {
        return Codegen.optional(this.loginTheme);
    }
    @Export(name="loginWithEmailAllowed", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> loginWithEmailAllowed;

    public Output<Boolean> loginWithEmailAllowed() {
        return this.loginWithEmailAllowed;
    }
    @Export(name="oauth2DeviceCodeLifespan", refs={String.class}, tree="[0]")
    private Output<String> oauth2DeviceCodeLifespan;

    public Output<String> oauth2DeviceCodeLifespan() {
        return this.oauth2DeviceCodeLifespan;
    }
    @Export(name="oauth2DevicePollingInterval", refs={Integer.class}, tree="[0]")
    private Output<Integer> oauth2DevicePollingInterval;

    public Output<Integer> oauth2DevicePollingInterval() {
        return this.oauth2DevicePollingInterval;
    }
    @Export(name="offlineSessionIdleTimeout", refs={String.class}, tree="[0]")
    private Output<String> offlineSessionIdleTimeout;

    public Output<String> offlineSessionIdleTimeout() {
        return this.offlineSessionIdleTimeout;
    }
    @Export(name="offlineSessionMaxLifespan", refs={String.class}, tree="[0]")
    private Output<String> offlineSessionMaxLifespan;

    public Output<String> offlineSessionMaxLifespan() {
        return this.offlineSessionMaxLifespan;
    }
    @Export(name="offlineSessionMaxLifespanEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> offlineSessionMaxLifespanEnabled;

    public Output<Optional<Boolean>> offlineSessionMaxLifespanEnabled() {
        return Codegen.optional(this.offlineSessionMaxLifespanEnabled);
    }
    /**
     * When `true`, organization support is enabled. Defaults to `false`.
     * 
     */
    @Export(name="organizationsEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> organizationsEnabled;

    /**
     * @return When `true`, organization support is enabled. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> organizationsEnabled() {
        return Codegen.optional(this.organizationsEnabled);
    }
    @Export(name="otpPolicy", refs={RealmOtpPolicy.class}, tree="[0]")
    private Output<RealmOtpPolicy> otpPolicy;

    public Output<RealmOtpPolicy> otpPolicy() {
        return this.otpPolicy;
    }
    /**
     * String that represents the passwordPolicies that are in place. Each policy is separated with &#34; and &#34;. Supported policies
     * can be found in the server-info providers page. example: &#34;upperCase(1) and length(8) and forceExpiredPasswordChange(365)
     * and notUsername(undefined)&#34;
     * 
     */
    @Export(name="passwordPolicy", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> passwordPolicy;

    /**
     * @return String that represents the passwordPolicies that are in place. Each policy is separated with &#34; and &#34;. Supported policies
     * can be found in the server-info providers page. example: &#34;upperCase(1) and length(8) and forceExpiredPasswordChange(365)
     * and notUsername(undefined)&#34;
     * 
     */
    public Output<Optional<String>> passwordPolicy() {
        return Codegen.optional(this.passwordPolicy);
    }
    /**
     * The name of the realm. This is unique across Keycloak. This will also be used as the realm&#39;s internal ID within Keycloak.
     * 
     */
    @Export(name="realm", refs={String.class}, tree="[0]")
    private Output<String> realm;

    /**
     * @return The name of the realm. This is unique across Keycloak. This will also be used as the realm&#39;s internal ID within Keycloak.
     * 
     */
    public Output<String> realm() {
        return this.realm;
    }
    @Export(name="refreshTokenMaxReuse", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> refreshTokenMaxReuse;

    public Output<Optional<Integer>> refreshTokenMaxReuse() {
        return Codegen.optional(this.refreshTokenMaxReuse);
    }
    @Export(name="registrationAllowed", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> registrationAllowed;

    public Output<Boolean> registrationAllowed() {
        return this.registrationAllowed;
    }
    @Export(name="registrationEmailAsUsername", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> registrationEmailAsUsername;

    public Output<Boolean> registrationEmailAsUsername() {
        return this.registrationEmailAsUsername;
    }
    /**
     * Which flow should be used for RegistrationFlow
     * 
     */
    @Export(name="registrationFlow", refs={String.class}, tree="[0]")
    private Output<String> registrationFlow;

    /**
     * @return Which flow should be used for RegistrationFlow
     * 
     */
    public Output<String> registrationFlow() {
        return this.registrationFlow;
    }
    @Export(name="rememberMe", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> rememberMe;

    public Output<Boolean> rememberMe() {
        return this.rememberMe;
    }
    /**
     * Which flow should be used for ResetCredentialsFlow
     * 
     */
    @Export(name="resetCredentialsFlow", refs={String.class}, tree="[0]")
    private Output<String> resetCredentialsFlow;

    /**
     * @return Which flow should be used for ResetCredentialsFlow
     * 
     */
    public Output<String> resetCredentialsFlow() {
        return this.resetCredentialsFlow;
    }
    @Export(name="resetPasswordAllowed", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> resetPasswordAllowed;

    public Output<Boolean> resetPasswordAllowed() {
        return this.resetPasswordAllowed;
    }
    @Export(name="revokeRefreshToken", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> revokeRefreshToken;

    public Output<Optional<Boolean>> revokeRefreshToken() {
        return Codegen.optional(this.revokeRefreshToken);
    }
    @Export(name="securityDefenses", refs={RealmSecurityDefenses.class}, tree="[0]")
    private Output</* @Nullable */ RealmSecurityDefenses> securityDefenses;

    public Output<Optional<RealmSecurityDefenses>> securityDefenses() {
        return Codegen.optional(this.securityDefenses);
    }
    @Export(name="smtpServer", refs={RealmSmtpServer.class}, tree="[0]")
    private Output</* @Nullable */ RealmSmtpServer> smtpServer;

    public Output<Optional<RealmSmtpServer>> smtpServer() {
        return Codegen.optional(this.smtpServer);
    }
    /**
     * SSL Required: Values can be &#39;none&#39;, &#39;external&#39; or &#39;all&#39;.
     * 
     */
    @Export(name="sslRequired", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> sslRequired;

    /**
     * @return SSL Required: Values can be &#39;none&#39;, &#39;external&#39; or &#39;all&#39;.
     * 
     */
    public Output<Optional<String>> sslRequired() {
        return Codegen.optional(this.sslRequired);
    }
    @Export(name="ssoSessionIdleTimeout", refs={String.class}, tree="[0]")
    private Output<String> ssoSessionIdleTimeout;

    public Output<String> ssoSessionIdleTimeout() {
        return this.ssoSessionIdleTimeout;
    }
    @Export(name="ssoSessionIdleTimeoutRememberMe", refs={String.class}, tree="[0]")
    private Output<String> ssoSessionIdleTimeoutRememberMe;

    public Output<String> ssoSessionIdleTimeoutRememberMe() {
        return this.ssoSessionIdleTimeoutRememberMe;
    }
    @Export(name="ssoSessionMaxLifespan", refs={String.class}, tree="[0]")
    private Output<String> ssoSessionMaxLifespan;

    public Output<String> ssoSessionMaxLifespan() {
        return this.ssoSessionMaxLifespan;
    }
    @Export(name="ssoSessionMaxLifespanRememberMe", refs={String.class}, tree="[0]")
    private Output<String> ssoSessionMaxLifespanRememberMe;

    public Output<String> ssoSessionMaxLifespanRememberMe() {
        return this.ssoSessionMaxLifespanRememberMe;
    }
    /**
     * When `true`, users are allowed to manage their own resources. Defaults to `false`.
     * 
     */
    @Export(name="userManagedAccess", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> userManagedAccess;

    /**
     * @return When `true`, users are allowed to manage their own resources. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> userManagedAccess() {
        return Codegen.optional(this.userManagedAccess);
    }
    @Export(name="verifyEmail", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> verifyEmail;

    public Output<Boolean> verifyEmail() {
        return this.verifyEmail;
    }
    @Export(name="webAuthnPasswordlessPolicy", refs={RealmWebAuthnPasswordlessPolicy.class}, tree="[0]")
    private Output<RealmWebAuthnPasswordlessPolicy> webAuthnPasswordlessPolicy;

    public Output<RealmWebAuthnPasswordlessPolicy> webAuthnPasswordlessPolicy() {
        return this.webAuthnPasswordlessPolicy;
    }
    @Export(name="webAuthnPolicy", refs={RealmWebAuthnPolicy.class}, tree="[0]")
    private Output<RealmWebAuthnPolicy> webAuthnPolicy;

    public Output<RealmWebAuthnPolicy> webAuthnPolicy() {
        return this.webAuthnPolicy;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Realm(java.lang.String name) {
        this(name, RealmArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Realm(java.lang.String name, RealmArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Realm(java.lang.String name, RealmArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("keycloak:index/realm:Realm", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Realm(java.lang.String name, Output<java.lang.String> id, @Nullable RealmState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("keycloak:index/realm:Realm", name, state, makeResourceOptions(options, id), false);
    }

    private static RealmArgs makeArgs(RealmArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? RealmArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Realm get(java.lang.String name, Output<java.lang.String> id, @Nullable RealmState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Realm(name, id, state, options);
    }
}
