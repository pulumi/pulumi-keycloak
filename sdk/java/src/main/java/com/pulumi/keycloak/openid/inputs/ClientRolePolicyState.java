// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.keycloak.openid.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.keycloak.openid.inputs.ClientRolePolicyRoleArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClientRolePolicyState extends com.pulumi.resources.ResourceArgs {

    public static final ClientRolePolicyState Empty = new ClientRolePolicyState();

    @Import(name="decisionStrategy")
    private @Nullable Output<String> decisionStrategy;

    public Optional<Output<String>> decisionStrategy() {
        return Optional.ofNullable(this.decisionStrategy);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="fetchRoles")
    private @Nullable Output<Boolean> fetchRoles;

    public Optional<Output<Boolean>> fetchRoles() {
        return Optional.ofNullable(this.fetchRoles);
    }

    @Import(name="logic")
    private @Nullable Output<String> logic;

    public Optional<Output<String>> logic() {
        return Optional.ofNullable(this.logic);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="realmId")
    private @Nullable Output<String> realmId;

    public Optional<Output<String>> realmId() {
        return Optional.ofNullable(this.realmId);
    }

    @Import(name="resourceServerId")
    private @Nullable Output<String> resourceServerId;

    public Optional<Output<String>> resourceServerId() {
        return Optional.ofNullable(this.resourceServerId);
    }

    @Import(name="roles")
    private @Nullable Output<List<ClientRolePolicyRoleArgs>> roles;

    public Optional<Output<List<ClientRolePolicyRoleArgs>>> roles() {
        return Optional.ofNullable(this.roles);
    }

    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private ClientRolePolicyState() {}

    private ClientRolePolicyState(ClientRolePolicyState $) {
        this.decisionStrategy = $.decisionStrategy;
        this.description = $.description;
        this.fetchRoles = $.fetchRoles;
        this.logic = $.logic;
        this.name = $.name;
        this.realmId = $.realmId;
        this.resourceServerId = $.resourceServerId;
        this.roles = $.roles;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClientRolePolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClientRolePolicyState $;

        public Builder() {
            $ = new ClientRolePolicyState();
        }

        public Builder(ClientRolePolicyState defaults) {
            $ = new ClientRolePolicyState(Objects.requireNonNull(defaults));
        }

        public Builder decisionStrategy(@Nullable Output<String> decisionStrategy) {
            $.decisionStrategy = decisionStrategy;
            return this;
        }

        public Builder decisionStrategy(String decisionStrategy) {
            return decisionStrategy(Output.of(decisionStrategy));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder fetchRoles(@Nullable Output<Boolean> fetchRoles) {
            $.fetchRoles = fetchRoles;
            return this;
        }

        public Builder fetchRoles(Boolean fetchRoles) {
            return fetchRoles(Output.of(fetchRoles));
        }

        public Builder logic(@Nullable Output<String> logic) {
            $.logic = logic;
            return this;
        }

        public Builder logic(String logic) {
            return logic(Output.of(logic));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder realmId(@Nullable Output<String> realmId) {
            $.realmId = realmId;
            return this;
        }

        public Builder realmId(String realmId) {
            return realmId(Output.of(realmId));
        }

        public Builder resourceServerId(@Nullable Output<String> resourceServerId) {
            $.resourceServerId = resourceServerId;
            return this;
        }

        public Builder resourceServerId(String resourceServerId) {
            return resourceServerId(Output.of(resourceServerId));
        }

        public Builder roles(@Nullable Output<List<ClientRolePolicyRoleArgs>> roles) {
            $.roles = roles;
            return this;
        }

        public Builder roles(List<ClientRolePolicyRoleArgs> roles) {
            return roles(Output.of(roles));
        }

        public Builder roles(ClientRolePolicyRoleArgs... roles) {
            return roles(List.of(roles));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public ClientRolePolicyState build() {
            return $;
        }
    }

}
