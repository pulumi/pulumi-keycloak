// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.keycloak.authentication.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BindingsState extends com.pulumi.resources.ResourceArgs {

    public static final BindingsState Empty = new BindingsState();

    /**
     * The alias of the flow to assign to the realm BrowserFlow.
     * 
     */
    @Import(name="browserFlow")
    private @Nullable Output<String> browserFlow;

    /**
     * @return The alias of the flow to assign to the realm BrowserFlow.
     * 
     */
    public Optional<Output<String>> browserFlow() {
        return Optional.ofNullable(this.browserFlow);
    }

    /**
     * The alias of the flow to assign to the realm ClientAuthenticationFlow.
     * 
     */
    @Import(name="clientAuthenticationFlow")
    private @Nullable Output<String> clientAuthenticationFlow;

    /**
     * @return The alias of the flow to assign to the realm ClientAuthenticationFlow.
     * 
     */
    public Optional<Output<String>> clientAuthenticationFlow() {
        return Optional.ofNullable(this.clientAuthenticationFlow);
    }

    /**
     * The alias of the flow to assign to the realm DirectGrantFlow.
     * 
     */
    @Import(name="directGrantFlow")
    private @Nullable Output<String> directGrantFlow;

    /**
     * @return The alias of the flow to assign to the realm DirectGrantFlow.
     * 
     */
    public Optional<Output<String>> directGrantFlow() {
        return Optional.ofNullable(this.directGrantFlow);
    }

    /**
     * The alias of the flow to assign to the realm DockerAuthenticationFlow.
     * 
     */
    @Import(name="dockerAuthenticationFlow")
    private @Nullable Output<String> dockerAuthenticationFlow;

    /**
     * @return The alias of the flow to assign to the realm DockerAuthenticationFlow.
     * 
     */
    public Optional<Output<String>> dockerAuthenticationFlow() {
        return Optional.ofNullable(this.dockerAuthenticationFlow);
    }

    /**
     * The alias of the flow to assign to the realm FirstBrokerLoginFlow (since Keycloak 24).
     * 
     */
    @Import(name="firstBrokerLoginFlow")
    private @Nullable Output<String> firstBrokerLoginFlow;

    /**
     * @return The alias of the flow to assign to the realm FirstBrokerLoginFlow (since Keycloak 24).
     * 
     */
    public Optional<Output<String>> firstBrokerLoginFlow() {
        return Optional.ofNullable(this.firstBrokerLoginFlow);
    }

    /**
     * The realm the authentication flow binding exists in.
     * 
     */
    @Import(name="realmId")
    private @Nullable Output<String> realmId;

    /**
     * @return The realm the authentication flow binding exists in.
     * 
     */
    public Optional<Output<String>> realmId() {
        return Optional.ofNullable(this.realmId);
    }

    /**
     * The alias of the flow to assign to the realm RegistrationFlow.
     * 
     */
    @Import(name="registrationFlow")
    private @Nullable Output<String> registrationFlow;

    /**
     * @return The alias of the flow to assign to the realm RegistrationFlow.
     * 
     */
    public Optional<Output<String>> registrationFlow() {
        return Optional.ofNullable(this.registrationFlow);
    }

    /**
     * The alias of the flow to assign to the realm ResetCredentialsFlow.
     * 
     */
    @Import(name="resetCredentialsFlow")
    private @Nullable Output<String> resetCredentialsFlow;

    /**
     * @return The alias of the flow to assign to the realm ResetCredentialsFlow.
     * 
     */
    public Optional<Output<String>> resetCredentialsFlow() {
        return Optional.ofNullable(this.resetCredentialsFlow);
    }

    private BindingsState() {}

    private BindingsState(BindingsState $) {
        this.browserFlow = $.browserFlow;
        this.clientAuthenticationFlow = $.clientAuthenticationFlow;
        this.directGrantFlow = $.directGrantFlow;
        this.dockerAuthenticationFlow = $.dockerAuthenticationFlow;
        this.firstBrokerLoginFlow = $.firstBrokerLoginFlow;
        this.realmId = $.realmId;
        this.registrationFlow = $.registrationFlow;
        this.resetCredentialsFlow = $.resetCredentialsFlow;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BindingsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BindingsState $;

        public Builder() {
            $ = new BindingsState();
        }

        public Builder(BindingsState defaults) {
            $ = new BindingsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param browserFlow The alias of the flow to assign to the realm BrowserFlow.
         * 
         * @return builder
         * 
         */
        public Builder browserFlow(@Nullable Output<String> browserFlow) {
            $.browserFlow = browserFlow;
            return this;
        }

        /**
         * @param browserFlow The alias of the flow to assign to the realm BrowserFlow.
         * 
         * @return builder
         * 
         */
        public Builder browserFlow(String browserFlow) {
            return browserFlow(Output.of(browserFlow));
        }

        /**
         * @param clientAuthenticationFlow The alias of the flow to assign to the realm ClientAuthenticationFlow.
         * 
         * @return builder
         * 
         */
        public Builder clientAuthenticationFlow(@Nullable Output<String> clientAuthenticationFlow) {
            $.clientAuthenticationFlow = clientAuthenticationFlow;
            return this;
        }

        /**
         * @param clientAuthenticationFlow The alias of the flow to assign to the realm ClientAuthenticationFlow.
         * 
         * @return builder
         * 
         */
        public Builder clientAuthenticationFlow(String clientAuthenticationFlow) {
            return clientAuthenticationFlow(Output.of(clientAuthenticationFlow));
        }

        /**
         * @param directGrantFlow The alias of the flow to assign to the realm DirectGrantFlow.
         * 
         * @return builder
         * 
         */
        public Builder directGrantFlow(@Nullable Output<String> directGrantFlow) {
            $.directGrantFlow = directGrantFlow;
            return this;
        }

        /**
         * @param directGrantFlow The alias of the flow to assign to the realm DirectGrantFlow.
         * 
         * @return builder
         * 
         */
        public Builder directGrantFlow(String directGrantFlow) {
            return directGrantFlow(Output.of(directGrantFlow));
        }

        /**
         * @param dockerAuthenticationFlow The alias of the flow to assign to the realm DockerAuthenticationFlow.
         * 
         * @return builder
         * 
         */
        public Builder dockerAuthenticationFlow(@Nullable Output<String> dockerAuthenticationFlow) {
            $.dockerAuthenticationFlow = dockerAuthenticationFlow;
            return this;
        }

        /**
         * @param dockerAuthenticationFlow The alias of the flow to assign to the realm DockerAuthenticationFlow.
         * 
         * @return builder
         * 
         */
        public Builder dockerAuthenticationFlow(String dockerAuthenticationFlow) {
            return dockerAuthenticationFlow(Output.of(dockerAuthenticationFlow));
        }

        /**
         * @param firstBrokerLoginFlow The alias of the flow to assign to the realm FirstBrokerLoginFlow (since Keycloak 24).
         * 
         * @return builder
         * 
         */
        public Builder firstBrokerLoginFlow(@Nullable Output<String> firstBrokerLoginFlow) {
            $.firstBrokerLoginFlow = firstBrokerLoginFlow;
            return this;
        }

        /**
         * @param firstBrokerLoginFlow The alias of the flow to assign to the realm FirstBrokerLoginFlow (since Keycloak 24).
         * 
         * @return builder
         * 
         */
        public Builder firstBrokerLoginFlow(String firstBrokerLoginFlow) {
            return firstBrokerLoginFlow(Output.of(firstBrokerLoginFlow));
        }

        /**
         * @param realmId The realm the authentication flow binding exists in.
         * 
         * @return builder
         * 
         */
        public Builder realmId(@Nullable Output<String> realmId) {
            $.realmId = realmId;
            return this;
        }

        /**
         * @param realmId The realm the authentication flow binding exists in.
         * 
         * @return builder
         * 
         */
        public Builder realmId(String realmId) {
            return realmId(Output.of(realmId));
        }

        /**
         * @param registrationFlow The alias of the flow to assign to the realm RegistrationFlow.
         * 
         * @return builder
         * 
         */
        public Builder registrationFlow(@Nullable Output<String> registrationFlow) {
            $.registrationFlow = registrationFlow;
            return this;
        }

        /**
         * @param registrationFlow The alias of the flow to assign to the realm RegistrationFlow.
         * 
         * @return builder
         * 
         */
        public Builder registrationFlow(String registrationFlow) {
            return registrationFlow(Output.of(registrationFlow));
        }

        /**
         * @param resetCredentialsFlow The alias of the flow to assign to the realm ResetCredentialsFlow.
         * 
         * @return builder
         * 
         */
        public Builder resetCredentialsFlow(@Nullable Output<String> resetCredentialsFlow) {
            $.resetCredentialsFlow = resetCredentialsFlow;
            return this;
        }

        /**
         * @param resetCredentialsFlow The alias of the flow to assign to the realm ResetCredentialsFlow.
         * 
         * @return builder
         * 
         */
        public Builder resetCredentialsFlow(String resetCredentialsFlow) {
            return resetCredentialsFlow(Output.of(resetCredentialsFlow));
        }

        public BindingsState build() {
            return $;
        }
    }

}
