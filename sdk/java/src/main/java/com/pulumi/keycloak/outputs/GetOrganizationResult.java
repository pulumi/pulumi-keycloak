// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.keycloak.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.keycloak.outputs.GetOrganizationDomain;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetOrganizationResult {
    private String alias;
    private Map<String,String> attributes;
    private String description;
    private List<GetOrganizationDomain> domains;
    private Boolean enabled;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String name;
    private String realm;
    private String redirectUrl;

    private GetOrganizationResult() {}
    public String alias() {
        return this.alias;
    }
    public Map<String,String> attributes() {
        return this.attributes;
    }
    public String description() {
        return this.description;
    }
    public List<GetOrganizationDomain> domains() {
        return this.domains;
    }
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    public String realm() {
        return this.realm;
    }
    public String redirectUrl() {
        return this.redirectUrl;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOrganizationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String alias;
        private Map<String,String> attributes;
        private String description;
        private List<GetOrganizationDomain> domains;
        private Boolean enabled;
        private String id;
        private String name;
        private String realm;
        private String redirectUrl;
        public Builder() {}
        public Builder(GetOrganizationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alias = defaults.alias;
    	      this.attributes = defaults.attributes;
    	      this.description = defaults.description;
    	      this.domains = defaults.domains;
    	      this.enabled = defaults.enabled;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.realm = defaults.realm;
    	      this.redirectUrl = defaults.redirectUrl;
        }

        @CustomType.Setter
        public Builder alias(String alias) {
            if (alias == null) {
              throw new MissingRequiredPropertyException("GetOrganizationResult", "alias");
            }
            this.alias = alias;
            return this;
        }
        @CustomType.Setter
        public Builder attributes(Map<String,String> attributes) {
            if (attributes == null) {
              throw new MissingRequiredPropertyException("GetOrganizationResult", "attributes");
            }
            this.attributes = attributes;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetOrganizationResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder domains(List<GetOrganizationDomain> domains) {
            if (domains == null) {
              throw new MissingRequiredPropertyException("GetOrganizationResult", "domains");
            }
            this.domains = domains;
            return this;
        }
        public Builder domains(GetOrganizationDomain... domains) {
            return domains(List.of(domains));
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetOrganizationResult", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetOrganizationResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetOrganizationResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder realm(String realm) {
            if (realm == null) {
              throw new MissingRequiredPropertyException("GetOrganizationResult", "realm");
            }
            this.realm = realm;
            return this;
        }
        @CustomType.Setter
        public Builder redirectUrl(String redirectUrl) {
            if (redirectUrl == null) {
              throw new MissingRequiredPropertyException("GetOrganizationResult", "redirectUrl");
            }
            this.redirectUrl = redirectUrl;
            return this;
        }
        public GetOrganizationResult build() {
            final var _resultValue = new GetOrganizationResult();
            _resultValue.alias = alias;
            _resultValue.attributes = attributes;
            _resultValue.description = description;
            _resultValue.domains = domains;
            _resultValue.enabled = enabled;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.realm = realm;
            _resultValue.redirectUrl = redirectUrl;
            return _resultValue;
        }
    }
}
