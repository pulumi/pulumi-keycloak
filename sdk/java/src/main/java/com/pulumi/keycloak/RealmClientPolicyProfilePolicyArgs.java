// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.keycloak;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.keycloak.inputs.RealmClientPolicyProfilePolicyConditionArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RealmClientPolicyProfilePolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final RealmClientPolicyProfilePolicyArgs Empty = new RealmClientPolicyProfilePolicyArgs();

    @Import(name="conditions")
    private @Nullable Output<List<RealmClientPolicyProfilePolicyConditionArgs>> conditions;

    public Optional<Output<List<RealmClientPolicyProfilePolicyConditionArgs>>> conditions() {
        return Optional.ofNullable(this.conditions);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="profiles", required=true)
    private Output<List<String>> profiles;

    public Output<List<String>> profiles() {
        return this.profiles;
    }

    @Import(name="realmId", required=true)
    private Output<String> realmId;

    public Output<String> realmId() {
        return this.realmId;
    }

    private RealmClientPolicyProfilePolicyArgs() {}

    private RealmClientPolicyProfilePolicyArgs(RealmClientPolicyProfilePolicyArgs $) {
        this.conditions = $.conditions;
        this.description = $.description;
        this.enabled = $.enabled;
        this.name = $.name;
        this.profiles = $.profiles;
        this.realmId = $.realmId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RealmClientPolicyProfilePolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RealmClientPolicyProfilePolicyArgs $;

        public Builder() {
            $ = new RealmClientPolicyProfilePolicyArgs();
        }

        public Builder(RealmClientPolicyProfilePolicyArgs defaults) {
            $ = new RealmClientPolicyProfilePolicyArgs(Objects.requireNonNull(defaults));
        }

        public Builder conditions(@Nullable Output<List<RealmClientPolicyProfilePolicyConditionArgs>> conditions) {
            $.conditions = conditions;
            return this;
        }

        public Builder conditions(List<RealmClientPolicyProfilePolicyConditionArgs> conditions) {
            return conditions(Output.of(conditions));
        }

        public Builder conditions(RealmClientPolicyProfilePolicyConditionArgs... conditions) {
            return conditions(List.of(conditions));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder profiles(Output<List<String>> profiles) {
            $.profiles = profiles;
            return this;
        }

        public Builder profiles(List<String> profiles) {
            return profiles(Output.of(profiles));
        }

        public Builder profiles(String... profiles) {
            return profiles(List.of(profiles));
        }

        public Builder realmId(Output<String> realmId) {
            $.realmId = realmId;
            return this;
        }

        public Builder realmId(String realmId) {
            return realmId(Output.of(realmId));
        }

        public RealmClientPolicyProfilePolicyArgs build() {
            if ($.profiles == null) {
                throw new MissingRequiredPropertyException("RealmClientPolicyProfilePolicyArgs", "profiles");
            }
            if ($.realmId == null) {
                throw new MissingRequiredPropertyException("RealmClientPolicyProfilePolicyArgs", "realmId");
            }
            return $;
        }
    }

}
