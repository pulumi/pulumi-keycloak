// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.keycloak.openid;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.keycloak.Utilities;
import com.pulumi.keycloak.openid.ClientPermissionsArgs;
import com.pulumi.keycloak.openid.inputs.ClientPermissionsState;
import com.pulumi.keycloak.openid.outputs.ClientPermissionsConfigureScope;
import com.pulumi.keycloak.openid.outputs.ClientPermissionsManageScope;
import com.pulumi.keycloak.openid.outputs.ClientPermissionsMapRolesClientScopeScope;
import com.pulumi.keycloak.openid.outputs.ClientPermissionsMapRolesCompositeScope;
import com.pulumi.keycloak.openid.outputs.ClientPermissionsMapRolesScope;
import com.pulumi.keycloak.openid.outputs.ClientPermissionsTokenExchangeScope;
import com.pulumi.keycloak.openid.outputs.ClientPermissionsViewScope;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Allows you to manage all openid client Scope Based Permissions.
 * 
 * This is part of a preview keycloak feature. You need to enable this feature to be able to use this resource. More
 * information about enabling the preview feature can be found
 * here: https://www.keycloak.org/docs/latest/securing_apps/index.html#_token-exchange
 * 
 * When enabling Openid Client Permissions, Keycloak does several things automatically:
 * 
 * 1. Enable Authorization on build-in realm-management client
 * 2. Create scopes &#34;view&#34;, &#34;manage&#34;, &#34;configure&#34;, &#34;map-roles&#34;, &#34;map-roles-client-scope&#34;, &#34;map-roles-composite&#34;, &#34;
 *    token-exchange&#34;
 * 3. Create a resource representing the openid client
 * 4. Create all scope based permission for the scopes and openid client resource
 * 
 * If the realm-management Authorization is not enable, you have to ceate a dependency (`depends_on`) with the policy and
 * the openid client.
 * 
 */
@ResourceType(type="keycloak:openid/clientPermissions:ClientPermissions")
public class ClientPermissions extends com.pulumi.resources.CustomResource {
    /**
     * Resource server id representing the realm management client on which this permission is managed
     * 
     */
    @Export(name="authorizationResourceServerId", refs={String.class}, tree="[0]")
    private Output<String> authorizationResourceServerId;

    /**
     * @return Resource server id representing the realm management client on which this permission is managed
     * 
     */
    public Output<String> authorizationResourceServerId() {
        return this.authorizationResourceServerId;
    }
    @Export(name="clientId", refs={String.class}, tree="[0]")
    private Output<String> clientId;

    public Output<String> clientId() {
        return this.clientId;
    }
    @Export(name="configureScope", refs={ClientPermissionsConfigureScope.class}, tree="[0]")
    private Output</* @Nullable */ ClientPermissionsConfigureScope> configureScope;

    public Output<Optional<ClientPermissionsConfigureScope>> configureScope() {
        return Codegen.optional(this.configureScope);
    }
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> enabled;

    public Output<Boolean> enabled() {
        return this.enabled;
    }
    @Export(name="manageScope", refs={ClientPermissionsManageScope.class}, tree="[0]")
    private Output</* @Nullable */ ClientPermissionsManageScope> manageScope;

    public Output<Optional<ClientPermissionsManageScope>> manageScope() {
        return Codegen.optional(this.manageScope);
    }
    @Export(name="mapRolesClientScopeScope", refs={ClientPermissionsMapRolesClientScopeScope.class}, tree="[0]")
    private Output</* @Nullable */ ClientPermissionsMapRolesClientScopeScope> mapRolesClientScopeScope;

    public Output<Optional<ClientPermissionsMapRolesClientScopeScope>> mapRolesClientScopeScope() {
        return Codegen.optional(this.mapRolesClientScopeScope);
    }
    @Export(name="mapRolesCompositeScope", refs={ClientPermissionsMapRolesCompositeScope.class}, tree="[0]")
    private Output</* @Nullable */ ClientPermissionsMapRolesCompositeScope> mapRolesCompositeScope;

    public Output<Optional<ClientPermissionsMapRolesCompositeScope>> mapRolesCompositeScope() {
        return Codegen.optional(this.mapRolesCompositeScope);
    }
    @Export(name="mapRolesScope", refs={ClientPermissionsMapRolesScope.class}, tree="[0]")
    private Output</* @Nullable */ ClientPermissionsMapRolesScope> mapRolesScope;

    public Output<Optional<ClientPermissionsMapRolesScope>> mapRolesScope() {
        return Codegen.optional(this.mapRolesScope);
    }
    @Export(name="realmId", refs={String.class}, tree="[0]")
    private Output<String> realmId;

    public Output<String> realmId() {
        return this.realmId;
    }
    @Export(name="tokenExchangeScope", refs={ClientPermissionsTokenExchangeScope.class}, tree="[0]")
    private Output</* @Nullable */ ClientPermissionsTokenExchangeScope> tokenExchangeScope;

    public Output<Optional<ClientPermissionsTokenExchangeScope>> tokenExchangeScope() {
        return Codegen.optional(this.tokenExchangeScope);
    }
    @Export(name="viewScope", refs={ClientPermissionsViewScope.class}, tree="[0]")
    private Output</* @Nullable */ ClientPermissionsViewScope> viewScope;

    public Output<Optional<ClientPermissionsViewScope>> viewScope() {
        return Codegen.optional(this.viewScope);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ClientPermissions(java.lang.String name) {
        this(name, ClientPermissionsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ClientPermissions(java.lang.String name, ClientPermissionsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ClientPermissions(java.lang.String name, ClientPermissionsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("keycloak:openid/clientPermissions:ClientPermissions", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ClientPermissions(java.lang.String name, Output<java.lang.String> id, @Nullable ClientPermissionsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("keycloak:openid/clientPermissions:ClientPermissions", name, state, makeResourceOptions(options, id), false);
    }

    private static ClientPermissionsArgs makeArgs(ClientPermissionsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ClientPermissionsArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ClientPermissions get(java.lang.String name, Output<java.lang.String> id, @Nullable ClientPermissionsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ClientPermissions(name, id, state, options);
    }
}
