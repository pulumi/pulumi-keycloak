// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.keycloak.openid.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetClientAuthorizationPolicyPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetClientAuthorizationPolicyPlainArgs Empty = new GetClientAuthorizationPolicyPlainArgs();

    /**
     * The name of the authorization policy.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The name of the authorization policy.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * The realm this authorization policy exists within.
     * 
     */
    @Import(name="realmId", required=true)
    private String realmId;

    /**
     * @return The realm this authorization policy exists within.
     * 
     */
    public String realmId() {
        return this.realmId;
    }

    /**
     * The ID of the resource server this authorization policy is attached to.
     * 
     */
    @Import(name="resourceServerId", required=true)
    private String resourceServerId;

    /**
     * @return The ID of the resource server this authorization policy is attached to.
     * 
     */
    public String resourceServerId() {
        return this.resourceServerId;
    }

    private GetClientAuthorizationPolicyPlainArgs() {}

    private GetClientAuthorizationPolicyPlainArgs(GetClientAuthorizationPolicyPlainArgs $) {
        this.name = $.name;
        this.realmId = $.realmId;
        this.resourceServerId = $.resourceServerId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetClientAuthorizationPolicyPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetClientAuthorizationPolicyPlainArgs $;

        public Builder() {
            $ = new GetClientAuthorizationPolicyPlainArgs();
        }

        public Builder(GetClientAuthorizationPolicyPlainArgs defaults) {
            $ = new GetClientAuthorizationPolicyPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the authorization policy.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param realmId The realm this authorization policy exists within.
         * 
         * @return builder
         * 
         */
        public Builder realmId(String realmId) {
            $.realmId = realmId;
            return this;
        }

        /**
         * @param resourceServerId The ID of the resource server this authorization policy is attached to.
         * 
         * @return builder
         * 
         */
        public Builder resourceServerId(String resourceServerId) {
            $.resourceServerId = resourceServerId;
            return this;
        }

        public GetClientAuthorizationPolicyPlainArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetClientAuthorizationPolicyPlainArgs", "name");
            }
            if ($.realmId == null) {
                throw new MissingRequiredPropertyException("GetClientAuthorizationPolicyPlainArgs", "realmId");
            }
            if ($.resourceServerId == null) {
                throw new MissingRequiredPropertyException("GetClientAuthorizationPolicyPlainArgs", "resourceServerId");
            }
            return $;
        }
    }

}
