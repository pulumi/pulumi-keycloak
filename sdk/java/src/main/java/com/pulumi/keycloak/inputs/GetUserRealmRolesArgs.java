// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.keycloak.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetUserRealmRolesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetUserRealmRolesArgs Empty = new GetUserRealmRolesArgs();

    /**
     * The realm this user belongs to.
     * 
     */
    @Import(name="realmId", required=true)
    private Output<String> realmId;

    /**
     * @return The realm this user belongs to.
     * 
     */
    public Output<String> realmId() {
        return this.realmId;
    }

    /**
     * The ID of the user to query realm roles for.
     * 
     */
    @Import(name="userId", required=true)
    private Output<String> userId;

    /**
     * @return The ID of the user to query realm roles for.
     * 
     */
    public Output<String> userId() {
        return this.userId;
    }

    private GetUserRealmRolesArgs() {}

    private GetUserRealmRolesArgs(GetUserRealmRolesArgs $) {
        this.realmId = $.realmId;
        this.userId = $.userId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetUserRealmRolesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetUserRealmRolesArgs $;

        public Builder() {
            $ = new GetUserRealmRolesArgs();
        }

        public Builder(GetUserRealmRolesArgs defaults) {
            $ = new GetUserRealmRolesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param realmId The realm this user belongs to.
         * 
         * @return builder
         * 
         */
        public Builder realmId(Output<String> realmId) {
            $.realmId = realmId;
            return this;
        }

        /**
         * @param realmId The realm this user belongs to.
         * 
         * @return builder
         * 
         */
        public Builder realmId(String realmId) {
            return realmId(Output.of(realmId));
        }

        /**
         * @param userId The ID of the user to query realm roles for.
         * 
         * @return builder
         * 
         */
        public Builder userId(Output<String> userId) {
            $.userId = userId;
            return this;
        }

        /**
         * @param userId The ID of the user to query realm roles for.
         * 
         * @return builder
         * 
         */
        public Builder userId(String userId) {
            return userId(Output.of(userId));
        }

        public GetUserRealmRolesArgs build() {
            if ($.realmId == null) {
                throw new MissingRequiredPropertyException("GetUserRealmRolesArgs", "realmId");
            }
            if ($.userId == null) {
                throw new MissingRequiredPropertyException("GetUserRealmRolesArgs", "userId");
            }
            return $;
        }
    }

}
