// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.keycloak.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;


public final class GetRealmSecurityDefenseBruteForceDetection extends com.pulumi.resources.InvokeArgs {

    public static final GetRealmSecurityDefenseBruteForceDetection Empty = new GetRealmSecurityDefenseBruteForceDetection();

    @Import(name="failureResetTimeSeconds", required=true)
    private Integer failureResetTimeSeconds;

    public Integer failureResetTimeSeconds() {
        return this.failureResetTimeSeconds;
    }

    @Import(name="maxFailureWaitSeconds", required=true)
    private Integer maxFailureWaitSeconds;

    public Integer maxFailureWaitSeconds() {
        return this.maxFailureWaitSeconds;
    }

    @Import(name="maxLoginFailures", required=true)
    private Integer maxLoginFailures;

    public Integer maxLoginFailures() {
        return this.maxLoginFailures;
    }

    @Import(name="minimumQuickLoginWaitSeconds", required=true)
    private Integer minimumQuickLoginWaitSeconds;

    public Integer minimumQuickLoginWaitSeconds() {
        return this.minimumQuickLoginWaitSeconds;
    }

    @Import(name="permanentLockout", required=true)
    private Boolean permanentLockout;

    public Boolean permanentLockout() {
        return this.permanentLockout;
    }

    @Import(name="quickLoginCheckMilliSeconds", required=true)
    private Integer quickLoginCheckMilliSeconds;

    public Integer quickLoginCheckMilliSeconds() {
        return this.quickLoginCheckMilliSeconds;
    }

    @Import(name="waitIncrementSeconds", required=true)
    private Integer waitIncrementSeconds;

    public Integer waitIncrementSeconds() {
        return this.waitIncrementSeconds;
    }

    private GetRealmSecurityDefenseBruteForceDetection() {}

    private GetRealmSecurityDefenseBruteForceDetection(GetRealmSecurityDefenseBruteForceDetection $) {
        this.failureResetTimeSeconds = $.failureResetTimeSeconds;
        this.maxFailureWaitSeconds = $.maxFailureWaitSeconds;
        this.maxLoginFailures = $.maxLoginFailures;
        this.minimumQuickLoginWaitSeconds = $.minimumQuickLoginWaitSeconds;
        this.permanentLockout = $.permanentLockout;
        this.quickLoginCheckMilliSeconds = $.quickLoginCheckMilliSeconds;
        this.waitIncrementSeconds = $.waitIncrementSeconds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRealmSecurityDefenseBruteForceDetection defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRealmSecurityDefenseBruteForceDetection $;

        public Builder() {
            $ = new GetRealmSecurityDefenseBruteForceDetection();
        }

        public Builder(GetRealmSecurityDefenseBruteForceDetection defaults) {
            $ = new GetRealmSecurityDefenseBruteForceDetection(Objects.requireNonNull(defaults));
        }

        public Builder failureResetTimeSeconds(Integer failureResetTimeSeconds) {
            $.failureResetTimeSeconds = failureResetTimeSeconds;
            return this;
        }

        public Builder maxFailureWaitSeconds(Integer maxFailureWaitSeconds) {
            $.maxFailureWaitSeconds = maxFailureWaitSeconds;
            return this;
        }

        public Builder maxLoginFailures(Integer maxLoginFailures) {
            $.maxLoginFailures = maxLoginFailures;
            return this;
        }

        public Builder minimumQuickLoginWaitSeconds(Integer minimumQuickLoginWaitSeconds) {
            $.minimumQuickLoginWaitSeconds = minimumQuickLoginWaitSeconds;
            return this;
        }

        public Builder permanentLockout(Boolean permanentLockout) {
            $.permanentLockout = permanentLockout;
            return this;
        }

        public Builder quickLoginCheckMilliSeconds(Integer quickLoginCheckMilliSeconds) {
            $.quickLoginCheckMilliSeconds = quickLoginCheckMilliSeconds;
            return this;
        }

        public Builder waitIncrementSeconds(Integer waitIncrementSeconds) {
            $.waitIncrementSeconds = waitIncrementSeconds;
            return this;
        }

        public GetRealmSecurityDefenseBruteForceDetection build() {
            if ($.failureResetTimeSeconds == null) {
                throw new MissingRequiredPropertyException("GetRealmSecurityDefenseBruteForceDetection", "failureResetTimeSeconds");
            }
            if ($.maxFailureWaitSeconds == null) {
                throw new MissingRequiredPropertyException("GetRealmSecurityDefenseBruteForceDetection", "maxFailureWaitSeconds");
            }
            if ($.maxLoginFailures == null) {
                throw new MissingRequiredPropertyException("GetRealmSecurityDefenseBruteForceDetection", "maxLoginFailures");
            }
            if ($.minimumQuickLoginWaitSeconds == null) {
                throw new MissingRequiredPropertyException("GetRealmSecurityDefenseBruteForceDetection", "minimumQuickLoginWaitSeconds");
            }
            if ($.permanentLockout == null) {
                throw new MissingRequiredPropertyException("GetRealmSecurityDefenseBruteForceDetection", "permanentLockout");
            }
            if ($.quickLoginCheckMilliSeconds == null) {
                throw new MissingRequiredPropertyException("GetRealmSecurityDefenseBruteForceDetection", "quickLoginCheckMilliSeconds");
            }
            if ($.waitIncrementSeconds == null) {
                throw new MissingRequiredPropertyException("GetRealmSecurityDefenseBruteForceDetection", "waitIncrementSeconds");
            }
            return $;
        }
    }

}
