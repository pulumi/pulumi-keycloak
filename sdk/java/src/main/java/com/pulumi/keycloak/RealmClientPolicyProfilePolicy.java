// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.keycloak;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.keycloak.RealmClientPolicyProfilePolicyArgs;
import com.pulumi.keycloak.Utilities;
import com.pulumi.keycloak.inputs.RealmClientPolicyProfilePolicyState;
import com.pulumi.keycloak.outputs.RealmClientPolicyProfilePolicyCondition;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Allows for managing Realm Client Policy Profile Policies.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.keycloak.Realm;
 * import com.pulumi.keycloak.RealmArgs;
 * import com.pulumi.keycloak.RealmClientPolicyProfile;
 * import com.pulumi.keycloak.RealmClientPolicyProfileArgs;
 * import com.pulumi.keycloak.inputs.RealmClientPolicyProfileExecutorArgs;
 * import com.pulumi.keycloak.RealmClientPolicyProfilePolicy;
 * import com.pulumi.keycloak.RealmClientPolicyProfilePolicyArgs;
 * import com.pulumi.keycloak.inputs.RealmClientPolicyProfilePolicyConditionArgs;
 * import static com.pulumi.codegen.internal.Serialization.*;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var realm = new Realm("realm", RealmArgs.builder()
 *             .realm("my-realm")
 *             .build());
 * 
 *         var profile = new RealmClientPolicyProfile("profile", RealmClientPolicyProfileArgs.builder()
 *             .name("my-profile")
 *             .realmId(realm.id())
 *             .description("Some desc")
 *             .executors(            
 *                 RealmClientPolicyProfileExecutorArgs.builder()
 *                     .name("intent-client-bind-checker")
 *                     .configuration(Map.of("auto-configure", "true"))
 *                     .build(),
 *                 RealmClientPolicyProfileExecutorArgs.builder()
 *                     .name("secret-rotation")
 *                     .configuration(Map.ofEntries(
 *                         Map.entry("expiration-period", "2505600"),
 *                         Map.entry("rotated-expiration-period", "172800"),
 *                         Map.entry("remaining-rotation-period", "864000")
 *                     ))
 *                     .build())
 *             .build());
 * 
 *         var policy = new RealmClientPolicyProfilePolicy("policy", RealmClientPolicyProfilePolicyArgs.builder()
 *             .name("my-profile")
 *             .realmId(realm.id())
 *             .description("Some desc")
 *             .profiles(profile.name())
 *             .conditions(            
 *                 RealmClientPolicyProfilePolicyConditionArgs.builder()
 *                     .name("client-type")
 *                     .configuration(Map.of("protocol", "openid-connect"))
 *                     .build(),
 *                 RealmClientPolicyProfilePolicyConditionArgs.builder()
 *                     .name("client-attributes")
 *                     .configuration(Map.ofEntries(
 *                         Map.entry("is-negative-logic", "false"),
 *                         Map.entry("attributes", serializeJson(
 *                             jsonArray(jsonObject(
 *                                 jsonProperty("key", "test-key"),
 *                                 jsonProperty("value", "test-value")
 *                             ))))
 *                     ))
 *                     .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ### Attribute Arguments
 * 
 * - `name` - (Required) The name of the attribute.
 * - `realmId` - (Required) The realm id.
 * - `condition` - (Optional) An ordered list of condition
 * 
 * #### Condition Arguments
 * 
 * - `name` - (Required) The name of the executor. NOTE! The executor needs to exist
 * - `configuration` - (Optional) - A map of configuration values
 * 
 * ## Import
 * 
 * This resource currently does not support importing.
 * 
 */
@ResourceType(type="keycloak:index/realmClientPolicyProfilePolicy:RealmClientPolicyProfilePolicy")
public class RealmClientPolicyProfilePolicy extends com.pulumi.resources.CustomResource {
    @Export(name="conditions", refs={List.class,RealmClientPolicyProfilePolicyCondition.class}, tree="[0,1]")
    private Output</* @Nullable */ List<RealmClientPolicyProfilePolicyCondition>> conditions;

    public Output<Optional<List<RealmClientPolicyProfilePolicyCondition>>> conditions() {
        return Codegen.optional(this.conditions);
    }
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enabled;

    public Output<Optional<Boolean>> enabled() {
        return Codegen.optional(this.enabled);
    }
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }
    @Export(name="profiles", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> profiles;

    public Output<List<String>> profiles() {
        return this.profiles;
    }
    @Export(name="realmId", refs={String.class}, tree="[0]")
    private Output<String> realmId;

    public Output<String> realmId() {
        return this.realmId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RealmClientPolicyProfilePolicy(java.lang.String name) {
        this(name, RealmClientPolicyProfilePolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RealmClientPolicyProfilePolicy(java.lang.String name, RealmClientPolicyProfilePolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RealmClientPolicyProfilePolicy(java.lang.String name, RealmClientPolicyProfilePolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("keycloak:index/realmClientPolicyProfilePolicy:RealmClientPolicyProfilePolicy", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private RealmClientPolicyProfilePolicy(java.lang.String name, Output<java.lang.String> id, @Nullable RealmClientPolicyProfilePolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("keycloak:index/realmClientPolicyProfilePolicy:RealmClientPolicyProfilePolicy", name, state, makeResourceOptions(options, id), false);
    }

    private static RealmClientPolicyProfilePolicyArgs makeArgs(RealmClientPolicyProfilePolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? RealmClientPolicyProfilePolicyArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RealmClientPolicyProfilePolicy get(java.lang.String name, Output<java.lang.String> id, @Nullable RealmClientPolicyProfilePolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RealmClientPolicyProfilePolicy(name, id, state, options);
    }
}
