// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.keycloak;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.keycloak.UserArgs;
import com.pulumi.keycloak.Utilities;
import com.pulumi.keycloak.inputs.UserState;
import com.pulumi.keycloak.outputs.UserFederatedIdentity;
import com.pulumi.keycloak.outputs.UserInitialPassword;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## # keycloak.User
 * 
 * Allows for creating and managing Users within Keycloak.
 * 
 * This resource was created primarily to enable the acceptance tests for the `keycloak.Group` resource.
 * Creating users within Keycloak is not recommended. Instead, users should be federated from external sources
 * by configuring user federation providers or identity providers.
 * 
 * ### Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.keycloak.Realm;
 * import com.pulumi.keycloak.RealmArgs;
 * import com.pulumi.keycloak.User;
 * import com.pulumi.keycloak.UserArgs;
 * import com.pulumi.keycloak.inputs.UserInitialPasswordArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         var realm = new Realm("realm", RealmArgs.builder()
 *             .realm("my-realm")
 *             .enabled(true)
 *             .build());
 * 
 *         var user = new User("user", UserArgs.builder()
 *             .realmId(realm.id())
 *             .username("bob")
 *             .enabled(true)
 *             .email("bob}{@literal @}{@code domain.com")
 *             .firstName("Bob")
 *             .lastName("Bobson")
 *             .build());
 * 
 *         var userWithInitialPassword = new User("userWithInitialPassword", UserArgs.builder()
 *             .realmId(realm.id())
 *             .username("alice")
 *             .enabled(true)
 *             .email("alice}{@literal @}{@code domain.com")
 *             .firstName("Alice")
 *             .lastName("Aliceberg")
 *             .initialPassword(UserInitialPasswordArgs.builder()
 *                 .value("some password")
 *                 .temporary(true)
 *                 .build())
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Argument Reference
 * 
 * The following arguments are supported:
 * 
 * - `realm_id` - (Required) The realm this user belongs to.
 * - `username` - (Required) The unique username of this user.
 * - `initial_password` (Optional) When given, the user&#39;s initial password will be set.
 *    This attribute is only respected during initial user creation.
 *     - `value` (Required) The initial password.
 *     - `temporary` (Optional) If set to `true`, the initial password is set up for renewal on first use. Default to `false`.
 * - `enabled` - (Optional) When false, this user cannot log in. Defaults to `true`.
 * - `email` - (Optional) The user&#39;s email.
 * - `first_name` - (Optional) The user&#39;s first name.
 * - `last_name` - (Optional) The user&#39;s last name.
 * 
 * ### Import
 * 
 * Users can be imported using the format `{{realm_id}}/{{user_id}}`, where `user_id` is the unique ID that Keycloak
 * assigns to the user upon creation. This value can be found in the GUI when editing the user.
 * 
 * Example:
 * 
 */
@ResourceType(type="keycloak:index/user:User")
public class User extends com.pulumi.resources.CustomResource {
    @Export(name="attributes", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output</* @Nullable */ Map<String,Object>> attributes;

    public Output<Optional<Map<String,Object>>> attributes() {
        return Codegen.optional(this.attributes);
    }
    @Export(name="email", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> email;

    public Output<Optional<String>> email() {
        return Codegen.optional(this.email);
    }
    @Export(name="emailVerified", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> emailVerified;

    public Output<Optional<Boolean>> emailVerified() {
        return Codegen.optional(this.emailVerified);
    }
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enabled;

    public Output<Optional<Boolean>> enabled() {
        return Codegen.optional(this.enabled);
    }
    @Export(name="federatedIdentities", refs={List.class,UserFederatedIdentity.class}, tree="[0,1]")
    private Output</* @Nullable */ List<UserFederatedIdentity>> federatedIdentities;

    public Output<Optional<List<UserFederatedIdentity>>> federatedIdentities() {
        return Codegen.optional(this.federatedIdentities);
    }
    @Export(name="firstName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> firstName;

    public Output<Optional<String>> firstName() {
        return Codegen.optional(this.firstName);
    }
    @Export(name="initialPassword", refs={UserInitialPassword.class}, tree="[0]")
    private Output</* @Nullable */ UserInitialPassword> initialPassword;

    public Output<Optional<UserInitialPassword>> initialPassword() {
        return Codegen.optional(this.initialPassword);
    }
    @Export(name="lastName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> lastName;

    public Output<Optional<String>> lastName() {
        return Codegen.optional(this.lastName);
    }
    @Export(name="realmId", refs={String.class}, tree="[0]")
    private Output<String> realmId;

    public Output<String> realmId() {
        return this.realmId;
    }
    @Export(name="requiredActions", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> requiredActions;

    public Output<Optional<List<String>>> requiredActions() {
        return Codegen.optional(this.requiredActions);
    }
    @Export(name="username", refs={String.class}, tree="[0]")
    private Output<String> username;

    public Output<String> username() {
        return this.username;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public User(java.lang.String name) {
        this(name, UserArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public User(java.lang.String name, UserArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public User(java.lang.String name, UserArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("keycloak:index/user:User", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private User(java.lang.String name, Output<java.lang.String> id, @Nullable UserState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("keycloak:index/user:User", name, state, makeResourceOptions(options, id), false);
    }

    private static UserArgs makeArgs(UserArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? UserArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static User get(java.lang.String name, Output<java.lang.String> id, @Nullable UserState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new User(name, id, state, options);
    }
}
