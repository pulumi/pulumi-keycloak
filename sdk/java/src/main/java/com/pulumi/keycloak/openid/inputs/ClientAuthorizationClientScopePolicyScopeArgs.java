// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.keycloak.openid.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClientAuthorizationClientScopePolicyScopeArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClientAuthorizationClientScopePolicyScopeArgs Empty = new ClientAuthorizationClientScopePolicyScopeArgs();

    @Import(name="id", required=true)
    private Output<String> id;

    public Output<String> id() {
        return this.id;
    }

    @Import(name="required")
    private @Nullable Output<Boolean> required;

    public Optional<Output<Boolean>> required() {
        return Optional.ofNullable(this.required);
    }

    private ClientAuthorizationClientScopePolicyScopeArgs() {}

    private ClientAuthorizationClientScopePolicyScopeArgs(ClientAuthorizationClientScopePolicyScopeArgs $) {
        this.id = $.id;
        this.required = $.required;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClientAuthorizationClientScopePolicyScopeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClientAuthorizationClientScopePolicyScopeArgs $;

        public Builder() {
            $ = new ClientAuthorizationClientScopePolicyScopeArgs();
        }

        public Builder(ClientAuthorizationClientScopePolicyScopeArgs defaults) {
            $ = new ClientAuthorizationClientScopePolicyScopeArgs(Objects.requireNonNull(defaults));
        }

        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder required(@Nullable Output<Boolean> required) {
            $.required = required;
            return this;
        }

        public Builder required(Boolean required) {
            return required(Output.of(required));
        }

        public ClientAuthorizationClientScopePolicyScopeArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("ClientAuthorizationClientScopePolicyScopeArgs", "id");
            }
            return $;
        }
    }

}
