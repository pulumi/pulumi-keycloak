// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.keycloak.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetRealmSmtpServerTokenAuthArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetRealmSmtpServerTokenAuthArgs Empty = new GetRealmSmtpServerTokenAuthArgs();

    @Import(name="clientId", required=true)
    private Output<String> clientId;

    public Output<String> clientId() {
        return this.clientId;
    }

    @Import(name="clientSecret", required=true)
    private Output<String> clientSecret;

    public Output<String> clientSecret() {
        return this.clientSecret;
    }

    @Import(name="scope", required=true)
    private Output<String> scope;

    public Output<String> scope() {
        return this.scope;
    }

    @Import(name="url", required=true)
    private Output<String> url;

    public Output<String> url() {
        return this.url;
    }

    @Import(name="username", required=true)
    private Output<String> username;

    public Output<String> username() {
        return this.username;
    }

    private GetRealmSmtpServerTokenAuthArgs() {}

    private GetRealmSmtpServerTokenAuthArgs(GetRealmSmtpServerTokenAuthArgs $) {
        this.clientId = $.clientId;
        this.clientSecret = $.clientSecret;
        this.scope = $.scope;
        this.url = $.url;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRealmSmtpServerTokenAuthArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRealmSmtpServerTokenAuthArgs $;

        public Builder() {
            $ = new GetRealmSmtpServerTokenAuthArgs();
        }

        public Builder(GetRealmSmtpServerTokenAuthArgs defaults) {
            $ = new GetRealmSmtpServerTokenAuthArgs(Objects.requireNonNull(defaults));
        }

        public Builder clientId(Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        public Builder clientSecret(Output<String> clientSecret) {
            $.clientSecret = clientSecret;
            return this;
        }

        public Builder clientSecret(String clientSecret) {
            return clientSecret(Output.of(clientSecret));
        }

        public Builder scope(Output<String> scope) {
            $.scope = scope;
            return this;
        }

        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        public Builder url(Output<String> url) {
            $.url = url;
            return this;
        }

        public Builder url(String url) {
            return url(Output.of(url));
        }

        public Builder username(Output<String> username) {
            $.username = username;
            return this;
        }

        public Builder username(String username) {
            return username(Output.of(username));
        }

        public GetRealmSmtpServerTokenAuthArgs build() {
            if ($.clientId == null) {
                throw new MissingRequiredPropertyException("GetRealmSmtpServerTokenAuthArgs", "clientId");
            }
            if ($.clientSecret == null) {
                throw new MissingRequiredPropertyException("GetRealmSmtpServerTokenAuthArgs", "clientSecret");
            }
            if ($.scope == null) {
                throw new MissingRequiredPropertyException("GetRealmSmtpServerTokenAuthArgs", "scope");
            }
            if ($.url == null) {
                throw new MissingRequiredPropertyException("GetRealmSmtpServerTokenAuthArgs", "url");
            }
            if ($.username == null) {
                throw new MissingRequiredPropertyException("GetRealmSmtpServerTokenAuthArgs", "username");
            }
            return $;
        }
    }

}
