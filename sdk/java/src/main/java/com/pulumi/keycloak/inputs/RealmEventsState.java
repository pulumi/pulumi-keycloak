// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.keycloak.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RealmEventsState extends com.pulumi.resources.ResourceArgs {

    public static final RealmEventsState Empty = new RealmEventsState();

    @Import(name="adminEventsDetailsEnabled")
    private @Nullable Output<Boolean> adminEventsDetailsEnabled;

    public Optional<Output<Boolean>> adminEventsDetailsEnabled() {
        return Optional.ofNullable(this.adminEventsDetailsEnabled);
    }

    @Import(name="adminEventsEnabled")
    private @Nullable Output<Boolean> adminEventsEnabled;

    public Optional<Output<Boolean>> adminEventsEnabled() {
        return Optional.ofNullable(this.adminEventsEnabled);
    }

    @Import(name="enabledEventTypes")
    private @Nullable Output<List<String>> enabledEventTypes;

    public Optional<Output<List<String>>> enabledEventTypes() {
        return Optional.ofNullable(this.enabledEventTypes);
    }

    @Import(name="eventsEnabled")
    private @Nullable Output<Boolean> eventsEnabled;

    public Optional<Output<Boolean>> eventsEnabled() {
        return Optional.ofNullable(this.eventsEnabled);
    }

    @Import(name="eventsExpiration")
    private @Nullable Output<Integer> eventsExpiration;

    public Optional<Output<Integer>> eventsExpiration() {
        return Optional.ofNullable(this.eventsExpiration);
    }

    @Import(name="eventsListeners")
    private @Nullable Output<List<String>> eventsListeners;

    public Optional<Output<List<String>>> eventsListeners() {
        return Optional.ofNullable(this.eventsListeners);
    }

    @Import(name="realmId")
    private @Nullable Output<String> realmId;

    public Optional<Output<String>> realmId() {
        return Optional.ofNullable(this.realmId);
    }

    private RealmEventsState() {}

    private RealmEventsState(RealmEventsState $) {
        this.adminEventsDetailsEnabled = $.adminEventsDetailsEnabled;
        this.adminEventsEnabled = $.adminEventsEnabled;
        this.enabledEventTypes = $.enabledEventTypes;
        this.eventsEnabled = $.eventsEnabled;
        this.eventsExpiration = $.eventsExpiration;
        this.eventsListeners = $.eventsListeners;
        this.realmId = $.realmId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RealmEventsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RealmEventsState $;

        public Builder() {
            $ = new RealmEventsState();
        }

        public Builder(RealmEventsState defaults) {
            $ = new RealmEventsState(Objects.requireNonNull(defaults));
        }

        public Builder adminEventsDetailsEnabled(@Nullable Output<Boolean> adminEventsDetailsEnabled) {
            $.adminEventsDetailsEnabled = adminEventsDetailsEnabled;
            return this;
        }

        public Builder adminEventsDetailsEnabled(Boolean adminEventsDetailsEnabled) {
            return adminEventsDetailsEnabled(Output.of(adminEventsDetailsEnabled));
        }

        public Builder adminEventsEnabled(@Nullable Output<Boolean> adminEventsEnabled) {
            $.adminEventsEnabled = adminEventsEnabled;
            return this;
        }

        public Builder adminEventsEnabled(Boolean adminEventsEnabled) {
            return adminEventsEnabled(Output.of(adminEventsEnabled));
        }

        public Builder enabledEventTypes(@Nullable Output<List<String>> enabledEventTypes) {
            $.enabledEventTypes = enabledEventTypes;
            return this;
        }

        public Builder enabledEventTypes(List<String> enabledEventTypes) {
            return enabledEventTypes(Output.of(enabledEventTypes));
        }

        public Builder enabledEventTypes(String... enabledEventTypes) {
            return enabledEventTypes(List.of(enabledEventTypes));
        }

        public Builder eventsEnabled(@Nullable Output<Boolean> eventsEnabled) {
            $.eventsEnabled = eventsEnabled;
            return this;
        }

        public Builder eventsEnabled(Boolean eventsEnabled) {
            return eventsEnabled(Output.of(eventsEnabled));
        }

        public Builder eventsExpiration(@Nullable Output<Integer> eventsExpiration) {
            $.eventsExpiration = eventsExpiration;
            return this;
        }

        public Builder eventsExpiration(Integer eventsExpiration) {
            return eventsExpiration(Output.of(eventsExpiration));
        }

        public Builder eventsListeners(@Nullable Output<List<String>> eventsListeners) {
            $.eventsListeners = eventsListeners;
            return this;
        }

        public Builder eventsListeners(List<String> eventsListeners) {
            return eventsListeners(Output.of(eventsListeners));
        }

        public Builder eventsListeners(String... eventsListeners) {
            return eventsListeners(List.of(eventsListeners));
        }

        public Builder realmId(@Nullable Output<String> realmId) {
            $.realmId = realmId;
            return this;
        }

        public Builder realmId(String realmId) {
            return realmId(Output.of(realmId));
        }

        public RealmEventsState build() {
            return $;
        }
    }

}
