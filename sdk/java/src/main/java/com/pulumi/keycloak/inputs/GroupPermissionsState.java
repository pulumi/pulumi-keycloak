// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.keycloak.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.keycloak.inputs.GroupPermissionsManageMembersScopeArgs;
import com.pulumi.keycloak.inputs.GroupPermissionsManageMembershipScopeArgs;
import com.pulumi.keycloak.inputs.GroupPermissionsManageScopeArgs;
import com.pulumi.keycloak.inputs.GroupPermissionsViewMembersScopeArgs;
import com.pulumi.keycloak.inputs.GroupPermissionsViewScopeArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GroupPermissionsState extends com.pulumi.resources.ResourceArgs {

    public static final GroupPermissionsState Empty = new GroupPermissionsState();

    /**
     * Resource server id representing the realm management client on which this permission is managed
     * 
     */
    @Import(name="authorizationResourceServerId")
    private @Nullable Output<String> authorizationResourceServerId;

    /**
     * @return Resource server id representing the realm management client on which this permission is managed
     * 
     */
    public Optional<Output<String>> authorizationResourceServerId() {
        return Optional.ofNullable(this.authorizationResourceServerId);
    }

    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    @Import(name="groupId")
    private @Nullable Output<String> groupId;

    public Optional<Output<String>> groupId() {
        return Optional.ofNullable(this.groupId);
    }

    @Import(name="manageMembersScope")
    private @Nullable Output<GroupPermissionsManageMembersScopeArgs> manageMembersScope;

    public Optional<Output<GroupPermissionsManageMembersScopeArgs>> manageMembersScope() {
        return Optional.ofNullable(this.manageMembersScope);
    }

    @Import(name="manageMembershipScope")
    private @Nullable Output<GroupPermissionsManageMembershipScopeArgs> manageMembershipScope;

    public Optional<Output<GroupPermissionsManageMembershipScopeArgs>> manageMembershipScope() {
        return Optional.ofNullable(this.manageMembershipScope);
    }

    @Import(name="manageScope")
    private @Nullable Output<GroupPermissionsManageScopeArgs> manageScope;

    public Optional<Output<GroupPermissionsManageScopeArgs>> manageScope() {
        return Optional.ofNullable(this.manageScope);
    }

    @Import(name="realmId")
    private @Nullable Output<String> realmId;

    public Optional<Output<String>> realmId() {
        return Optional.ofNullable(this.realmId);
    }

    @Import(name="viewMembersScope")
    private @Nullable Output<GroupPermissionsViewMembersScopeArgs> viewMembersScope;

    public Optional<Output<GroupPermissionsViewMembersScopeArgs>> viewMembersScope() {
        return Optional.ofNullable(this.viewMembersScope);
    }

    @Import(name="viewScope")
    private @Nullable Output<GroupPermissionsViewScopeArgs> viewScope;

    public Optional<Output<GroupPermissionsViewScopeArgs>> viewScope() {
        return Optional.ofNullable(this.viewScope);
    }

    private GroupPermissionsState() {}

    private GroupPermissionsState(GroupPermissionsState $) {
        this.authorizationResourceServerId = $.authorizationResourceServerId;
        this.enabled = $.enabled;
        this.groupId = $.groupId;
        this.manageMembersScope = $.manageMembersScope;
        this.manageMembershipScope = $.manageMembershipScope;
        this.manageScope = $.manageScope;
        this.realmId = $.realmId;
        this.viewMembersScope = $.viewMembersScope;
        this.viewScope = $.viewScope;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GroupPermissionsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GroupPermissionsState $;

        public Builder() {
            $ = new GroupPermissionsState();
        }

        public Builder(GroupPermissionsState defaults) {
            $ = new GroupPermissionsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param authorizationResourceServerId Resource server id representing the realm management client on which this permission is managed
         * 
         * @return builder
         * 
         */
        public Builder authorizationResourceServerId(@Nullable Output<String> authorizationResourceServerId) {
            $.authorizationResourceServerId = authorizationResourceServerId;
            return this;
        }

        /**
         * @param authorizationResourceServerId Resource server id representing the realm management client on which this permission is managed
         * 
         * @return builder
         * 
         */
        public Builder authorizationResourceServerId(String authorizationResourceServerId) {
            return authorizationResourceServerId(Output.of(authorizationResourceServerId));
        }

        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public Builder groupId(@Nullable Output<String> groupId) {
            $.groupId = groupId;
            return this;
        }

        public Builder groupId(String groupId) {
            return groupId(Output.of(groupId));
        }

        public Builder manageMembersScope(@Nullable Output<GroupPermissionsManageMembersScopeArgs> manageMembersScope) {
            $.manageMembersScope = manageMembersScope;
            return this;
        }

        public Builder manageMembersScope(GroupPermissionsManageMembersScopeArgs manageMembersScope) {
            return manageMembersScope(Output.of(manageMembersScope));
        }

        public Builder manageMembershipScope(@Nullable Output<GroupPermissionsManageMembershipScopeArgs> manageMembershipScope) {
            $.manageMembershipScope = manageMembershipScope;
            return this;
        }

        public Builder manageMembershipScope(GroupPermissionsManageMembershipScopeArgs manageMembershipScope) {
            return manageMembershipScope(Output.of(manageMembershipScope));
        }

        public Builder manageScope(@Nullable Output<GroupPermissionsManageScopeArgs> manageScope) {
            $.manageScope = manageScope;
            return this;
        }

        public Builder manageScope(GroupPermissionsManageScopeArgs manageScope) {
            return manageScope(Output.of(manageScope));
        }

        public Builder realmId(@Nullable Output<String> realmId) {
            $.realmId = realmId;
            return this;
        }

        public Builder realmId(String realmId) {
            return realmId(Output.of(realmId));
        }

        public Builder viewMembersScope(@Nullable Output<GroupPermissionsViewMembersScopeArgs> viewMembersScope) {
            $.viewMembersScope = viewMembersScope;
            return this;
        }

        public Builder viewMembersScope(GroupPermissionsViewMembersScopeArgs viewMembersScope) {
            return viewMembersScope(Output.of(viewMembersScope));
        }

        public Builder viewScope(@Nullable Output<GroupPermissionsViewScopeArgs> viewScope) {
            $.viewScope = viewScope;
            return this;
        }

        public Builder viewScope(GroupPermissionsViewScopeArgs viewScope) {
            return viewScope(Output.of(viewScope));
        }

        public GroupPermissionsState build() {
            return $;
        }
    }

}
