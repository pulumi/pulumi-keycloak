// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.keycloak.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;


public final class GetRealmSecurityDefenseBruteForceDetectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetRealmSecurityDefenseBruteForceDetectionArgs Empty = new GetRealmSecurityDefenseBruteForceDetectionArgs();

    @Import(name="failureResetTimeSeconds", required=true)
    private Output<Integer> failureResetTimeSeconds;

    public Output<Integer> failureResetTimeSeconds() {
        return this.failureResetTimeSeconds;
    }

    @Import(name="maxFailureWaitSeconds", required=true)
    private Output<Integer> maxFailureWaitSeconds;

    public Output<Integer> maxFailureWaitSeconds() {
        return this.maxFailureWaitSeconds;
    }

    @Import(name="maxLoginFailures", required=true)
    private Output<Integer> maxLoginFailures;

    public Output<Integer> maxLoginFailures() {
        return this.maxLoginFailures;
    }

    @Import(name="minimumQuickLoginWaitSeconds", required=true)
    private Output<Integer> minimumQuickLoginWaitSeconds;

    public Output<Integer> minimumQuickLoginWaitSeconds() {
        return this.minimumQuickLoginWaitSeconds;
    }

    @Import(name="permanentLockout", required=true)
    private Output<Boolean> permanentLockout;

    public Output<Boolean> permanentLockout() {
        return this.permanentLockout;
    }

    @Import(name="quickLoginCheckMilliSeconds", required=true)
    private Output<Integer> quickLoginCheckMilliSeconds;

    public Output<Integer> quickLoginCheckMilliSeconds() {
        return this.quickLoginCheckMilliSeconds;
    }

    @Import(name="waitIncrementSeconds", required=true)
    private Output<Integer> waitIncrementSeconds;

    public Output<Integer> waitIncrementSeconds() {
        return this.waitIncrementSeconds;
    }

    private GetRealmSecurityDefenseBruteForceDetectionArgs() {}

    private GetRealmSecurityDefenseBruteForceDetectionArgs(GetRealmSecurityDefenseBruteForceDetectionArgs $) {
        this.failureResetTimeSeconds = $.failureResetTimeSeconds;
        this.maxFailureWaitSeconds = $.maxFailureWaitSeconds;
        this.maxLoginFailures = $.maxLoginFailures;
        this.minimumQuickLoginWaitSeconds = $.minimumQuickLoginWaitSeconds;
        this.permanentLockout = $.permanentLockout;
        this.quickLoginCheckMilliSeconds = $.quickLoginCheckMilliSeconds;
        this.waitIncrementSeconds = $.waitIncrementSeconds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRealmSecurityDefenseBruteForceDetectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRealmSecurityDefenseBruteForceDetectionArgs $;

        public Builder() {
            $ = new GetRealmSecurityDefenseBruteForceDetectionArgs();
        }

        public Builder(GetRealmSecurityDefenseBruteForceDetectionArgs defaults) {
            $ = new GetRealmSecurityDefenseBruteForceDetectionArgs(Objects.requireNonNull(defaults));
        }

        public Builder failureResetTimeSeconds(Output<Integer> failureResetTimeSeconds) {
            $.failureResetTimeSeconds = failureResetTimeSeconds;
            return this;
        }

        public Builder failureResetTimeSeconds(Integer failureResetTimeSeconds) {
            return failureResetTimeSeconds(Output.of(failureResetTimeSeconds));
        }

        public Builder maxFailureWaitSeconds(Output<Integer> maxFailureWaitSeconds) {
            $.maxFailureWaitSeconds = maxFailureWaitSeconds;
            return this;
        }

        public Builder maxFailureWaitSeconds(Integer maxFailureWaitSeconds) {
            return maxFailureWaitSeconds(Output.of(maxFailureWaitSeconds));
        }

        public Builder maxLoginFailures(Output<Integer> maxLoginFailures) {
            $.maxLoginFailures = maxLoginFailures;
            return this;
        }

        public Builder maxLoginFailures(Integer maxLoginFailures) {
            return maxLoginFailures(Output.of(maxLoginFailures));
        }

        public Builder minimumQuickLoginWaitSeconds(Output<Integer> minimumQuickLoginWaitSeconds) {
            $.minimumQuickLoginWaitSeconds = minimumQuickLoginWaitSeconds;
            return this;
        }

        public Builder minimumQuickLoginWaitSeconds(Integer minimumQuickLoginWaitSeconds) {
            return minimumQuickLoginWaitSeconds(Output.of(minimumQuickLoginWaitSeconds));
        }

        public Builder permanentLockout(Output<Boolean> permanentLockout) {
            $.permanentLockout = permanentLockout;
            return this;
        }

        public Builder permanentLockout(Boolean permanentLockout) {
            return permanentLockout(Output.of(permanentLockout));
        }

        public Builder quickLoginCheckMilliSeconds(Output<Integer> quickLoginCheckMilliSeconds) {
            $.quickLoginCheckMilliSeconds = quickLoginCheckMilliSeconds;
            return this;
        }

        public Builder quickLoginCheckMilliSeconds(Integer quickLoginCheckMilliSeconds) {
            return quickLoginCheckMilliSeconds(Output.of(quickLoginCheckMilliSeconds));
        }

        public Builder waitIncrementSeconds(Output<Integer> waitIncrementSeconds) {
            $.waitIncrementSeconds = waitIncrementSeconds;
            return this;
        }

        public Builder waitIncrementSeconds(Integer waitIncrementSeconds) {
            return waitIncrementSeconds(Output.of(waitIncrementSeconds));
        }

        public GetRealmSecurityDefenseBruteForceDetectionArgs build() {
            if ($.failureResetTimeSeconds == null) {
                throw new MissingRequiredPropertyException("GetRealmSecurityDefenseBruteForceDetectionArgs", "failureResetTimeSeconds");
            }
            if ($.maxFailureWaitSeconds == null) {
                throw new MissingRequiredPropertyException("GetRealmSecurityDefenseBruteForceDetectionArgs", "maxFailureWaitSeconds");
            }
            if ($.maxLoginFailures == null) {
                throw new MissingRequiredPropertyException("GetRealmSecurityDefenseBruteForceDetectionArgs", "maxLoginFailures");
            }
            if ($.minimumQuickLoginWaitSeconds == null) {
                throw new MissingRequiredPropertyException("GetRealmSecurityDefenseBruteForceDetectionArgs", "minimumQuickLoginWaitSeconds");
            }
            if ($.permanentLockout == null) {
                throw new MissingRequiredPropertyException("GetRealmSecurityDefenseBruteForceDetectionArgs", "permanentLockout");
            }
            if ($.quickLoginCheckMilliSeconds == null) {
                throw new MissingRequiredPropertyException("GetRealmSecurityDefenseBruteForceDetectionArgs", "quickLoginCheckMilliSeconds");
            }
            if ($.waitIncrementSeconds == null) {
                throw new MissingRequiredPropertyException("GetRealmSecurityDefenseBruteForceDetectionArgs", "waitIncrementSeconds");
            }
            return $;
        }
    }

}
