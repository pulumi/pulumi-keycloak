// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.keycloak.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRealmKeysArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRealmKeysArgs Empty = new GetRealmKeysArgs();

    @Import(name="algorithms")
    private @Nullable Output<List<String>> algorithms;

    public Optional<Output<List<String>>> algorithms() {
        return Optional.ofNullable(this.algorithms);
    }

    @Import(name="realmId", required=true)
    private Output<String> realmId;

    public Output<String> realmId() {
        return this.realmId;
    }

    @Import(name="statuses")
    private @Nullable Output<List<String>> statuses;

    public Optional<Output<List<String>>> statuses() {
        return Optional.ofNullable(this.statuses);
    }

    private GetRealmKeysArgs() {}

    private GetRealmKeysArgs(GetRealmKeysArgs $) {
        this.algorithms = $.algorithms;
        this.realmId = $.realmId;
        this.statuses = $.statuses;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRealmKeysArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRealmKeysArgs $;

        public Builder() {
            $ = new GetRealmKeysArgs();
        }

        public Builder(GetRealmKeysArgs defaults) {
            $ = new GetRealmKeysArgs(Objects.requireNonNull(defaults));
        }

        public Builder algorithms(@Nullable Output<List<String>> algorithms) {
            $.algorithms = algorithms;
            return this;
        }

        public Builder algorithms(List<String> algorithms) {
            return algorithms(Output.of(algorithms));
        }

        public Builder algorithms(String... algorithms) {
            return algorithms(List.of(algorithms));
        }

        public Builder realmId(Output<String> realmId) {
            $.realmId = realmId;
            return this;
        }

        public Builder realmId(String realmId) {
            return realmId(Output.of(realmId));
        }

        public Builder statuses(@Nullable Output<List<String>> statuses) {
            $.statuses = statuses;
            return this;
        }

        public Builder statuses(List<String> statuses) {
            return statuses(Output.of(statuses));
        }

        public Builder statuses(String... statuses) {
            return statuses(List.of(statuses));
        }

        public GetRealmKeysArgs build() {
            if ($.realmId == null) {
                throw new MissingRequiredPropertyException("GetRealmKeysArgs", "realmId");
            }
            return $;
        }
    }

}
