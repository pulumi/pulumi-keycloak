// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.keycloak.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetAuthenticationFlowArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAuthenticationFlowArgs Empty = new GetAuthenticationFlowArgs();

    /**
     * The alias of the flow.
     * 
     */
    @Import(name="alias", required=true)
    private Output<String> alias;

    /**
     * @return The alias of the flow.
     * 
     */
    public Output<String> alias() {
        return this.alias;
    }

    /**
     * The realm the authentication flow exists in.
     * 
     */
    @Import(name="realmId", required=true)
    private Output<String> realmId;

    /**
     * @return The realm the authentication flow exists in.
     * 
     */
    public Output<String> realmId() {
        return this.realmId;
    }

    private GetAuthenticationFlowArgs() {}

    private GetAuthenticationFlowArgs(GetAuthenticationFlowArgs $) {
        this.alias = $.alias;
        this.realmId = $.realmId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAuthenticationFlowArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAuthenticationFlowArgs $;

        public Builder() {
            $ = new GetAuthenticationFlowArgs();
        }

        public Builder(GetAuthenticationFlowArgs defaults) {
            $ = new GetAuthenticationFlowArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param alias The alias of the flow.
         * 
         * @return builder
         * 
         */
        public Builder alias(Output<String> alias) {
            $.alias = alias;
            return this;
        }

        /**
         * @param alias The alias of the flow.
         * 
         * @return builder
         * 
         */
        public Builder alias(String alias) {
            return alias(Output.of(alias));
        }

        /**
         * @param realmId The realm the authentication flow exists in.
         * 
         * @return builder
         * 
         */
        public Builder realmId(Output<String> realmId) {
            $.realmId = realmId;
            return this;
        }

        /**
         * @param realmId The realm the authentication flow exists in.
         * 
         * @return builder
         * 
         */
        public Builder realmId(String realmId) {
            return realmId(Output.of(realmId));
        }

        public GetAuthenticationFlowArgs build() {
            if ($.alias == null) {
                throw new MissingRequiredPropertyException("GetAuthenticationFlowArgs", "alias");
            }
            if ($.realmId == null) {
                throw new MissingRequiredPropertyException("GetAuthenticationFlowArgs", "realmId");
            }
            return $;
        }
    }

}
