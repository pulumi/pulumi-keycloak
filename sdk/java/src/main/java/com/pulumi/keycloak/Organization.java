// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.keycloak;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.keycloak.OrganizationArgs;
import com.pulumi.keycloak.Utilities;
import com.pulumi.keycloak.inputs.OrganizationState;
import com.pulumi.keycloak.outputs.OrganizationDomain;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Allow for creating and managing Organizations within Keycloak.
 * 
 * Attributes can also be defined on Groups.
 * 
 * Linkage with identity providers is managed with the identity provider resources.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.keycloak.Realm;
 * import com.pulumi.keycloak.RealmArgs;
 * import com.pulumi.keycloak.Organization;
 * import com.pulumi.keycloak.OrganizationArgs;
 * import com.pulumi.keycloak.inputs.OrganizationDomainArgs;
 * import com.pulumi.keycloak.oidc.IdentityProvider;
 * import com.pulumi.keycloak.oidc.IdentityProviderArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var realm = new Realm("realm", RealmArgs.builder()
 *             .realm("my-realm")
 *             .enabled(true)
 *             .build());
 * 
 *         var this_ = new Organization("this", OrganizationArgs.builder()
 *             .realm(realm.name())
 *             .name("org")
 *             .alias("org")
 *             .enabled(true)
 *             .domains(OrganizationDomainArgs.builder()
 *                 .name("example.com")
 *                 .build())
 *             .build());
 * 
 *         var thisIdentityProvider = new IdentityProvider("thisIdentityProvider", IdentityProviderArgs.builder()
 *             .realm(realm.name())
 *             .alias("my-idp")
 *             .authorizationUrl("https://authorizationurl.com")
 *             .clientId("clientID")
 *             .clientSecret("clientSecret")
 *             .tokenUrl("https://tokenurl.com")
 *             .organizationId(this_.id())
 *             .orgDomain("example.com")
 *             .orgRedirectModeEmailMatches(true)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Organizations can be imported using the format `{{realm_id}}/{{organization_id}}`, where `organization_id` is the unique ID that Keycloak
 * 
 * assigns to the organizations upon creation. This value can be found in the URI when editing this organization in the GUI, and is typically a GUID.
 * 
 * Example:
 * 
 * bash
 * 
 * ```sh
 * $ pulumi import keycloak:index/organization:Organization this my-realm/cec54914-b702-4c7b-9431-b407817d059a
 * ```
 * 
 */
@ResourceType(type="keycloak:index/organization:Organization")
public class Organization extends com.pulumi.resources.CustomResource {
    /**
     * The alias unique identifies the organization. Same as the name if not specified. The alias cannot be changed after the organization has been created.
     * 
     */
    @Export(name="alias", refs={String.class}, tree="[0]")
    private Output<String> alias;

    /**
     * @return The alias unique identifies the organization. Same as the name if not specified. The alias cannot be changed after the organization has been created.
     * 
     */
    public Output<String> alias() {
        return this.alias;
    }
    /**
     * A map representing attributes for the group. In order to add multivalued attributes, use `##` to separate the values. Max length for each value is 255 chars.
     * 
     */
    @Export(name="attributes", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> attributes;

    /**
     * @return A map representing attributes for the group. In order to add multivalued attributes, use `##` to separate the values. Max length for each value is 255 chars.
     * 
     */
    public Output<Map<String,String>> attributes() {
        return this.attributes;
    }
    /**
     * The description of the organization.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the organization.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * A list of domains. At least one domain is required.
     * 
     */
    @Export(name="domains", refs={List.class,OrganizationDomain.class}, tree="[0,1]")
    private Output<List<OrganizationDomain>> domains;

    /**
     * @return A list of domains. At least one domain is required.
     * 
     */
    public Output<List<OrganizationDomain>> domains() {
        return this.domains;
    }
    /**
     * Enable/disable this organization.
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enabled;

    /**
     * @return Enable/disable this organization.
     * 
     */
    public Output<Optional<Boolean>> enabled() {
        return Codegen.optional(this.enabled);
    }
    /**
     * The name of the organization.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the organization.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The realm this organization exists in.
     * 
     */
    @Export(name="realm", refs={String.class}, tree="[0]")
    private Output<String> realm;

    /**
     * @return The realm this organization exists in.
     * 
     */
    public Output<String> realm() {
        return this.realm;
    }
    /**
     * The landing page after user completes registration or accepts an invitation to the organization. If left empty, the user will be redirected to the account console by default.
     * 
     */
    @Export(name="redirectUrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> redirectUrl;

    /**
     * @return The landing page after user completes registration or accepts an invitation to the organization. If left empty, the user will be redirected to the account console by default.
     * 
     */
    public Output<Optional<String>> redirectUrl() {
        return Codegen.optional(this.redirectUrl);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Organization(java.lang.String name) {
        this(name, OrganizationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Organization(java.lang.String name, OrganizationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Organization(java.lang.String name, OrganizationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("keycloak:index/organization:Organization", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Organization(java.lang.String name, Output<java.lang.String> id, @Nullable OrganizationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("keycloak:index/organization:Organization", name, state, makeResourceOptions(options, id), false);
    }

    private static OrganizationArgs makeArgs(OrganizationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? OrganizationArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Organization get(java.lang.String name, Output<java.lang.String> id, @Nullable OrganizationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Organization(name, id, state, options);
    }
}
