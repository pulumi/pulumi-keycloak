// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.keycloak.saml;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.keycloak.Utilities;
import com.pulumi.keycloak.saml.ClientArgs;
import com.pulumi.keycloak.saml.inputs.ClientState;
import com.pulumi.keycloak.saml.outputs.ClientAuthenticationFlowBindingOverrides;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## # keycloak.saml.Client
 * 
 * Allows for creating and managing Keycloak clients that use the SAML protocol.
 * 
 * Clients are entities that can use Keycloak for user authentication. Typically,
 * clients are applications that redirect users to Keycloak for authentication
 * in order to take advantage of Keycloak&#39;s user sessions for SSO.
 * 
 * ### Import
 * 
 * Clients can be imported using the format `{{realm_id}}/{{client_keycloak_id}}`, where `client_keycloak_id` is the unique ID that Keycloak
 * assigns to the client upon creation. This value can be found in the URI when editing this client in the GUI, and is typically a GUID.
 * 
 * Example:
 * 
 */
@ResourceType(type="keycloak:saml/client:Client")
public class Client extends com.pulumi.resources.CustomResource {
    @Export(name="assertionConsumerPostUrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> assertionConsumerPostUrl;

    public Output<Optional<String>> assertionConsumerPostUrl() {
        return Codegen.optional(this.assertionConsumerPostUrl);
    }
    @Export(name="assertionConsumerRedirectUrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> assertionConsumerRedirectUrl;

    public Output<Optional<String>> assertionConsumerRedirectUrl() {
        return Codegen.optional(this.assertionConsumerRedirectUrl);
    }
    @Export(name="authenticationFlowBindingOverrides", refs={ClientAuthenticationFlowBindingOverrides.class}, tree="[0]")
    private Output</* @Nullable */ ClientAuthenticationFlowBindingOverrides> authenticationFlowBindingOverrides;

    public Output<Optional<ClientAuthenticationFlowBindingOverrides>> authenticationFlowBindingOverrides() {
        return Codegen.optional(this.authenticationFlowBindingOverrides);
    }
    @Export(name="baseUrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> baseUrl;

    public Output<Optional<String>> baseUrl() {
        return Codegen.optional(this.baseUrl);
    }
    @Export(name="canonicalizationMethod", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> canonicalizationMethod;

    public Output<Optional<String>> canonicalizationMethod() {
        return Codegen.optional(this.canonicalizationMethod);
    }
    @Export(name="clientId", refs={String.class}, tree="[0]")
    private Output<String> clientId;

    public Output<String> clientId() {
        return this.clientId;
    }
    @Export(name="clientSignatureRequired", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> clientSignatureRequired;

    public Output<Optional<Boolean>> clientSignatureRequired() {
        return Codegen.optional(this.clientSignatureRequired);
    }
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enabled;

    public Output<Optional<Boolean>> enabled() {
        return Codegen.optional(this.enabled);
    }
    @Export(name="encryptAssertions", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> encryptAssertions;

    public Output<Optional<Boolean>> encryptAssertions() {
        return Codegen.optional(this.encryptAssertions);
    }
    @Export(name="encryptionCertificate", refs={String.class}, tree="[0]")
    private Output<String> encryptionCertificate;

    public Output<String> encryptionCertificate() {
        return this.encryptionCertificate;
    }
    @Export(name="encryptionCertificateSha1", refs={String.class}, tree="[0]")
    private Output<String> encryptionCertificateSha1;

    public Output<String> encryptionCertificateSha1() {
        return this.encryptionCertificateSha1;
    }
    @Export(name="extraConfig", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output</* @Nullable */ Map<String,Object>> extraConfig;

    public Output<Optional<Map<String,Object>>> extraConfig() {
        return Codegen.optional(this.extraConfig);
    }
    @Export(name="forceNameIdFormat", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> forceNameIdFormat;

    public Output<Optional<Boolean>> forceNameIdFormat() {
        return Codegen.optional(this.forceNameIdFormat);
    }
    @Export(name="forcePostBinding", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> forcePostBinding;

    public Output<Optional<Boolean>> forcePostBinding() {
        return Codegen.optional(this.forcePostBinding);
    }
    @Export(name="frontChannelLogout", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> frontChannelLogout;

    public Output<Optional<Boolean>> frontChannelLogout() {
        return Codegen.optional(this.frontChannelLogout);
    }
    @Export(name="fullScopeAllowed", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> fullScopeAllowed;

    public Output<Optional<Boolean>> fullScopeAllowed() {
        return Codegen.optional(this.fullScopeAllowed);
    }
    @Export(name="idpInitiatedSsoRelayState", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> idpInitiatedSsoRelayState;

    public Output<Optional<String>> idpInitiatedSsoRelayState() {
        return Codegen.optional(this.idpInitiatedSsoRelayState);
    }
    @Export(name="idpInitiatedSsoUrlName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> idpInitiatedSsoUrlName;

    public Output<Optional<String>> idpInitiatedSsoUrlName() {
        return Codegen.optional(this.idpInitiatedSsoUrlName);
    }
    @Export(name="includeAuthnStatement", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> includeAuthnStatement;

    public Output<Optional<Boolean>> includeAuthnStatement() {
        return Codegen.optional(this.includeAuthnStatement);
    }
    @Export(name="loginTheme", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> loginTheme;

    public Output<Optional<String>> loginTheme() {
        return Codegen.optional(this.loginTheme);
    }
    @Export(name="logoutServicePostBindingUrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> logoutServicePostBindingUrl;

    public Output<Optional<String>> logoutServicePostBindingUrl() {
        return Codegen.optional(this.logoutServicePostBindingUrl);
    }
    @Export(name="logoutServiceRedirectBindingUrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> logoutServiceRedirectBindingUrl;

    public Output<Optional<String>> logoutServiceRedirectBindingUrl() {
        return Codegen.optional(this.logoutServiceRedirectBindingUrl);
    }
    @Export(name="masterSamlProcessingUrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> masterSamlProcessingUrl;

    public Output<Optional<String>> masterSamlProcessingUrl() {
        return Codegen.optional(this.masterSamlProcessingUrl);
    }
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }
    @Export(name="nameIdFormat", refs={String.class}, tree="[0]")
    private Output<String> nameIdFormat;

    public Output<String> nameIdFormat() {
        return this.nameIdFormat;
    }
    @Export(name="realmId", refs={String.class}, tree="[0]")
    private Output<String> realmId;

    public Output<String> realmId() {
        return this.realmId;
    }
    @Export(name="rootUrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> rootUrl;

    public Output<Optional<String>> rootUrl() {
        return Codegen.optional(this.rootUrl);
    }
    @Export(name="signAssertions", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> signAssertions;

    public Output<Optional<Boolean>> signAssertions() {
        return Codegen.optional(this.signAssertions);
    }
    @Export(name="signDocuments", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> signDocuments;

    public Output<Optional<Boolean>> signDocuments() {
        return Codegen.optional(this.signDocuments);
    }
    @Export(name="signatureAlgorithm", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> signatureAlgorithm;

    public Output<Optional<String>> signatureAlgorithm() {
        return Codegen.optional(this.signatureAlgorithm);
    }
    @Export(name="signatureKeyName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> signatureKeyName;

    public Output<Optional<String>> signatureKeyName() {
        return Codegen.optional(this.signatureKeyName);
    }
    @Export(name="signingCertificate", refs={String.class}, tree="[0]")
    private Output<String> signingCertificate;

    public Output<String> signingCertificate() {
        return this.signingCertificate;
    }
    @Export(name="signingCertificateSha1", refs={String.class}, tree="[0]")
    private Output<String> signingCertificateSha1;

    public Output<String> signingCertificateSha1() {
        return this.signingCertificateSha1;
    }
    @Export(name="signingPrivateKey", refs={String.class}, tree="[0]")
    private Output<String> signingPrivateKey;

    public Output<String> signingPrivateKey() {
        return this.signingPrivateKey;
    }
    @Export(name="signingPrivateKeySha1", refs={String.class}, tree="[0]")
    private Output<String> signingPrivateKeySha1;

    public Output<String> signingPrivateKeySha1() {
        return this.signingPrivateKeySha1;
    }
    @Export(name="validRedirectUris", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> validRedirectUris;

    public Output<Optional<List<String>>> validRedirectUris() {
        return Codegen.optional(this.validRedirectUris);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Client(java.lang.String name) {
        this(name, ClientArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Client(java.lang.String name, ClientArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Client(java.lang.String name, ClientArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("keycloak:saml/client:Client", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Client(java.lang.String name, Output<java.lang.String> id, @Nullable ClientState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("keycloak:saml/client:Client", name, state, makeResourceOptions(options, id), false);
    }

    private static ClientArgs makeArgs(ClientArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ClientArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Client get(java.lang.String name, Output<java.lang.String> id, @Nullable ClientState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Client(name, id, state, options);
    }
}
