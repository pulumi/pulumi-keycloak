// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.keycloak.saml;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.keycloak.Utilities;
import com.pulumi.keycloak.saml.ClientScopeArgs;
import com.pulumi.keycloak.saml.inputs.ClientScopeState;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Allows for creating and managing Keycloak client scopes that can be attached to clients that use the SAML protocol.
 * 
 * Client Scopes can be used to share common protocol and role mappings between multiple clients within a realm.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.keycloak.Realm;
 * import com.pulumi.keycloak.RealmArgs;
 * import com.pulumi.keycloak.saml.ClientScope;
 * import com.pulumi.keycloak.saml.ClientScopeArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var realm = new Realm(&#34;realm&#34;, RealmArgs.builder()        
 *             .realm(&#34;my-realm&#34;)
 *             .enabled(true)
 *             .build());
 * 
 *         var samlClientScope = new ClientScope(&#34;samlClientScope&#34;, ClientScopeArgs.builder()        
 *             .realmId(realm.id())
 *             .description(&#34;This scope will map a user&#39;s group memberships to SAML assertion&#34;)
 *             .guiOrder(1)
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Client scopes can be imported using the format `{{realm_id}}/{{client_scope_id}}`, where `client_scope_id` is the unique ID that Keycloak
 * 
 * assigns to the client scope upon creation. This value can be found in the URI when editing this client scope in the GUI, and is typically a GUID.
 * 
 * Example:
 * 
 * bash
 * 
 * ```sh
 * $ pulumi import keycloak:saml/clientScope:ClientScope saml_client_scope my-realm/e8a5d115-6985-4de3-a0f5-732e1be4525e
 * ```
 * 
 */
@ResourceType(type="keycloak:saml/clientScope:ClientScope")
public class ClientScope extends com.pulumi.resources.CustomResource {
    /**
     * When set, a consent screen will be displayed to users authenticating to clients with this scope attached. The consent screen will display the string value of this attribute.
     * 
     */
    @Export(name="consentScreenText", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> consentScreenText;

    /**
     * @return When set, a consent screen will be displayed to users authenticating to clients with this scope attached. The consent screen will display the string value of this attribute.
     * 
     */
    public Output<Optional<String>> consentScreenText() {
        return Codegen.optional(this.consentScreenText);
    }
    /**
     * The description of this client scope in the GUI.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of this client scope in the GUI.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Specify order of the client scope in GUI (such as in Consent page) as integer.
     * 
     */
    @Export(name="guiOrder", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> guiOrder;

    /**
     * @return Specify order of the client scope in GUI (such as in Consent page) as integer.
     * 
     */
    public Output<Optional<Integer>> guiOrder() {
        return Codegen.optional(this.guiOrder);
    }
    /**
     * The display name of this client scope in the GUI.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The display name of this client scope in the GUI.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The realm this client scope belongs to.
     * 
     */
    @Export(name="realmId", refs={String.class}, tree="[0]")
    private Output<String> realmId;

    /**
     * @return The realm this client scope belongs to.
     * 
     */
    public Output<String> realmId() {
        return this.realmId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ClientScope(String name) {
        this(name, ClientScopeArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ClientScope(String name, ClientScopeArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ClientScope(String name, ClientScopeArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("keycloak:saml/clientScope:ClientScope", name, args == null ? ClientScopeArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ClientScope(String name, Output<String> id, @Nullable ClientScopeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("keycloak:saml/clientScope:ClientScope", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ClientScope get(String name, Output<String> id, @Nullable ClientScopeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ClientScope(name, id, state, options);
    }
}
