// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.keycloak.openid;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.keycloak.Utilities;
import com.pulumi.keycloak.openid.ClientAuthorizationPermissionArgs;
import com.pulumi.keycloak.openid.inputs.ClientAuthorizationPermissionState;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Allows you to manage openid Client Authorization Permissions.
 * 
 * ## Import
 * 
 * Client authorization permissions can be imported using the format: `{{realmId}}/{{resourceServerId}}/{{permissionId}}`.
 * 
 * Example:
 * 
 * bash
 * 
 * ```sh
 * $ pulumi import keycloak:openid/clientAuthorizationPermission:ClientAuthorizationPermission test my-realm/3bd4a686-1062-4b59-97b8-e4e3f10b99da/63b3cde8-987d-4cd9-9306-1955579281d9
 * ```
 * 
 */
@ResourceType(type="keycloak:openid/clientAuthorizationPermission:ClientAuthorizationPermission")
public class ClientAuthorizationPermission extends com.pulumi.resources.CustomResource {
    @Export(name="decisionStrategy", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> decisionStrategy;

    public Output<Optional<String>> decisionStrategy() {
        return Codegen.optional(this.decisionStrategy);
    }
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }
    @Export(name="policies", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> policies;

    public Output<Optional<List<String>>> policies() {
        return Codegen.optional(this.policies);
    }
    @Export(name="realmId", refs={String.class}, tree="[0]")
    private Output<String> realmId;

    public Output<String> realmId() {
        return this.realmId;
    }
    @Export(name="resourceServerId", refs={String.class}, tree="[0]")
    private Output<String> resourceServerId;

    public Output<String> resourceServerId() {
        return this.resourceServerId;
    }
    @Export(name="resourceType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> resourceType;

    public Output<Optional<String>> resourceType() {
        return Codegen.optional(this.resourceType);
    }
    @Export(name="resources", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> resources;

    public Output<Optional<List<String>>> resources() {
        return Codegen.optional(this.resources);
    }
    @Export(name="scopes", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> scopes;

    public Output<Optional<List<String>>> scopes() {
        return Codegen.optional(this.scopes);
    }
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> type;

    public Output<Optional<String>> type() {
        return Codegen.optional(this.type);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ClientAuthorizationPermission(String name) {
        this(name, ClientAuthorizationPermissionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ClientAuthorizationPermission(String name, ClientAuthorizationPermissionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ClientAuthorizationPermission(String name, ClientAuthorizationPermissionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("keycloak:openid/clientAuthorizationPermission:ClientAuthorizationPermission", name, args == null ? ClientAuthorizationPermissionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ClientAuthorizationPermission(String name, Output<String> id, @Nullable ClientAuthorizationPermissionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("keycloak:openid/clientAuthorizationPermission:ClientAuthorizationPermission", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ClientAuthorizationPermission get(String name, Output<String> id, @Nullable ClientAuthorizationPermissionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ClientAuthorizationPermission(name, id, state, options);
    }
}
