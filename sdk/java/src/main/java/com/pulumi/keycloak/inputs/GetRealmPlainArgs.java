// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.keycloak.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.keycloak.inputs.GetRealmInternationalization;
import com.pulumi.keycloak.inputs.GetRealmOtpPolicy;
import com.pulumi.keycloak.inputs.GetRealmSecurityDefense;
import com.pulumi.keycloak.inputs.GetRealmSmtpServer;
import com.pulumi.keycloak.inputs.GetRealmWebAuthnPasswordlessPolicy;
import com.pulumi.keycloak.inputs.GetRealmWebAuthnPolicy;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRealmPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRealmPlainArgs Empty = new GetRealmPlainArgs();

    @Import(name="attributes")
    private @Nullable Map<String,String> attributes;

    public Optional<Map<String,String>> attributes() {
        return Optional.ofNullable(this.attributes);
    }

    @Import(name="defaultDefaultClientScopes")
    private @Nullable List<String> defaultDefaultClientScopes;

    public Optional<List<String>> defaultDefaultClientScopes() {
        return Optional.ofNullable(this.defaultDefaultClientScopes);
    }

    @Import(name="defaultOptionalClientScopes")
    private @Nullable List<String> defaultOptionalClientScopes;

    public Optional<List<String>> defaultOptionalClientScopes() {
        return Optional.ofNullable(this.defaultOptionalClientScopes);
    }

    @Import(name="displayNameHtml")
    private @Nullable String displayNameHtml;

    public Optional<String> displayNameHtml() {
        return Optional.ofNullable(this.displayNameHtml);
    }

    @Import(name="internationalizations")
    private @Nullable List<GetRealmInternationalization> internationalizations;

    public Optional<List<GetRealmInternationalization>> internationalizations() {
        return Optional.ofNullable(this.internationalizations);
    }

    @Import(name="otpPolicy")
    private @Nullable GetRealmOtpPolicy otpPolicy;

    public Optional<GetRealmOtpPolicy> otpPolicy() {
        return Optional.ofNullable(this.otpPolicy);
    }

    /**
     * The realm name.
     * 
     */
    @Import(name="realm", required=true)
    private String realm;

    /**
     * @return The realm name.
     * 
     */
    public String realm() {
        return this.realm;
    }

    @Import(name="securityDefenses")
    private @Nullable List<GetRealmSecurityDefense> securityDefenses;

    public Optional<List<GetRealmSecurityDefense>> securityDefenses() {
        return Optional.ofNullable(this.securityDefenses);
    }

    @Import(name="smtpServers")
    private @Nullable List<GetRealmSmtpServer> smtpServers;

    public Optional<List<GetRealmSmtpServer>> smtpServers() {
        return Optional.ofNullable(this.smtpServers);
    }

    @Import(name="webAuthnPasswordlessPolicy")
    private @Nullable GetRealmWebAuthnPasswordlessPolicy webAuthnPasswordlessPolicy;

    public Optional<GetRealmWebAuthnPasswordlessPolicy> webAuthnPasswordlessPolicy() {
        return Optional.ofNullable(this.webAuthnPasswordlessPolicy);
    }

    @Import(name="webAuthnPolicy")
    private @Nullable GetRealmWebAuthnPolicy webAuthnPolicy;

    public Optional<GetRealmWebAuthnPolicy> webAuthnPolicy() {
        return Optional.ofNullable(this.webAuthnPolicy);
    }

    private GetRealmPlainArgs() {}

    private GetRealmPlainArgs(GetRealmPlainArgs $) {
        this.attributes = $.attributes;
        this.defaultDefaultClientScopes = $.defaultDefaultClientScopes;
        this.defaultOptionalClientScopes = $.defaultOptionalClientScopes;
        this.displayNameHtml = $.displayNameHtml;
        this.internationalizations = $.internationalizations;
        this.otpPolicy = $.otpPolicy;
        this.realm = $.realm;
        this.securityDefenses = $.securityDefenses;
        this.smtpServers = $.smtpServers;
        this.webAuthnPasswordlessPolicy = $.webAuthnPasswordlessPolicy;
        this.webAuthnPolicy = $.webAuthnPolicy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRealmPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRealmPlainArgs $;

        public Builder() {
            $ = new GetRealmPlainArgs();
        }

        public Builder(GetRealmPlainArgs defaults) {
            $ = new GetRealmPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder attributes(@Nullable Map<String,String> attributes) {
            $.attributes = attributes;
            return this;
        }

        public Builder defaultDefaultClientScopes(@Nullable List<String> defaultDefaultClientScopes) {
            $.defaultDefaultClientScopes = defaultDefaultClientScopes;
            return this;
        }

        public Builder defaultDefaultClientScopes(String... defaultDefaultClientScopes) {
            return defaultDefaultClientScopes(List.of(defaultDefaultClientScopes));
        }

        public Builder defaultOptionalClientScopes(@Nullable List<String> defaultOptionalClientScopes) {
            $.defaultOptionalClientScopes = defaultOptionalClientScopes;
            return this;
        }

        public Builder defaultOptionalClientScopes(String... defaultOptionalClientScopes) {
            return defaultOptionalClientScopes(List.of(defaultOptionalClientScopes));
        }

        public Builder displayNameHtml(@Nullable String displayNameHtml) {
            $.displayNameHtml = displayNameHtml;
            return this;
        }

        public Builder internationalizations(@Nullable List<GetRealmInternationalization> internationalizations) {
            $.internationalizations = internationalizations;
            return this;
        }

        public Builder internationalizations(GetRealmInternationalization... internationalizations) {
            return internationalizations(List.of(internationalizations));
        }

        public Builder otpPolicy(@Nullable GetRealmOtpPolicy otpPolicy) {
            $.otpPolicy = otpPolicy;
            return this;
        }

        /**
         * @param realm The realm name.
         * 
         * @return builder
         * 
         */
        public Builder realm(String realm) {
            $.realm = realm;
            return this;
        }

        public Builder securityDefenses(@Nullable List<GetRealmSecurityDefense> securityDefenses) {
            $.securityDefenses = securityDefenses;
            return this;
        }

        public Builder securityDefenses(GetRealmSecurityDefense... securityDefenses) {
            return securityDefenses(List.of(securityDefenses));
        }

        public Builder smtpServers(@Nullable List<GetRealmSmtpServer> smtpServers) {
            $.smtpServers = smtpServers;
            return this;
        }

        public Builder smtpServers(GetRealmSmtpServer... smtpServers) {
            return smtpServers(List.of(smtpServers));
        }

        public Builder webAuthnPasswordlessPolicy(@Nullable GetRealmWebAuthnPasswordlessPolicy webAuthnPasswordlessPolicy) {
            $.webAuthnPasswordlessPolicy = webAuthnPasswordlessPolicy;
            return this;
        }

        public Builder webAuthnPolicy(@Nullable GetRealmWebAuthnPolicy webAuthnPolicy) {
            $.webAuthnPolicy = webAuthnPolicy;
            return this;
        }

        public GetRealmPlainArgs build() {
            if ($.realm == null) {
                throw new MissingRequiredPropertyException("GetRealmPlainArgs", "realm");
            }
            return $;
        }
    }

}
