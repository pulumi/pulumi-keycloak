// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.keycloak.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class UserFederatedIdentity {
    /**
     * @return The name of the identity provider
     * 
     */
    private String identityProvider;
    /**
     * @return The ID of the user defined in the identity provider
     * 
     */
    private String userId;
    /**
     * @return The user name of the user defined in the identity provider
     * 
     */
    private String userName;

    private UserFederatedIdentity() {}
    /**
     * @return The name of the identity provider
     * 
     */
    public String identityProvider() {
        return this.identityProvider;
    }
    /**
     * @return The ID of the user defined in the identity provider
     * 
     */
    public String userId() {
        return this.userId;
    }
    /**
     * @return The user name of the user defined in the identity provider
     * 
     */
    public String userName() {
        return this.userName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UserFederatedIdentity defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String identityProvider;
        private String userId;
        private String userName;
        public Builder() {}
        public Builder(UserFederatedIdentity defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.identityProvider = defaults.identityProvider;
    	      this.userId = defaults.userId;
    	      this.userName = defaults.userName;
        }

        @CustomType.Setter
        public Builder identityProvider(String identityProvider) {
            this.identityProvider = Objects.requireNonNull(identityProvider);
            return this;
        }
        @CustomType.Setter
        public Builder userId(String userId) {
            this.userId = Objects.requireNonNull(userId);
            return this;
        }
        @CustomType.Setter
        public Builder userName(String userName) {
            this.userName = Objects.requireNonNull(userName);
            return this;
        }
        public UserFederatedIdentity build() {
            final var _resultValue = new UserFederatedIdentity();
            _resultValue.identityProvider = identityProvider;
            _resultValue.userId = userId;
            _resultValue.userName = userName;
            return _resultValue;
        }
    }
}
