// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Keycloak.Inputs
{

    public sealed class RealmUserProfileAttributeGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("annotations")]
        private InputMap<string>? _annotations;
        public InputMap<string> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<string>());
            set => _annotations = value;
        }

        /// <summary>
        /// The display name of the attribute.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("enabledWhenScopes")]
        private InputList<string>? _enabledWhenScopes;

        /// <summary>
        /// A list of scopes. The attribute will only be enabled when these scopes are requested by clients.
        /// </summary>
        public InputList<string> EnabledWhenScopes
        {
            get => _enabledWhenScopes ?? (_enabledWhenScopes = new InputList<string>());
            set => _enabledWhenScopes = value;
        }

        /// <summary>
        /// A list of groups.
        /// </summary>
        [Input("group")]
        public Input<string>? Group { get; set; }

        /// <summary>
        /// If the attribute supports multiple values. Defaults to `false`.
        /// </summary>
        [Input("multiValued")]
        public Input<bool>? MultiValued { get; set; }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The permissions configuration information.
        /// </summary>
        [Input("permissions")]
        public Input<Inputs.RealmUserProfileAttributePermissionsGetArgs>? Permissions { get; set; }

        [Input("requiredForRoles")]
        private InputList<string>? _requiredForRoles;

        /// <summary>
        /// A list of roles for which the attribute will be required.
        /// </summary>
        public InputList<string> RequiredForRoles
        {
            get => _requiredForRoles ?? (_requiredForRoles = new InputList<string>());
            set => _requiredForRoles = value;
        }

        [Input("requiredForScopes")]
        private InputList<string>? _requiredForScopes;

        /// <summary>
        /// A list of scopes for which the attribute will be required.
        /// </summary>
        public InputList<string> RequiredForScopes
        {
            get => _requiredForScopes ?? (_requiredForScopes = new InputList<string>());
            set => _requiredForScopes = value;
        }

        [Input("validators")]
        private InputList<Inputs.RealmUserProfileAttributeValidatorGetArgs>? _validators;

        /// <summary>
        /// A list of validators for the attribute.
        /// </summary>
        public InputList<Inputs.RealmUserProfileAttributeValidatorGetArgs> Validators
        {
            get => _validators ?? (_validators = new InputList<Inputs.RealmUserProfileAttributeValidatorGetArgs>());
            set => _validators = value;
        }

        public RealmUserProfileAttributeGetArgs()
        {
        }
        public static new RealmUserProfileAttributeGetArgs Empty => new RealmUserProfileAttributeGetArgs();
    }
}
