// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Keycloak
{
    public static class GetRole
    {
        /// <summary>
        /// ## # keycloak.Role data source
        /// 
        /// This data source can be used to fetch properties of a Keycloak role for
        /// usage with other resources, such as `keycloak.GroupRoles`.
        /// </summary>
        public static Task<GetRoleResult> InvokeAsync(GetRoleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRoleResult>("keycloak:index/getRole:getRole", args ?? new GetRoleArgs(), options.WithDefaults());

        /// <summary>
        /// ## # keycloak.Role data source
        /// 
        /// This data source can be used to fetch properties of a Keycloak role for
        /// usage with other resources, such as `keycloak.GroupRoles`.
        /// </summary>
        public static Output<GetRoleResult> Invoke(GetRoleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRoleResult>("keycloak:index/getRole:getRole", args ?? new GetRoleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRoleArgs : global::Pulumi.InvokeArgs
    {
        [Input("clientId")]
        public string? ClientId { get; set; }

        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("realmId", required: true)]
        public string RealmId { get; set; } = null!;

        public GetRoleArgs()
        {
        }
        public static new GetRoleArgs Empty => new GetRoleArgs();
    }

    public sealed class GetRoleInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("clientId")]
        public Input<string>? ClientId { get; set; }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("realmId", required: true)]
        public Input<string> RealmId { get; set; } = null!;

        public GetRoleInvokeArgs()
        {
        }
        public static new GetRoleInvokeArgs Empty => new GetRoleInvokeArgs();
    }


    [OutputType]
    public sealed class GetRoleResult
    {
        public readonly ImmutableDictionary<string, object> Attributes;
        public readonly string? ClientId;
        public readonly ImmutableArray<string> CompositeRoles;
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string RealmId;

        [OutputConstructor]
        private GetRoleResult(
            ImmutableDictionary<string, object> attributes,

            string? clientId,

            ImmutableArray<string> compositeRoles,

            string description,

            string id,

            string name,

            string realmId)
        {
            Attributes = attributes;
            ClientId = clientId;
            CompositeRoles = compositeRoles;
            Description = description;
            Id = id;
            Name = name;
            RealmId = realmId;
        }
    }
}
