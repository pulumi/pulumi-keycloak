// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Keycloak
{
    /// <summary>
    /// Allows for managing Realm Client Policy Profiles.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Keycloak = Pulumi.Keycloak;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var realm = new Keycloak.Realm("realm", new()
    ///     {
    ///         RealmName = "my-realm",
    ///     });
    /// 
    ///     var profile = new Keycloak.RealmClientPolicyProfile("profile", new()
    ///     {
    ///         Name = "my-profile",
    ///         RealmId = realm.Id,
    ///         Executors = new[]
    ///         {
    ///             new Keycloak.Inputs.RealmClientPolicyProfileExecutorArgs
    ///             {
    ///                 Name = "intent-client-bind-checker",
    ///                 Configuration = 
    ///                 {
    ///                     { "auto-configure", "true" },
    ///                 },
    ///             },
    ///             new Keycloak.Inputs.RealmClientPolicyProfileExecutorArgs
    ///             {
    ///                 Name = "secure-session",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ### Attribute Arguments
    /// 
    /// - `Name` - (Required) The name of the attribute.
    /// - `RealmId` - (Required) The realm id.
    /// - `Executor` - (Optional) An ordered list of executors
    /// 
    /// #### Executor Arguments
    /// 
    /// - `Name` - (Required) The name of the executor. NOTE! The executor needs to exist
    /// - `Configuration` - (Optional) - A map of configuration values
    /// 
    /// ## Import
    /// 
    /// This resource currently does not support importing.
    /// </summary>
    [KeycloakResourceType("keycloak:index/realmClientPolicyProfile:RealmClientPolicyProfile")]
    public partial class RealmClientPolicyProfile : global::Pulumi.CustomResource
    {
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("executors")]
        public Output<ImmutableArray<Outputs.RealmClientPolicyProfileExecutor>> Executors { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("realmId")]
        public Output<string> RealmId { get; private set; } = null!;


        /// <summary>
        /// Create a RealmClientPolicyProfile resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RealmClientPolicyProfile(string name, RealmClientPolicyProfileArgs args, CustomResourceOptions? options = null)
            : base("keycloak:index/realmClientPolicyProfile:RealmClientPolicyProfile", name, args ?? new RealmClientPolicyProfileArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RealmClientPolicyProfile(string name, Input<string> id, RealmClientPolicyProfileState? state = null, CustomResourceOptions? options = null)
            : base("keycloak:index/realmClientPolicyProfile:RealmClientPolicyProfile", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RealmClientPolicyProfile resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RealmClientPolicyProfile Get(string name, Input<string> id, RealmClientPolicyProfileState? state = null, CustomResourceOptions? options = null)
        {
            return new RealmClientPolicyProfile(name, id, state, options);
        }
    }

    public sealed class RealmClientPolicyProfileArgs : global::Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("executors")]
        private InputList<Inputs.RealmClientPolicyProfileExecutorArgs>? _executors;
        public InputList<Inputs.RealmClientPolicyProfileExecutorArgs> Executors
        {
            get => _executors ?? (_executors = new InputList<Inputs.RealmClientPolicyProfileExecutorArgs>());
            set => _executors = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("realmId", required: true)]
        public Input<string> RealmId { get; set; } = null!;

        public RealmClientPolicyProfileArgs()
        {
        }
        public static new RealmClientPolicyProfileArgs Empty => new RealmClientPolicyProfileArgs();
    }

    public sealed class RealmClientPolicyProfileState : global::Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("executors")]
        private InputList<Inputs.RealmClientPolicyProfileExecutorGetArgs>? _executors;
        public InputList<Inputs.RealmClientPolicyProfileExecutorGetArgs> Executors
        {
            get => _executors ?? (_executors = new InputList<Inputs.RealmClientPolicyProfileExecutorGetArgs>());
            set => _executors = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("realmId")]
        public Input<string>? RealmId { get; set; }

        public RealmClientPolicyProfileState()
        {
        }
        public static new RealmClientPolicyProfileState Empty => new RealmClientPolicyProfileState();
    }
}
