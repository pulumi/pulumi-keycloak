// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Keycloak.Authentication
{
    /// <summary>
    /// Allows for creating and managing realm authentication flow bindings within Keycloak.
    /// 
    /// [Authentication flows](https://www.keycloak.org/docs/latest/server_admin/index.html#_authentication-flows) describe a sequence
    /// of actions that a user or service must perform in order to be authenticated to Keycloak. The authentication flow itself
    /// is a container for these actions, which are otherwise known as executions.
    /// 
    /// Realms assign authentication flows to supported user flows such as `registration` and `browser`. This resource allows the
    /// updating of realm authentication flow bindings to custom authentication flows created by `keycloak.authentication.Flow`.
    /// 
    /// Note that you can also use the `keycloak.Realm` resource to assign authentication flow bindings at the realm level. This
    /// resource is useful if you would like to create a realm and an authentication flow, and assign this flow to the realm within
    /// a single run of `pulumi up`. In any case, do not attempt to use both the arguments within the `keycloak.Realm` resource
    /// and this resource to manage authentication flow bindings, you should choose one or the other.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Keycloak = Pulumi.Keycloak;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var realm = new Keycloak.Realm("realm", new()
    ///     {
    ///         RealmName = "my-realm",
    ///         Enabled = true,
    ///     });
    /// 
    ///     var flow = new Keycloak.Authentication.Flow("flow", new()
    ///     {
    ///         RealmId = realm.Id,
    ///         Alias = "my-flow-alias",
    ///     });
    /// 
    ///     // first execution
    ///     var executionOne = new Keycloak.Authentication.Execution("executionOne", new()
    ///     {
    ///         RealmId = realm.Id,
    ///         ParentFlowAlias = flow.Alias,
    ///         Authenticator = "auth-cookie",
    ///         Requirement = "ALTERNATIVE",
    ///     });
    /// 
    ///     // second execution
    ///     var executionTwo = new Keycloak.Authentication.Execution("executionTwo", new()
    ///     {
    ///         RealmId = realm.Id,
    ///         ParentFlowAlias = flow.Alias,
    ///         Authenticator = "identity-provider-redirector",
    ///         Requirement = "ALTERNATIVE",
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             executionOne, 
    ///         },
    ///     });
    /// 
    ///     var browserAuthenticationBinding = new Keycloak.Authentication.Bindings("browserAuthenticationBinding", new()
    ///     {
    ///         RealmId = realm.Id,
    ///         BrowserFlow = flow.Alias,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// </summary>
    [KeycloakResourceType("keycloak:authentication/bindings:Bindings")]
    public partial class Bindings : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The alias of the flow to assign to the realm BrowserFlow.
        /// </summary>
        [Output("browserFlow")]
        public Output<string> BrowserFlow { get; private set; } = null!;

        /// <summary>
        /// The alias of the flow to assign to the realm ClientAuthenticationFlow.
        /// </summary>
        [Output("clientAuthenticationFlow")]
        public Output<string> ClientAuthenticationFlow { get; private set; } = null!;

        /// <summary>
        /// The alias of the flow to assign to the realm DirectGrantFlow.
        /// </summary>
        [Output("directGrantFlow")]
        public Output<string> DirectGrantFlow { get; private set; } = null!;

        /// <summary>
        /// The alias of the flow to assign to the realm DockerAuthenticationFlow.
        /// </summary>
        [Output("dockerAuthenticationFlow")]
        public Output<string> DockerAuthenticationFlow { get; private set; } = null!;

        /// <summary>
        /// The realm the authentication flow binding exists in.
        /// </summary>
        [Output("realmId")]
        public Output<string> RealmId { get; private set; } = null!;

        /// <summary>
        /// The alias of the flow to assign to the realm RegistrationFlow.
        /// </summary>
        [Output("registrationFlow")]
        public Output<string> RegistrationFlow { get; private set; } = null!;

        /// <summary>
        /// The alias of the flow to assign to the realm ResetCredentialsFlow.
        /// </summary>
        [Output("resetCredentialsFlow")]
        public Output<string> ResetCredentialsFlow { get; private set; } = null!;


        /// <summary>
        /// Create a Bindings resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Bindings(string name, BindingsArgs args, CustomResourceOptions? options = null)
            : base("keycloak:authentication/bindings:Bindings", name, args ?? new BindingsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Bindings(string name, Input<string> id, BindingsState? state = null, CustomResourceOptions? options = null)
            : base("keycloak:authentication/bindings:Bindings", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Bindings resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Bindings Get(string name, Input<string> id, BindingsState? state = null, CustomResourceOptions? options = null)
        {
            return new Bindings(name, id, state, options);
        }
    }

    public sealed class BindingsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The alias of the flow to assign to the realm BrowserFlow.
        /// </summary>
        [Input("browserFlow")]
        public Input<string>? BrowserFlow { get; set; }

        /// <summary>
        /// The alias of the flow to assign to the realm ClientAuthenticationFlow.
        /// </summary>
        [Input("clientAuthenticationFlow")]
        public Input<string>? ClientAuthenticationFlow { get; set; }

        /// <summary>
        /// The alias of the flow to assign to the realm DirectGrantFlow.
        /// </summary>
        [Input("directGrantFlow")]
        public Input<string>? DirectGrantFlow { get; set; }

        /// <summary>
        /// The alias of the flow to assign to the realm DockerAuthenticationFlow.
        /// </summary>
        [Input("dockerAuthenticationFlow")]
        public Input<string>? DockerAuthenticationFlow { get; set; }

        /// <summary>
        /// The realm the authentication flow binding exists in.
        /// </summary>
        [Input("realmId", required: true)]
        public Input<string> RealmId { get; set; } = null!;

        /// <summary>
        /// The alias of the flow to assign to the realm RegistrationFlow.
        /// </summary>
        [Input("registrationFlow")]
        public Input<string>? RegistrationFlow { get; set; }

        /// <summary>
        /// The alias of the flow to assign to the realm ResetCredentialsFlow.
        /// </summary>
        [Input("resetCredentialsFlow")]
        public Input<string>? ResetCredentialsFlow { get; set; }

        public BindingsArgs()
        {
        }
        public static new BindingsArgs Empty => new BindingsArgs();
    }

    public sealed class BindingsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The alias of the flow to assign to the realm BrowserFlow.
        /// </summary>
        [Input("browserFlow")]
        public Input<string>? BrowserFlow { get; set; }

        /// <summary>
        /// The alias of the flow to assign to the realm ClientAuthenticationFlow.
        /// </summary>
        [Input("clientAuthenticationFlow")]
        public Input<string>? ClientAuthenticationFlow { get; set; }

        /// <summary>
        /// The alias of the flow to assign to the realm DirectGrantFlow.
        /// </summary>
        [Input("directGrantFlow")]
        public Input<string>? DirectGrantFlow { get; set; }

        /// <summary>
        /// The alias of the flow to assign to the realm DockerAuthenticationFlow.
        /// </summary>
        [Input("dockerAuthenticationFlow")]
        public Input<string>? DockerAuthenticationFlow { get; set; }

        /// <summary>
        /// The realm the authentication flow binding exists in.
        /// </summary>
        [Input("realmId")]
        public Input<string>? RealmId { get; set; }

        /// <summary>
        /// The alias of the flow to assign to the realm RegistrationFlow.
        /// </summary>
        [Input("registrationFlow")]
        public Input<string>? RegistrationFlow { get; set; }

        /// <summary>
        /// The alias of the flow to assign to the realm ResetCredentialsFlow.
        /// </summary>
        [Input("resetCredentialsFlow")]
        public Input<string>? ResetCredentialsFlow { get; set; }

        public BindingsState()
        {
        }
        public static new BindingsState Empty => new BindingsState();
    }
}
