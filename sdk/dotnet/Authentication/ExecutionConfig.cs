// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Keycloak.Authentication
{
    /// <summary>
    /// Allows for managing an authentication execution's configuration. If a particular authentication execution supports additional
    /// configuration (such as with the `identity-provider-redirector` execution), this can be managed with this resource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Keycloak = Pulumi.Keycloak;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var realm = new Keycloak.Realm("realm", new Keycloak.RealmArgs
    ///         {
    ///             Realm = "my-realm",
    ///             Enabled = true,
    ///         });
    ///         var flow = new Keycloak.Authentication.Flow("flow", new Keycloak.Authentication.FlowArgs
    ///         {
    ///             RealmId = realm.Id,
    ///             Alias = "my-flow-alias",
    ///         });
    ///         var execution = new Keycloak.Authentication.Execution("execution", new Keycloak.Authentication.ExecutionArgs
    ///         {
    ///             RealmId = realm.Id,
    ///             ParentFlowAlias = flow.Alias,
    ///             Authenticator = "identity-provider-redirector",
    ///         });
    ///         var config = new Keycloak.Authentication.ExecutionConfig("config", new Keycloak.Authentication.ExecutionConfigArgs
    ///         {
    ///             RealmId = realm.Id,
    ///             ExecutionId = execution.Id,
    ///             Alias = "my-config-alias",
    ///             Config = 
    ///             {
    ///                 { "defaultProvider", "my-config-default-idp" },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Configurations can be imported using the format `{{realm}}/{{authenticationExecutionId}}/{{authenticationExecutionConfigId}}`. If the `authenticationExecutionId` is incorrect, the import will still be successful. A subsequent apply will change the `authenticationExecutionId` to the correct one, which causes the configuration to be replaced. Examplebash
    /// 
    /// ```sh
    ///  $ pulumi import keycloak:authentication/executionConfig:ExecutionConfig config my-realm/be081463-ddbf-4b42-9eff-9c97886f24ff/30559fcf-6fb8-45ea-8c46-2b86f46ebc17
    /// ```
    /// </summary>
    public partial class ExecutionConfig : Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the configuration.
        /// </summary>
        [Output("alias")]
        public Output<string> Alias { get; private set; } = null!;

        /// <summary>
        /// The configuration. Keys are specific to each configurable authentication execution and not checked when applying.
        /// </summary>
        [Output("config")]
        public Output<ImmutableDictionary<string, string>> Config { get; private set; } = null!;

        /// <summary>
        /// The authentication execution this configuration is attached to.
        /// </summary>
        [Output("executionId")]
        public Output<string> ExecutionId { get; private set; } = null!;

        /// <summary>
        /// The realm the authentication execution exists in.
        /// </summary>
        [Output("realmId")]
        public Output<string> RealmId { get; private set; } = null!;


        /// <summary>
        /// Create a ExecutionConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ExecutionConfig(string name, ExecutionConfigArgs args, CustomResourceOptions? options = null)
            : base("keycloak:authentication/executionConfig:ExecutionConfig", name, args ?? new ExecutionConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ExecutionConfig(string name, Input<string> id, ExecutionConfigState? state = null, CustomResourceOptions? options = null)
            : base("keycloak:authentication/executionConfig:ExecutionConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ExecutionConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ExecutionConfig Get(string name, Input<string> id, ExecutionConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new ExecutionConfig(name, id, state, options);
        }
    }

    public sealed class ExecutionConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the configuration.
        /// </summary>
        [Input("alias", required: true)]
        public Input<string> Alias { get; set; } = null!;

        [Input("config", required: true)]
        private InputMap<string>? _config;

        /// <summary>
        /// The configuration. Keys are specific to each configurable authentication execution and not checked when applying.
        /// </summary>
        public InputMap<string> Config
        {
            get => _config ?? (_config = new InputMap<string>());
            set => _config = value;
        }

        /// <summary>
        /// The authentication execution this configuration is attached to.
        /// </summary>
        [Input("executionId", required: true)]
        public Input<string> ExecutionId { get; set; } = null!;

        /// <summary>
        /// The realm the authentication execution exists in.
        /// </summary>
        [Input("realmId", required: true)]
        public Input<string> RealmId { get; set; } = null!;

        public ExecutionConfigArgs()
        {
        }
    }

    public sealed class ExecutionConfigState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the configuration.
        /// </summary>
        [Input("alias")]
        public Input<string>? Alias { get; set; }

        [Input("config")]
        private InputMap<string>? _config;

        /// <summary>
        /// The configuration. Keys are specific to each configurable authentication execution and not checked when applying.
        /// </summary>
        public InputMap<string> Config
        {
            get => _config ?? (_config = new InputMap<string>());
            set => _config = value;
        }

        /// <summary>
        /// The authentication execution this configuration is attached to.
        /// </summary>
        [Input("executionId")]
        public Input<string>? ExecutionId { get; set; }

        /// <summary>
        /// The realm the authentication execution exists in.
        /// </summary>
        [Input("realmId")]
        public Input<string>? RealmId { get; set; }

        public ExecutionConfigState()
        {
        }
    }
}
