// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Keycloak
{
    /// <summary>
    /// ## # keycloak.DefaultGroups
    /// 
    /// Allows for managing a realm's default groups.
    /// 
    /// Note that you should not use `keycloak.DefaultGroups` with a group with memberships managed
    /// by `keycloak.GroupMemberships`.
    /// 
    /// ### Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Keycloak = Pulumi.Keycloak;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var realm = new Keycloak.Realm("realm", new Keycloak.RealmArgs
    ///         {
    ///             Enabled = true,
    ///             Realm = "my-realm",
    ///         });
    ///         var @group = new Keycloak.Group("group", new Keycloak.GroupArgs
    ///         {
    ///             RealmId = realm.Id,
    ///         });
    ///         var @default = new Keycloak.DefaultGroups("default", new Keycloak.DefaultGroupsArgs
    ///         {
    ///             GroupIds = 
    ///             {
    ///                 @group.Id,
    ///             },
    ///             RealmId = realm.Id,
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ### Argument Reference
    /// 
    /// The following arguments are supported:
    /// 
    /// - `realm_id` - (Required) The realm this group exists in.
    /// - `group_ids` - (Required) A set of group ids that should be default groups on the realm referenced by `realm_id`.
    /// </summary>
    public partial class DefaultGroups : Pulumi.CustomResource
    {
        [Output("groupIds")]
        public Output<ImmutableArray<string>> GroupIds { get; private set; } = null!;

        [Output("realmId")]
        public Output<string> RealmId { get; private set; } = null!;


        /// <summary>
        /// Create a DefaultGroups resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DefaultGroups(string name, DefaultGroupsArgs args, CustomResourceOptions? options = null)
            : base("keycloak:index/defaultGroups:DefaultGroups", name, args ?? new DefaultGroupsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DefaultGroups(string name, Input<string> id, DefaultGroupsState? state = null, CustomResourceOptions? options = null)
            : base("keycloak:index/defaultGroups:DefaultGroups", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DefaultGroups resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DefaultGroups Get(string name, Input<string> id, DefaultGroupsState? state = null, CustomResourceOptions? options = null)
        {
            return new DefaultGroups(name, id, state, options);
        }
    }

    public sealed class DefaultGroupsArgs : Pulumi.ResourceArgs
    {
        [Input("groupIds", required: true)]
        private InputList<string>? _groupIds;
        public InputList<string> GroupIds
        {
            get => _groupIds ?? (_groupIds = new InputList<string>());
            set => _groupIds = value;
        }

        [Input("realmId", required: true)]
        public Input<string> RealmId { get; set; } = null!;

        public DefaultGroupsArgs()
        {
        }
    }

    public sealed class DefaultGroupsState : Pulumi.ResourceArgs
    {
        [Input("groupIds")]
        private InputList<string>? _groupIds;
        public InputList<string> GroupIds
        {
            get => _groupIds ?? (_groupIds = new InputList<string>());
            set => _groupIds = value;
        }

        [Input("realmId")]
        public Input<string>? RealmId { get; set; }

        public DefaultGroupsState()
        {
        }
    }
}
