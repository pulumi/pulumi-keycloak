// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Keycloak.OpenId
{
    public partial class ClientServiceAccountRole : Pulumi.CustomResource
    {
        [Output("clientId")]
        public Output<string> ClientId { get; private set; } = null!;

        [Output("realmId")]
        public Output<string> RealmId { get; private set; } = null!;

        [Output("role")]
        public Output<string> Role { get; private set; } = null!;

        [Output("serviceAccountUserId")]
        public Output<string> ServiceAccountUserId { get; private set; } = null!;


        /// <summary>
        /// Create a ClientServiceAccountRole resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ClientServiceAccountRole(string name, ClientServiceAccountRoleArgs args, CustomResourceOptions? options = null)
            : base("keycloak:openid/clientServiceAccountRole:ClientServiceAccountRole", name, args ?? new ClientServiceAccountRoleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ClientServiceAccountRole(string name, Input<string> id, ClientServiceAccountRoleState? state = null, CustomResourceOptions? options = null)
            : base("keycloak:openid/clientServiceAccountRole:ClientServiceAccountRole", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ClientServiceAccountRole resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ClientServiceAccountRole Get(string name, Input<string> id, ClientServiceAccountRoleState? state = null, CustomResourceOptions? options = null)
        {
            return new ClientServiceAccountRole(name, id, state, options);
        }
    }

    public sealed class ClientServiceAccountRoleArgs : Pulumi.ResourceArgs
    {
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        [Input("realmId", required: true)]
        public Input<string> RealmId { get; set; } = null!;

        [Input("role", required: true)]
        public Input<string> Role { get; set; } = null!;

        [Input("serviceAccountUserId", required: true)]
        public Input<string> ServiceAccountUserId { get; set; } = null!;

        public ClientServiceAccountRoleArgs()
        {
        }
    }

    public sealed class ClientServiceAccountRoleState : Pulumi.ResourceArgs
    {
        [Input("clientId")]
        public Input<string>? ClientId { get; set; }

        [Input("realmId")]
        public Input<string>? RealmId { get; set; }

        [Input("role")]
        public Input<string>? Role { get; set; }

        [Input("serviceAccountUserId")]
        public Input<string>? ServiceAccountUserId { get; set; }

        public ClientServiceAccountRoleState()
        {
        }
    }
}
