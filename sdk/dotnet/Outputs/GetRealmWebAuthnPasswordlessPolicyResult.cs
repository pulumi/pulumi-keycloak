// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Keycloak.Outputs
{

    [OutputType]
    public sealed class GetRealmWebAuthnPasswordlessPolicyResult
    {
        public readonly ImmutableArray<string> AcceptableAaguids;
        /// <summary>
        /// Either none, indirect or direct
        /// </summary>
        public readonly string AttestationConveyancePreference;
        /// <summary>
        /// Either platform or cross-platform
        /// </summary>
        public readonly string AuthenticatorAttachment;
        public readonly bool AvoidSameAuthenticatorRegister;
        public readonly int CreateTimeout;
        public readonly ImmutableArray<string> ExtraOrigins;
        public readonly string RelyingPartyEntityName;
        public readonly string RelyingPartyId;
        /// <summary>
        /// Either Yes or No
        /// </summary>
        public readonly string RequireResidentKey;
        /// <summary>
        /// Keycloak lists ES256, ES384, ES512, RS256, ES384, ES512 at the time of writing
        /// </summary>
        public readonly ImmutableArray<string> SignatureAlgorithms;
        /// <summary>
        /// Either required, preferred or discouraged
        /// </summary>
        public readonly string UserVerificationRequirement;

        [OutputConstructor]
        private GetRealmWebAuthnPasswordlessPolicyResult(
            ImmutableArray<string> acceptableAaguids,

            string attestationConveyancePreference,

            string authenticatorAttachment,

            bool avoidSameAuthenticatorRegister,

            int createTimeout,

            ImmutableArray<string> extraOrigins,

            string relyingPartyEntityName,

            string relyingPartyId,

            string requireResidentKey,

            ImmutableArray<string> signatureAlgorithms,

            string userVerificationRequirement)
        {
            AcceptableAaguids = acceptableAaguids;
            AttestationConveyancePreference = attestationConveyancePreference;
            AuthenticatorAttachment = authenticatorAttachment;
            AvoidSameAuthenticatorRegister = avoidSameAuthenticatorRegister;
            CreateTimeout = createTimeout;
            ExtraOrigins = extraOrigins;
            RelyingPartyEntityName = relyingPartyEntityName;
            RelyingPartyId = relyingPartyId;
            RequireResidentKey = requireResidentKey;
            SignatureAlgorithms = signatureAlgorithms;
            UserVerificationRequirement = userVerificationRequirement;
        }
    }
}
