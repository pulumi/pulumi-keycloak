// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Keycloak.Outputs
{

    [OutputType]
    public sealed class RealmOtpPolicy
    {
        /// <summary>
        /// What hashing algorithm should be used to generate the OTP, Valid options are `HmacSHA1`,`HmacSHA256` and `HmacSHA512`. Defaults to `HmacSHA1`.
        /// </summary>
        public readonly string? Algorithm;
        /// <summary>
        /// How many digits the OTP have. Defaults to `6`.
        /// </summary>
        public readonly int? Digits;
        /// <summary>
        /// What should the initial counter value be. Defaults to `2`.
        /// </summary>
        public readonly int? InitialCounter;
        /// <summary>
        /// How far ahead should the server look just in case the token generator and server are out of time sync or counter sync. Defaults to `1`.
        /// </summary>
        public readonly int? LookAheadWindow;
        /// <summary>
        /// How many seconds should an OTP token be valid. Defaults to `30`.
        /// </summary>
        public readonly int? Period;
        /// <summary>
        /// One Time Password Type, supported Values are `totp` for Time-Based One Time Password and `hotp` for Counter Based. Defaults to `totp`.
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private RealmOtpPolicy(
            string? algorithm,

            int? digits,

            int? initialCounter,

            int? lookAheadWindow,

            int? period,

            string? type)
        {
            Algorithm = algorithm;
            Digits = digits;
            InitialCounter = initialCounter;
            LookAheadWindow = lookAheadWindow;
            Period = period;
            Type = type;
        }
    }
}
