// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Keycloak.Outputs
{

    [OutputType]
    public sealed class RealmUserProfileAttribute
    {
        public readonly ImmutableDictionary<string, string>? Annotations;
        /// <summary>
        /// The display name of the attribute.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// A list of scopes. The attribute will only be enabled when these scopes are requested by clients.
        /// </summary>
        public readonly ImmutableArray<string> EnabledWhenScopes;
        /// <summary>
        /// A list of groups.
        /// </summary>
        public readonly string? Group;
        public readonly string Name;
        /// <summary>
        /// The permissions configuration information.
        /// </summary>
        public readonly Outputs.RealmUserProfileAttributePermissions? Permissions;
        /// <summary>
        /// A list of roles for which the attribute will be required.
        /// </summary>
        public readonly ImmutableArray<string> RequiredForRoles;
        /// <summary>
        /// A list of scopes for which the attribute will be required.
        /// </summary>
        public readonly ImmutableArray<string> RequiredForScopes;
        /// <summary>
        /// A list of validators for the attribute.
        /// </summary>
        public readonly ImmutableArray<Outputs.RealmUserProfileAttributeValidator> Validators;

        [OutputConstructor]
        private RealmUserProfileAttribute(
            ImmutableDictionary<string, string>? annotations,

            string? displayName,

            ImmutableArray<string> enabledWhenScopes,

            string? group,

            string name,

            Outputs.RealmUserProfileAttributePermissions? permissions,

            ImmutableArray<string> requiredForRoles,

            ImmutableArray<string> requiredForScopes,

            ImmutableArray<Outputs.RealmUserProfileAttributeValidator> validators)
        {
            Annotations = annotations;
            DisplayName = displayName;
            EnabledWhenScopes = enabledWhenScopes;
            Group = group;
            Name = name;
            Permissions = permissions;
            RequiredForRoles = requiredForRoles;
            RequiredForScopes = requiredForScopes;
            Validators = validators;
        }
    }
}
