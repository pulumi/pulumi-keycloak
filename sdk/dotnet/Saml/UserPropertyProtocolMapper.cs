// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Keycloak.Saml
{
    /// <summary>
    /// Allows for creating and managing user property protocol mappers for SAML clients within Keycloak.
    /// 
    /// SAML user property protocol mappers allow you to map properties of the Keycloak
    /// user model to an attribute in a SAML assertion.
    /// 
    /// Protocol mappers can be defined for a single client, or they can be defined for a client scope which can be shared between
    /// multiple different clients.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Keycloak = Pulumi.Keycloak;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var realm = new Keycloak.Realm("realm", new Keycloak.RealmArgs
    ///         {
    ///             Realm = "my-realm",
    ///             Enabled = true,
    ///         });
    ///         var samlClient = new Keycloak.Saml.Client("samlClient", new Keycloak.Saml.ClientArgs
    ///         {
    ///             RealmId = keycloak_realm.Test.Id,
    ///             ClientId = "saml-client",
    ///         });
    ///         var samlUserPropertyMapper = new Keycloak.Saml.UserPropertyProtocolMapper("samlUserPropertyMapper", new Keycloak.Saml.UserPropertyProtocolMapperArgs
    ///         {
    ///             RealmId = keycloak_realm.Test.Id,
    ///             ClientId = samlClient.Id,
    ///             UserProperty = "email",
    ///             SamlAttributeName = "email",
    ///             SamlAttributeNameFormat = "Unspecified",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Protocol mappers can be imported using one of the following formats- Client`{{realm_id}}/client/{{client_keycloak_id}}/{{protocol_mapper_id}}` - Client Scope`{{realm_id}}/client-scope/{{client_scope_keycloak_id}}/{{protocol_mapper_id}}` Examplebash
    /// 
    /// ```sh
    ///  $ pulumi import keycloak:saml/userPropertyProtocolMapper:UserPropertyProtocolMapper saml_user_property_mapper my-realm/client/a7202154-8793-4656-b655-1dd18c181e14/71602afa-f7d1-4788-8c49-ef8fd00af0f4
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import keycloak:saml/userPropertyProtocolMapper:UserPropertyProtocolMapper saml_user_property_mapper my-realm/client-scope/b799ea7e-73ee-4a73-990a-1eafebe8e20a/71602afa-f7d1-4788-8c49-ef8fd00af0f4
    /// ```
    /// </summary>
    public partial class UserPropertyProtocolMapper : Pulumi.CustomResource
    {
        /// <summary>
        /// The client this protocol mapper should be attached to. Conflicts with `client_scope_id`. One of `client_id` or `client_scope_id` must be specified.
        /// </summary>
        [Output("clientId")]
        public Output<string?> ClientId { get; private set; } = null!;

        /// <summary>
        /// The client scope this protocol mapper should be attached to. Conflicts with `client_id`. One of `client_id` or `client_scope_id` must be specified.
        /// </summary>
        [Output("clientScopeId")]
        public Output<string?> ClientScopeId { get; private set; } = null!;

        /// <summary>
        /// An optional human-friendly name for this attribute.
        /// </summary>
        [Output("friendlyName")]
        public Output<string?> FriendlyName { get; private set; } = null!;

        /// <summary>
        /// The display name of this protocol mapper in the GUI.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The realm this protocol mapper exists within.
        /// </summary>
        [Output("realmId")]
        public Output<string> RealmId { get; private set; } = null!;

        /// <summary>
        /// The name of the SAML attribute.
        /// </summary>
        [Output("samlAttributeName")]
        public Output<string> SamlAttributeName { get; private set; } = null!;

        /// <summary>
        /// The SAML attribute Name Format. Can be one of `Unspecified`, `Basic`, or `URI Reference`.
        /// </summary>
        [Output("samlAttributeNameFormat")]
        public Output<string> SamlAttributeNameFormat { get; private set; } = null!;

        /// <summary>
        /// The property of the Keycloak user model to map.
        /// </summary>
        [Output("userProperty")]
        public Output<string> UserProperty { get; private set; } = null!;


        /// <summary>
        /// Create a UserPropertyProtocolMapper resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public UserPropertyProtocolMapper(string name, UserPropertyProtocolMapperArgs args, CustomResourceOptions? options = null)
            : base("keycloak:saml/userPropertyProtocolMapper:UserPropertyProtocolMapper", name, args ?? new UserPropertyProtocolMapperArgs(), MakeResourceOptions(options, ""))
        {
        }

        private UserPropertyProtocolMapper(string name, Input<string> id, UserPropertyProtocolMapperState? state = null, CustomResourceOptions? options = null)
            : base("keycloak:saml/userPropertyProtocolMapper:UserPropertyProtocolMapper", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing UserPropertyProtocolMapper resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static UserPropertyProtocolMapper Get(string name, Input<string> id, UserPropertyProtocolMapperState? state = null, CustomResourceOptions? options = null)
        {
            return new UserPropertyProtocolMapper(name, id, state, options);
        }
    }

    public sealed class UserPropertyProtocolMapperArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The client this protocol mapper should be attached to. Conflicts with `client_scope_id`. One of `client_id` or `client_scope_id` must be specified.
        /// </summary>
        [Input("clientId")]
        public Input<string>? ClientId { get; set; }

        /// <summary>
        /// The client scope this protocol mapper should be attached to. Conflicts with `client_id`. One of `client_id` or `client_scope_id` must be specified.
        /// </summary>
        [Input("clientScopeId")]
        public Input<string>? ClientScopeId { get; set; }

        /// <summary>
        /// An optional human-friendly name for this attribute.
        /// </summary>
        [Input("friendlyName")]
        public Input<string>? FriendlyName { get; set; }

        /// <summary>
        /// The display name of this protocol mapper in the GUI.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The realm this protocol mapper exists within.
        /// </summary>
        [Input("realmId", required: true)]
        public Input<string> RealmId { get; set; } = null!;

        /// <summary>
        /// The name of the SAML attribute.
        /// </summary>
        [Input("samlAttributeName", required: true)]
        public Input<string> SamlAttributeName { get; set; } = null!;

        /// <summary>
        /// The SAML attribute Name Format. Can be one of `Unspecified`, `Basic`, or `URI Reference`.
        /// </summary>
        [Input("samlAttributeNameFormat", required: true)]
        public Input<string> SamlAttributeNameFormat { get; set; } = null!;

        /// <summary>
        /// The property of the Keycloak user model to map.
        /// </summary>
        [Input("userProperty", required: true)]
        public Input<string> UserProperty { get; set; } = null!;

        public UserPropertyProtocolMapperArgs()
        {
        }
    }

    public sealed class UserPropertyProtocolMapperState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The client this protocol mapper should be attached to. Conflicts with `client_scope_id`. One of `client_id` or `client_scope_id` must be specified.
        /// </summary>
        [Input("clientId")]
        public Input<string>? ClientId { get; set; }

        /// <summary>
        /// The client scope this protocol mapper should be attached to. Conflicts with `client_id`. One of `client_id` or `client_scope_id` must be specified.
        /// </summary>
        [Input("clientScopeId")]
        public Input<string>? ClientScopeId { get; set; }

        /// <summary>
        /// An optional human-friendly name for this attribute.
        /// </summary>
        [Input("friendlyName")]
        public Input<string>? FriendlyName { get; set; }

        /// <summary>
        /// The display name of this protocol mapper in the GUI.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The realm this protocol mapper exists within.
        /// </summary>
        [Input("realmId")]
        public Input<string>? RealmId { get; set; }

        /// <summary>
        /// The name of the SAML attribute.
        /// </summary>
        [Input("samlAttributeName")]
        public Input<string>? SamlAttributeName { get; set; }

        /// <summary>
        /// The SAML attribute Name Format. Can be one of `Unspecified`, `Basic`, or `URI Reference`.
        /// </summary>
        [Input("samlAttributeNameFormat")]
        public Input<string>? SamlAttributeNameFormat { get; set; }

        /// <summary>
        /// The property of the Keycloak user model to map.
        /// </summary>
        [Input("userProperty")]
        public Input<string>? UserProperty { get; set; }

        public UserPropertyProtocolMapperState()
        {
        }
    }
}
