// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"github.com/pulumi/pulumi-keycloak/sdk/v6/go/keycloak/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
)

var _ = internal.GetEnvOrDefault

func GetAdditionalHeaders(ctx *pulumi.Context) string {
	return config.Get(ctx, "keycloak:additionalHeaders")
}
func GetBasePath(ctx *pulumi.Context) string {
	return config.Get(ctx, "keycloak:basePath")
}
func GetClientId(ctx *pulumi.Context) string {
	return config.Get(ctx, "keycloak:clientId")
}
func GetClientSecret(ctx *pulumi.Context) string {
	return config.Get(ctx, "keycloak:clientSecret")
}

// Timeout (in seconds) of the Keycloak client
func GetClientTimeout(ctx *pulumi.Context) int {
	v, err := config.TryInt(ctx, "keycloak:clientTimeout")
	if err == nil {
		return v
	}
	var value int
	if d := internal.GetEnvOrDefault(5, internal.ParseEnvInt, "KEYCLOAK_CLIENT_TIMEOUT"); d != nil {
		value = d.(int)
	}
	return value
}

// Whether or not to login to Keycloak instance on provider initialization
func GetInitialLogin(ctx *pulumi.Context) bool {
	return config.GetBool(ctx, "keycloak:initialLogin")
}
func GetPassword(ctx *pulumi.Context) string {
	return config.Get(ctx, "keycloak:password")
}
func GetRealm(ctx *pulumi.Context) string {
	return config.Get(ctx, "keycloak:realm")
}

// When true, the provider will treat the Keycloak instance as a Red Hat SSO server, specifically when parsing the version
// returned from the /serverinfo API endpoint.
func GetRedHatSso(ctx *pulumi.Context) bool {
	return config.GetBool(ctx, "keycloak:redHatSso")
}

// Allows x509 calls using an unknown CA certificate (for development purposes)
func GetRootCaCertificate(ctx *pulumi.Context) string {
	return config.Get(ctx, "keycloak:rootCaCertificate")
}

// Allows ignoring insecure certificates when set to true. Defaults to false. Disabling security check is dangerous and
// should be avoided.
func GetTlsInsecureSkipVerify(ctx *pulumi.Context) bool {
	return config.GetBool(ctx, "keycloak:tlsInsecureSkipVerify")
}

// The base URL of the Keycloak instance, before `/auth`
func GetUrl(ctx *pulumi.Context) string {
	return config.Get(ctx, "keycloak:url")
}
func GetUsername(ctx *pulumi.Context) string {
	return config.Get(ctx, "keycloak:username")
}
