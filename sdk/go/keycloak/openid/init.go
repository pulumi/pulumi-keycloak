// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package openid

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-keycloak/sdk/v4/go/keycloak"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "keycloak:openid/audienceProtocolMapper:AudienceProtocolMapper":
		r = &AudienceProtocolMapper{}
	case "keycloak:openid/audienceResolveProtocolMappter:AudienceResolveProtocolMappter":
		r = &AudienceResolveProtocolMappter{}
	case "keycloak:openid/client:Client":
		r = &Client{}
	case "keycloak:openid/clientAggregatePolicy:ClientAggregatePolicy":
		r = &ClientAggregatePolicy{}
	case "keycloak:openid/clientAuthorizationPermission:ClientAuthorizationPermission":
		r = &ClientAuthorizationPermission{}
	case "keycloak:openid/clientAuthorizationResource:ClientAuthorizationResource":
		r = &ClientAuthorizationResource{}
	case "keycloak:openid/clientAuthorizationScope:ClientAuthorizationScope":
		r = &ClientAuthorizationScope{}
	case "keycloak:openid/clientDefaultScopes:ClientDefaultScopes":
		r = &ClientDefaultScopes{}
	case "keycloak:openid/clientGroupPolicy:ClientGroupPolicy":
		r = &ClientGroupPolicy{}
	case "keycloak:openid/clientJsPolicy:ClientJsPolicy":
		r = &ClientJsPolicy{}
	case "keycloak:openid/clientOptionalScopes:ClientOptionalScopes":
		r = &ClientOptionalScopes{}
	case "keycloak:openid/clientPermissions:ClientPermissions":
		r = &ClientPermissions{}
	case "keycloak:openid/clientPolicy:ClientPolicy":
		r = &ClientPolicy{}
	case "keycloak:openid/clientRolePolicy:ClientRolePolicy":
		r = &ClientRolePolicy{}
	case "keycloak:openid/clientScope:ClientScope":
		r = &ClientScope{}
	case "keycloak:openid/clientServiceAccountRealmRole:ClientServiceAccountRealmRole":
		r = &ClientServiceAccountRealmRole{}
	case "keycloak:openid/clientServiceAccountRole:ClientServiceAccountRole":
		r = &ClientServiceAccountRole{}
	case "keycloak:openid/clientTimePolicy:ClientTimePolicy":
		r = &ClientTimePolicy{}
	case "keycloak:openid/clientUserPolicy:ClientUserPolicy":
		r = &ClientUserPolicy{}
	case "keycloak:openid/fullNameProtocolMapper:FullNameProtocolMapper":
		r = &FullNameProtocolMapper{}
	case "keycloak:openid/groupMembershipProtocolMapper:GroupMembershipProtocolMapper":
		r = &GroupMembershipProtocolMapper{}
	case "keycloak:openid/hardcodedClaimProtocolMapper:HardcodedClaimProtocolMapper":
		r = &HardcodedClaimProtocolMapper{}
	case "keycloak:openid/hardcodedRoleProtocolMapper:HardcodedRoleProtocolMapper":
		r = &HardcodedRoleProtocolMapper{}
	case "keycloak:openid/scriptProtocolMapper:ScriptProtocolMapper":
		r = &ScriptProtocolMapper{}
	case "keycloak:openid/userAttributeProtocolMapper:UserAttributeProtocolMapper":
		r = &UserAttributeProtocolMapper{}
	case "keycloak:openid/userClientRoleProtocolMapper:UserClientRoleProtocolMapper":
		r = &UserClientRoleProtocolMapper{}
	case "keycloak:openid/userPropertyProtocolMapper:UserPropertyProtocolMapper":
		r = &UserPropertyProtocolMapper{}
	case "keycloak:openid/userRealmRoleProtocolMapper:UserRealmRoleProtocolMapper":
		r = &UserRealmRoleProtocolMapper{}
	case "keycloak:openid/userSessionNoteProtocolMapper:UserSessionNoteProtocolMapper":
		r = &UserSessionNoteProtocolMapper{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := keycloak.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"keycloak",
		"openid/audienceProtocolMapper",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"keycloak",
		"openid/audienceResolveProtocolMappter",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"keycloak",
		"openid/client",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"keycloak",
		"openid/clientAggregatePolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"keycloak",
		"openid/clientAuthorizationPermission",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"keycloak",
		"openid/clientAuthorizationResource",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"keycloak",
		"openid/clientAuthorizationScope",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"keycloak",
		"openid/clientDefaultScopes",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"keycloak",
		"openid/clientGroupPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"keycloak",
		"openid/clientJsPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"keycloak",
		"openid/clientOptionalScopes",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"keycloak",
		"openid/clientPermissions",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"keycloak",
		"openid/clientPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"keycloak",
		"openid/clientRolePolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"keycloak",
		"openid/clientScope",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"keycloak",
		"openid/clientServiceAccountRealmRole",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"keycloak",
		"openid/clientServiceAccountRole",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"keycloak",
		"openid/clientTimePolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"keycloak",
		"openid/clientUserPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"keycloak",
		"openid/fullNameProtocolMapper",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"keycloak",
		"openid/groupMembershipProtocolMapper",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"keycloak",
		"openid/hardcodedClaimProtocolMapper",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"keycloak",
		"openid/hardcodedRoleProtocolMapper",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"keycloak",
		"openid/scriptProtocolMapper",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"keycloak",
		"openid/userAttributeProtocolMapper",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"keycloak",
		"openid/userClientRoleProtocolMapper",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"keycloak",
		"openid/userPropertyProtocolMapper",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"keycloak",
		"openid/userRealmRoleProtocolMapper",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"keycloak",
		"openid/userSessionNoteProtocolMapper",
		&module{version},
	)
}
