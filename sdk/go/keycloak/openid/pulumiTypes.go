// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package openid

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ClientAuthenticationFlowBindingOverrides struct {
	// Browser flow id, (flow needs to exist)
	BrowserId *string `pulumi:"browserId"`
	// Direct grant flow id (flow needs to exist)
	DirectGrantId *string `pulumi:"directGrantId"`
}

// ClientAuthenticationFlowBindingOverridesInput is an input type that accepts ClientAuthenticationFlowBindingOverridesArgs and ClientAuthenticationFlowBindingOverridesOutput values.
// You can construct a concrete instance of `ClientAuthenticationFlowBindingOverridesInput` via:
//
//          ClientAuthenticationFlowBindingOverridesArgs{...}
type ClientAuthenticationFlowBindingOverridesInput interface {
	pulumi.Input

	ToClientAuthenticationFlowBindingOverridesOutput() ClientAuthenticationFlowBindingOverridesOutput
	ToClientAuthenticationFlowBindingOverridesOutputWithContext(context.Context) ClientAuthenticationFlowBindingOverridesOutput
}

type ClientAuthenticationFlowBindingOverridesArgs struct {
	// Browser flow id, (flow needs to exist)
	BrowserId pulumi.StringPtrInput `pulumi:"browserId"`
	// Direct grant flow id (flow needs to exist)
	DirectGrantId pulumi.StringPtrInput `pulumi:"directGrantId"`
}

func (ClientAuthenticationFlowBindingOverridesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAuthenticationFlowBindingOverrides)(nil)).Elem()
}

func (i ClientAuthenticationFlowBindingOverridesArgs) ToClientAuthenticationFlowBindingOverridesOutput() ClientAuthenticationFlowBindingOverridesOutput {
	return i.ToClientAuthenticationFlowBindingOverridesOutputWithContext(context.Background())
}

func (i ClientAuthenticationFlowBindingOverridesArgs) ToClientAuthenticationFlowBindingOverridesOutputWithContext(ctx context.Context) ClientAuthenticationFlowBindingOverridesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAuthenticationFlowBindingOverridesOutput)
}

func (i ClientAuthenticationFlowBindingOverridesArgs) ToClientAuthenticationFlowBindingOverridesPtrOutput() ClientAuthenticationFlowBindingOverridesPtrOutput {
	return i.ToClientAuthenticationFlowBindingOverridesPtrOutputWithContext(context.Background())
}

func (i ClientAuthenticationFlowBindingOverridesArgs) ToClientAuthenticationFlowBindingOverridesPtrOutputWithContext(ctx context.Context) ClientAuthenticationFlowBindingOverridesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAuthenticationFlowBindingOverridesOutput).ToClientAuthenticationFlowBindingOverridesPtrOutputWithContext(ctx)
}

// ClientAuthenticationFlowBindingOverridesPtrInput is an input type that accepts ClientAuthenticationFlowBindingOverridesArgs, ClientAuthenticationFlowBindingOverridesPtr and ClientAuthenticationFlowBindingOverridesPtrOutput values.
// You can construct a concrete instance of `ClientAuthenticationFlowBindingOverridesPtrInput` via:
//
//          ClientAuthenticationFlowBindingOverridesArgs{...}
//
//  or:
//
//          nil
type ClientAuthenticationFlowBindingOverridesPtrInput interface {
	pulumi.Input

	ToClientAuthenticationFlowBindingOverridesPtrOutput() ClientAuthenticationFlowBindingOverridesPtrOutput
	ToClientAuthenticationFlowBindingOverridesPtrOutputWithContext(context.Context) ClientAuthenticationFlowBindingOverridesPtrOutput
}

type clientAuthenticationFlowBindingOverridesPtrType ClientAuthenticationFlowBindingOverridesArgs

func ClientAuthenticationFlowBindingOverridesPtr(v *ClientAuthenticationFlowBindingOverridesArgs) ClientAuthenticationFlowBindingOverridesPtrInput {
	return (*clientAuthenticationFlowBindingOverridesPtrType)(v)
}

func (*clientAuthenticationFlowBindingOverridesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAuthenticationFlowBindingOverrides)(nil)).Elem()
}

func (i *clientAuthenticationFlowBindingOverridesPtrType) ToClientAuthenticationFlowBindingOverridesPtrOutput() ClientAuthenticationFlowBindingOverridesPtrOutput {
	return i.ToClientAuthenticationFlowBindingOverridesPtrOutputWithContext(context.Background())
}

func (i *clientAuthenticationFlowBindingOverridesPtrType) ToClientAuthenticationFlowBindingOverridesPtrOutputWithContext(ctx context.Context) ClientAuthenticationFlowBindingOverridesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAuthenticationFlowBindingOverridesPtrOutput)
}

type ClientAuthenticationFlowBindingOverridesOutput struct{ *pulumi.OutputState }

func (ClientAuthenticationFlowBindingOverridesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAuthenticationFlowBindingOverrides)(nil)).Elem()
}

func (o ClientAuthenticationFlowBindingOverridesOutput) ToClientAuthenticationFlowBindingOverridesOutput() ClientAuthenticationFlowBindingOverridesOutput {
	return o
}

func (o ClientAuthenticationFlowBindingOverridesOutput) ToClientAuthenticationFlowBindingOverridesOutputWithContext(ctx context.Context) ClientAuthenticationFlowBindingOverridesOutput {
	return o
}

func (o ClientAuthenticationFlowBindingOverridesOutput) ToClientAuthenticationFlowBindingOverridesPtrOutput() ClientAuthenticationFlowBindingOverridesPtrOutput {
	return o.ToClientAuthenticationFlowBindingOverridesPtrOutputWithContext(context.Background())
}

func (o ClientAuthenticationFlowBindingOverridesOutput) ToClientAuthenticationFlowBindingOverridesPtrOutputWithContext(ctx context.Context) ClientAuthenticationFlowBindingOverridesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientAuthenticationFlowBindingOverrides) *ClientAuthenticationFlowBindingOverrides {
		return &v
	}).(ClientAuthenticationFlowBindingOverridesPtrOutput)
}

// Browser flow id, (flow needs to exist)
func (o ClientAuthenticationFlowBindingOverridesOutput) BrowserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAuthenticationFlowBindingOverrides) *string { return v.BrowserId }).(pulumi.StringPtrOutput)
}

// Direct grant flow id (flow needs to exist)
func (o ClientAuthenticationFlowBindingOverridesOutput) DirectGrantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAuthenticationFlowBindingOverrides) *string { return v.DirectGrantId }).(pulumi.StringPtrOutput)
}

type ClientAuthenticationFlowBindingOverridesPtrOutput struct{ *pulumi.OutputState }

func (ClientAuthenticationFlowBindingOverridesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAuthenticationFlowBindingOverrides)(nil)).Elem()
}

func (o ClientAuthenticationFlowBindingOverridesPtrOutput) ToClientAuthenticationFlowBindingOverridesPtrOutput() ClientAuthenticationFlowBindingOverridesPtrOutput {
	return o
}

func (o ClientAuthenticationFlowBindingOverridesPtrOutput) ToClientAuthenticationFlowBindingOverridesPtrOutputWithContext(ctx context.Context) ClientAuthenticationFlowBindingOverridesPtrOutput {
	return o
}

func (o ClientAuthenticationFlowBindingOverridesPtrOutput) Elem() ClientAuthenticationFlowBindingOverridesOutput {
	return o.ApplyT(func(v *ClientAuthenticationFlowBindingOverrides) ClientAuthenticationFlowBindingOverrides {
		if v != nil {
			return *v
		}
		var ret ClientAuthenticationFlowBindingOverrides
		return ret
	}).(ClientAuthenticationFlowBindingOverridesOutput)
}

// Browser flow id, (flow needs to exist)
func (o ClientAuthenticationFlowBindingOverridesPtrOutput) BrowserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAuthenticationFlowBindingOverrides) *string {
		if v == nil {
			return nil
		}
		return v.BrowserId
	}).(pulumi.StringPtrOutput)
}

// Direct grant flow id (flow needs to exist)
func (o ClientAuthenticationFlowBindingOverridesPtrOutput) DirectGrantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAuthenticationFlowBindingOverrides) *string {
		if v == nil {
			return nil
		}
		return v.DirectGrantId
	}).(pulumi.StringPtrOutput)
}

type ClientAuthorization struct {
	// When `true`, resources can be managed remotely by the resource server. Defaults to `false`.
	AllowRemoteResourceManagement *bool `pulumi:"allowRemoteResourceManagement"`
	// Dictates how the policies associated with a given permission are evaluated and how a final decision is obtained. Could be one of `AFFIRMATIVE`, `CONSENSUS`, or `UNANIMOUS`. Applies to permissions.
	DecisionStrategy *string `pulumi:"decisionStrategy"`
	// When `true`, defaults set by Keycloak will be respected. Defaults to `false`.
	KeepDefaults *bool `pulumi:"keepDefaults"`
	// Dictates how policies are enforced when evaluating authorization requests. Can be one of `ENFORCING`, `PERMISSIVE`, or `DISABLED`.
	PolicyEnforcementMode string `pulumi:"policyEnforcementMode"`
}

// ClientAuthorizationInput is an input type that accepts ClientAuthorizationArgs and ClientAuthorizationOutput values.
// You can construct a concrete instance of `ClientAuthorizationInput` via:
//
//          ClientAuthorizationArgs{...}
type ClientAuthorizationInput interface {
	pulumi.Input

	ToClientAuthorizationOutput() ClientAuthorizationOutput
	ToClientAuthorizationOutputWithContext(context.Context) ClientAuthorizationOutput
}

type ClientAuthorizationArgs struct {
	// When `true`, resources can be managed remotely by the resource server. Defaults to `false`.
	AllowRemoteResourceManagement pulumi.BoolPtrInput `pulumi:"allowRemoteResourceManagement"`
	// Dictates how the policies associated with a given permission are evaluated and how a final decision is obtained. Could be one of `AFFIRMATIVE`, `CONSENSUS`, or `UNANIMOUS`. Applies to permissions.
	DecisionStrategy pulumi.StringPtrInput `pulumi:"decisionStrategy"`
	// When `true`, defaults set by Keycloak will be respected. Defaults to `false`.
	KeepDefaults pulumi.BoolPtrInput `pulumi:"keepDefaults"`
	// Dictates how policies are enforced when evaluating authorization requests. Can be one of `ENFORCING`, `PERMISSIVE`, or `DISABLED`.
	PolicyEnforcementMode pulumi.StringInput `pulumi:"policyEnforcementMode"`
}

func (ClientAuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAuthorization)(nil)).Elem()
}

func (i ClientAuthorizationArgs) ToClientAuthorizationOutput() ClientAuthorizationOutput {
	return i.ToClientAuthorizationOutputWithContext(context.Background())
}

func (i ClientAuthorizationArgs) ToClientAuthorizationOutputWithContext(ctx context.Context) ClientAuthorizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAuthorizationOutput)
}

func (i ClientAuthorizationArgs) ToClientAuthorizationPtrOutput() ClientAuthorizationPtrOutput {
	return i.ToClientAuthorizationPtrOutputWithContext(context.Background())
}

func (i ClientAuthorizationArgs) ToClientAuthorizationPtrOutputWithContext(ctx context.Context) ClientAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAuthorizationOutput).ToClientAuthorizationPtrOutputWithContext(ctx)
}

// ClientAuthorizationPtrInput is an input type that accepts ClientAuthorizationArgs, ClientAuthorizationPtr and ClientAuthorizationPtrOutput values.
// You can construct a concrete instance of `ClientAuthorizationPtrInput` via:
//
//          ClientAuthorizationArgs{...}
//
//  or:
//
//          nil
type ClientAuthorizationPtrInput interface {
	pulumi.Input

	ToClientAuthorizationPtrOutput() ClientAuthorizationPtrOutput
	ToClientAuthorizationPtrOutputWithContext(context.Context) ClientAuthorizationPtrOutput
}

type clientAuthorizationPtrType ClientAuthorizationArgs

func ClientAuthorizationPtr(v *ClientAuthorizationArgs) ClientAuthorizationPtrInput {
	return (*clientAuthorizationPtrType)(v)
}

func (*clientAuthorizationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAuthorization)(nil)).Elem()
}

func (i *clientAuthorizationPtrType) ToClientAuthorizationPtrOutput() ClientAuthorizationPtrOutput {
	return i.ToClientAuthorizationPtrOutputWithContext(context.Background())
}

func (i *clientAuthorizationPtrType) ToClientAuthorizationPtrOutputWithContext(ctx context.Context) ClientAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAuthorizationPtrOutput)
}

type ClientAuthorizationOutput struct{ *pulumi.OutputState }

func (ClientAuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAuthorization)(nil)).Elem()
}

func (o ClientAuthorizationOutput) ToClientAuthorizationOutput() ClientAuthorizationOutput {
	return o
}

func (o ClientAuthorizationOutput) ToClientAuthorizationOutputWithContext(ctx context.Context) ClientAuthorizationOutput {
	return o
}

func (o ClientAuthorizationOutput) ToClientAuthorizationPtrOutput() ClientAuthorizationPtrOutput {
	return o.ToClientAuthorizationPtrOutputWithContext(context.Background())
}

func (o ClientAuthorizationOutput) ToClientAuthorizationPtrOutputWithContext(ctx context.Context) ClientAuthorizationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientAuthorization) *ClientAuthorization {
		return &v
	}).(ClientAuthorizationPtrOutput)
}

// When `true`, resources can be managed remotely by the resource server. Defaults to `false`.
func (o ClientAuthorizationOutput) AllowRemoteResourceManagement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAuthorization) *bool { return v.AllowRemoteResourceManagement }).(pulumi.BoolPtrOutput)
}

// Dictates how the policies associated with a given permission are evaluated and how a final decision is obtained. Could be one of `AFFIRMATIVE`, `CONSENSUS`, or `UNANIMOUS`. Applies to permissions.
func (o ClientAuthorizationOutput) DecisionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAuthorization) *string { return v.DecisionStrategy }).(pulumi.StringPtrOutput)
}

// When `true`, defaults set by Keycloak will be respected. Defaults to `false`.
func (o ClientAuthorizationOutput) KeepDefaults() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAuthorization) *bool { return v.KeepDefaults }).(pulumi.BoolPtrOutput)
}

// Dictates how policies are enforced when evaluating authorization requests. Can be one of `ENFORCING`, `PERMISSIVE`, or `DISABLED`.
func (o ClientAuthorizationOutput) PolicyEnforcementMode() pulumi.StringOutput {
	return o.ApplyT(func(v ClientAuthorization) string { return v.PolicyEnforcementMode }).(pulumi.StringOutput)
}

type ClientAuthorizationPtrOutput struct{ *pulumi.OutputState }

func (ClientAuthorizationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAuthorization)(nil)).Elem()
}

func (o ClientAuthorizationPtrOutput) ToClientAuthorizationPtrOutput() ClientAuthorizationPtrOutput {
	return o
}

func (o ClientAuthorizationPtrOutput) ToClientAuthorizationPtrOutputWithContext(ctx context.Context) ClientAuthorizationPtrOutput {
	return o
}

func (o ClientAuthorizationPtrOutput) Elem() ClientAuthorizationOutput {
	return o.ApplyT(func(v *ClientAuthorization) ClientAuthorization {
		if v != nil {
			return *v
		}
		var ret ClientAuthorization
		return ret
	}).(ClientAuthorizationOutput)
}

// When `true`, resources can be managed remotely by the resource server. Defaults to `false`.
func (o ClientAuthorizationPtrOutput) AllowRemoteResourceManagement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAuthorization) *bool {
		if v == nil {
			return nil
		}
		return v.AllowRemoteResourceManagement
	}).(pulumi.BoolPtrOutput)
}

// Dictates how the policies associated with a given permission are evaluated and how a final decision is obtained. Could be one of `AFFIRMATIVE`, `CONSENSUS`, or `UNANIMOUS`. Applies to permissions.
func (o ClientAuthorizationPtrOutput) DecisionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAuthorization) *string {
		if v == nil {
			return nil
		}
		return v.DecisionStrategy
	}).(pulumi.StringPtrOutput)
}

// When `true`, defaults set by Keycloak will be respected. Defaults to `false`.
func (o ClientAuthorizationPtrOutput) KeepDefaults() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAuthorization) *bool {
		if v == nil {
			return nil
		}
		return v.KeepDefaults
	}).(pulumi.BoolPtrOutput)
}

// Dictates how policies are enforced when evaluating authorization requests. Can be one of `ENFORCING`, `PERMISSIVE`, or `DISABLED`.
func (o ClientAuthorizationPtrOutput) PolicyEnforcementMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAuthorization) *string {
		if v == nil {
			return nil
		}
		return &v.PolicyEnforcementMode
	}).(pulumi.StringPtrOutput)
}

type ClientGroupPolicyGroup struct {
	ExtendChildren bool   `pulumi:"extendChildren"`
	Id             string `pulumi:"id"`
	Path           string `pulumi:"path"`
}

// ClientGroupPolicyGroupInput is an input type that accepts ClientGroupPolicyGroupArgs and ClientGroupPolicyGroupOutput values.
// You can construct a concrete instance of `ClientGroupPolicyGroupInput` via:
//
//          ClientGroupPolicyGroupArgs{...}
type ClientGroupPolicyGroupInput interface {
	pulumi.Input

	ToClientGroupPolicyGroupOutput() ClientGroupPolicyGroupOutput
	ToClientGroupPolicyGroupOutputWithContext(context.Context) ClientGroupPolicyGroupOutput
}

type ClientGroupPolicyGroupArgs struct {
	ExtendChildren pulumi.BoolInput   `pulumi:"extendChildren"`
	Id             pulumi.StringInput `pulumi:"id"`
	Path           pulumi.StringInput `pulumi:"path"`
}

func (ClientGroupPolicyGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientGroupPolicyGroup)(nil)).Elem()
}

func (i ClientGroupPolicyGroupArgs) ToClientGroupPolicyGroupOutput() ClientGroupPolicyGroupOutput {
	return i.ToClientGroupPolicyGroupOutputWithContext(context.Background())
}

func (i ClientGroupPolicyGroupArgs) ToClientGroupPolicyGroupOutputWithContext(ctx context.Context) ClientGroupPolicyGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientGroupPolicyGroupOutput)
}

// ClientGroupPolicyGroupArrayInput is an input type that accepts ClientGroupPolicyGroupArray and ClientGroupPolicyGroupArrayOutput values.
// You can construct a concrete instance of `ClientGroupPolicyGroupArrayInput` via:
//
//          ClientGroupPolicyGroupArray{ ClientGroupPolicyGroupArgs{...} }
type ClientGroupPolicyGroupArrayInput interface {
	pulumi.Input

	ToClientGroupPolicyGroupArrayOutput() ClientGroupPolicyGroupArrayOutput
	ToClientGroupPolicyGroupArrayOutputWithContext(context.Context) ClientGroupPolicyGroupArrayOutput
}

type ClientGroupPolicyGroupArray []ClientGroupPolicyGroupInput

func (ClientGroupPolicyGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClientGroupPolicyGroup)(nil)).Elem()
}

func (i ClientGroupPolicyGroupArray) ToClientGroupPolicyGroupArrayOutput() ClientGroupPolicyGroupArrayOutput {
	return i.ToClientGroupPolicyGroupArrayOutputWithContext(context.Background())
}

func (i ClientGroupPolicyGroupArray) ToClientGroupPolicyGroupArrayOutputWithContext(ctx context.Context) ClientGroupPolicyGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientGroupPolicyGroupArrayOutput)
}

type ClientGroupPolicyGroupOutput struct{ *pulumi.OutputState }

func (ClientGroupPolicyGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientGroupPolicyGroup)(nil)).Elem()
}

func (o ClientGroupPolicyGroupOutput) ToClientGroupPolicyGroupOutput() ClientGroupPolicyGroupOutput {
	return o
}

func (o ClientGroupPolicyGroupOutput) ToClientGroupPolicyGroupOutputWithContext(ctx context.Context) ClientGroupPolicyGroupOutput {
	return o
}

func (o ClientGroupPolicyGroupOutput) ExtendChildren() pulumi.BoolOutput {
	return o.ApplyT(func(v ClientGroupPolicyGroup) bool { return v.ExtendChildren }).(pulumi.BoolOutput)
}

func (o ClientGroupPolicyGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ClientGroupPolicyGroup) string { return v.Id }).(pulumi.StringOutput)
}

func (o ClientGroupPolicyGroupOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ClientGroupPolicyGroup) string { return v.Path }).(pulumi.StringOutput)
}

type ClientGroupPolicyGroupArrayOutput struct{ *pulumi.OutputState }

func (ClientGroupPolicyGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClientGroupPolicyGroup)(nil)).Elem()
}

func (o ClientGroupPolicyGroupArrayOutput) ToClientGroupPolicyGroupArrayOutput() ClientGroupPolicyGroupArrayOutput {
	return o
}

func (o ClientGroupPolicyGroupArrayOutput) ToClientGroupPolicyGroupArrayOutputWithContext(ctx context.Context) ClientGroupPolicyGroupArrayOutput {
	return o
}

func (o ClientGroupPolicyGroupArrayOutput) Index(i pulumi.IntInput) ClientGroupPolicyGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClientGroupPolicyGroup {
		return vs[0].([]ClientGroupPolicyGroup)[vs[1].(int)]
	}).(ClientGroupPolicyGroupOutput)
}

type ClientPermissionsConfigureScope struct {
	DecisionStrategy *string  `pulumi:"decisionStrategy"`
	Description      *string  `pulumi:"description"`
	Policies         []string `pulumi:"policies"`
}

// ClientPermissionsConfigureScopeInput is an input type that accepts ClientPermissionsConfigureScopeArgs and ClientPermissionsConfigureScopeOutput values.
// You can construct a concrete instance of `ClientPermissionsConfigureScopeInput` via:
//
//          ClientPermissionsConfigureScopeArgs{...}
type ClientPermissionsConfigureScopeInput interface {
	pulumi.Input

	ToClientPermissionsConfigureScopeOutput() ClientPermissionsConfigureScopeOutput
	ToClientPermissionsConfigureScopeOutputWithContext(context.Context) ClientPermissionsConfigureScopeOutput
}

type ClientPermissionsConfigureScopeArgs struct {
	DecisionStrategy pulumi.StringPtrInput   `pulumi:"decisionStrategy"`
	Description      pulumi.StringPtrInput   `pulumi:"description"`
	Policies         pulumi.StringArrayInput `pulumi:"policies"`
}

func (ClientPermissionsConfigureScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientPermissionsConfigureScope)(nil)).Elem()
}

func (i ClientPermissionsConfigureScopeArgs) ToClientPermissionsConfigureScopeOutput() ClientPermissionsConfigureScopeOutput {
	return i.ToClientPermissionsConfigureScopeOutputWithContext(context.Background())
}

func (i ClientPermissionsConfigureScopeArgs) ToClientPermissionsConfigureScopeOutputWithContext(ctx context.Context) ClientPermissionsConfigureScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientPermissionsConfigureScopeOutput)
}

func (i ClientPermissionsConfigureScopeArgs) ToClientPermissionsConfigureScopePtrOutput() ClientPermissionsConfigureScopePtrOutput {
	return i.ToClientPermissionsConfigureScopePtrOutputWithContext(context.Background())
}

func (i ClientPermissionsConfigureScopeArgs) ToClientPermissionsConfigureScopePtrOutputWithContext(ctx context.Context) ClientPermissionsConfigureScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientPermissionsConfigureScopeOutput).ToClientPermissionsConfigureScopePtrOutputWithContext(ctx)
}

// ClientPermissionsConfigureScopePtrInput is an input type that accepts ClientPermissionsConfigureScopeArgs, ClientPermissionsConfigureScopePtr and ClientPermissionsConfigureScopePtrOutput values.
// You can construct a concrete instance of `ClientPermissionsConfigureScopePtrInput` via:
//
//          ClientPermissionsConfigureScopeArgs{...}
//
//  or:
//
//          nil
type ClientPermissionsConfigureScopePtrInput interface {
	pulumi.Input

	ToClientPermissionsConfigureScopePtrOutput() ClientPermissionsConfigureScopePtrOutput
	ToClientPermissionsConfigureScopePtrOutputWithContext(context.Context) ClientPermissionsConfigureScopePtrOutput
}

type clientPermissionsConfigureScopePtrType ClientPermissionsConfigureScopeArgs

func ClientPermissionsConfigureScopePtr(v *ClientPermissionsConfigureScopeArgs) ClientPermissionsConfigureScopePtrInput {
	return (*clientPermissionsConfigureScopePtrType)(v)
}

func (*clientPermissionsConfigureScopePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientPermissionsConfigureScope)(nil)).Elem()
}

func (i *clientPermissionsConfigureScopePtrType) ToClientPermissionsConfigureScopePtrOutput() ClientPermissionsConfigureScopePtrOutput {
	return i.ToClientPermissionsConfigureScopePtrOutputWithContext(context.Background())
}

func (i *clientPermissionsConfigureScopePtrType) ToClientPermissionsConfigureScopePtrOutputWithContext(ctx context.Context) ClientPermissionsConfigureScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientPermissionsConfigureScopePtrOutput)
}

type ClientPermissionsConfigureScopeOutput struct{ *pulumi.OutputState }

func (ClientPermissionsConfigureScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientPermissionsConfigureScope)(nil)).Elem()
}

func (o ClientPermissionsConfigureScopeOutput) ToClientPermissionsConfigureScopeOutput() ClientPermissionsConfigureScopeOutput {
	return o
}

func (o ClientPermissionsConfigureScopeOutput) ToClientPermissionsConfigureScopeOutputWithContext(ctx context.Context) ClientPermissionsConfigureScopeOutput {
	return o
}

func (o ClientPermissionsConfigureScopeOutput) ToClientPermissionsConfigureScopePtrOutput() ClientPermissionsConfigureScopePtrOutput {
	return o.ToClientPermissionsConfigureScopePtrOutputWithContext(context.Background())
}

func (o ClientPermissionsConfigureScopeOutput) ToClientPermissionsConfigureScopePtrOutputWithContext(ctx context.Context) ClientPermissionsConfigureScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientPermissionsConfigureScope) *ClientPermissionsConfigureScope {
		return &v
	}).(ClientPermissionsConfigureScopePtrOutput)
}

func (o ClientPermissionsConfigureScopeOutput) DecisionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientPermissionsConfigureScope) *string { return v.DecisionStrategy }).(pulumi.StringPtrOutput)
}

func (o ClientPermissionsConfigureScopeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientPermissionsConfigureScope) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ClientPermissionsConfigureScopeOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClientPermissionsConfigureScope) []string { return v.Policies }).(pulumi.StringArrayOutput)
}

type ClientPermissionsConfigureScopePtrOutput struct{ *pulumi.OutputState }

func (ClientPermissionsConfigureScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientPermissionsConfigureScope)(nil)).Elem()
}

func (o ClientPermissionsConfigureScopePtrOutput) ToClientPermissionsConfigureScopePtrOutput() ClientPermissionsConfigureScopePtrOutput {
	return o
}

func (o ClientPermissionsConfigureScopePtrOutput) ToClientPermissionsConfigureScopePtrOutputWithContext(ctx context.Context) ClientPermissionsConfigureScopePtrOutput {
	return o
}

func (o ClientPermissionsConfigureScopePtrOutput) Elem() ClientPermissionsConfigureScopeOutput {
	return o.ApplyT(func(v *ClientPermissionsConfigureScope) ClientPermissionsConfigureScope {
		if v != nil {
			return *v
		}
		var ret ClientPermissionsConfigureScope
		return ret
	}).(ClientPermissionsConfigureScopeOutput)
}

func (o ClientPermissionsConfigureScopePtrOutput) DecisionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientPermissionsConfigureScope) *string {
		if v == nil {
			return nil
		}
		return v.DecisionStrategy
	}).(pulumi.StringPtrOutput)
}

func (o ClientPermissionsConfigureScopePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientPermissionsConfigureScope) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o ClientPermissionsConfigureScopePtrOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClientPermissionsConfigureScope) []string {
		if v == nil {
			return nil
		}
		return v.Policies
	}).(pulumi.StringArrayOutput)
}

type ClientPermissionsManageScope struct {
	DecisionStrategy *string  `pulumi:"decisionStrategy"`
	Description      *string  `pulumi:"description"`
	Policies         []string `pulumi:"policies"`
}

// ClientPermissionsManageScopeInput is an input type that accepts ClientPermissionsManageScopeArgs and ClientPermissionsManageScopeOutput values.
// You can construct a concrete instance of `ClientPermissionsManageScopeInput` via:
//
//          ClientPermissionsManageScopeArgs{...}
type ClientPermissionsManageScopeInput interface {
	pulumi.Input

	ToClientPermissionsManageScopeOutput() ClientPermissionsManageScopeOutput
	ToClientPermissionsManageScopeOutputWithContext(context.Context) ClientPermissionsManageScopeOutput
}

type ClientPermissionsManageScopeArgs struct {
	DecisionStrategy pulumi.StringPtrInput   `pulumi:"decisionStrategy"`
	Description      pulumi.StringPtrInput   `pulumi:"description"`
	Policies         pulumi.StringArrayInput `pulumi:"policies"`
}

func (ClientPermissionsManageScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientPermissionsManageScope)(nil)).Elem()
}

func (i ClientPermissionsManageScopeArgs) ToClientPermissionsManageScopeOutput() ClientPermissionsManageScopeOutput {
	return i.ToClientPermissionsManageScopeOutputWithContext(context.Background())
}

func (i ClientPermissionsManageScopeArgs) ToClientPermissionsManageScopeOutputWithContext(ctx context.Context) ClientPermissionsManageScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientPermissionsManageScopeOutput)
}

func (i ClientPermissionsManageScopeArgs) ToClientPermissionsManageScopePtrOutput() ClientPermissionsManageScopePtrOutput {
	return i.ToClientPermissionsManageScopePtrOutputWithContext(context.Background())
}

func (i ClientPermissionsManageScopeArgs) ToClientPermissionsManageScopePtrOutputWithContext(ctx context.Context) ClientPermissionsManageScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientPermissionsManageScopeOutput).ToClientPermissionsManageScopePtrOutputWithContext(ctx)
}

// ClientPermissionsManageScopePtrInput is an input type that accepts ClientPermissionsManageScopeArgs, ClientPermissionsManageScopePtr and ClientPermissionsManageScopePtrOutput values.
// You can construct a concrete instance of `ClientPermissionsManageScopePtrInput` via:
//
//          ClientPermissionsManageScopeArgs{...}
//
//  or:
//
//          nil
type ClientPermissionsManageScopePtrInput interface {
	pulumi.Input

	ToClientPermissionsManageScopePtrOutput() ClientPermissionsManageScopePtrOutput
	ToClientPermissionsManageScopePtrOutputWithContext(context.Context) ClientPermissionsManageScopePtrOutput
}

type clientPermissionsManageScopePtrType ClientPermissionsManageScopeArgs

func ClientPermissionsManageScopePtr(v *ClientPermissionsManageScopeArgs) ClientPermissionsManageScopePtrInput {
	return (*clientPermissionsManageScopePtrType)(v)
}

func (*clientPermissionsManageScopePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientPermissionsManageScope)(nil)).Elem()
}

func (i *clientPermissionsManageScopePtrType) ToClientPermissionsManageScopePtrOutput() ClientPermissionsManageScopePtrOutput {
	return i.ToClientPermissionsManageScopePtrOutputWithContext(context.Background())
}

func (i *clientPermissionsManageScopePtrType) ToClientPermissionsManageScopePtrOutputWithContext(ctx context.Context) ClientPermissionsManageScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientPermissionsManageScopePtrOutput)
}

type ClientPermissionsManageScopeOutput struct{ *pulumi.OutputState }

func (ClientPermissionsManageScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientPermissionsManageScope)(nil)).Elem()
}

func (o ClientPermissionsManageScopeOutput) ToClientPermissionsManageScopeOutput() ClientPermissionsManageScopeOutput {
	return o
}

func (o ClientPermissionsManageScopeOutput) ToClientPermissionsManageScopeOutputWithContext(ctx context.Context) ClientPermissionsManageScopeOutput {
	return o
}

func (o ClientPermissionsManageScopeOutput) ToClientPermissionsManageScopePtrOutput() ClientPermissionsManageScopePtrOutput {
	return o.ToClientPermissionsManageScopePtrOutputWithContext(context.Background())
}

func (o ClientPermissionsManageScopeOutput) ToClientPermissionsManageScopePtrOutputWithContext(ctx context.Context) ClientPermissionsManageScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientPermissionsManageScope) *ClientPermissionsManageScope {
		return &v
	}).(ClientPermissionsManageScopePtrOutput)
}

func (o ClientPermissionsManageScopeOutput) DecisionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientPermissionsManageScope) *string { return v.DecisionStrategy }).(pulumi.StringPtrOutput)
}

func (o ClientPermissionsManageScopeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientPermissionsManageScope) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ClientPermissionsManageScopeOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClientPermissionsManageScope) []string { return v.Policies }).(pulumi.StringArrayOutput)
}

type ClientPermissionsManageScopePtrOutput struct{ *pulumi.OutputState }

func (ClientPermissionsManageScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientPermissionsManageScope)(nil)).Elem()
}

func (o ClientPermissionsManageScopePtrOutput) ToClientPermissionsManageScopePtrOutput() ClientPermissionsManageScopePtrOutput {
	return o
}

func (o ClientPermissionsManageScopePtrOutput) ToClientPermissionsManageScopePtrOutputWithContext(ctx context.Context) ClientPermissionsManageScopePtrOutput {
	return o
}

func (o ClientPermissionsManageScopePtrOutput) Elem() ClientPermissionsManageScopeOutput {
	return o.ApplyT(func(v *ClientPermissionsManageScope) ClientPermissionsManageScope {
		if v != nil {
			return *v
		}
		var ret ClientPermissionsManageScope
		return ret
	}).(ClientPermissionsManageScopeOutput)
}

func (o ClientPermissionsManageScopePtrOutput) DecisionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientPermissionsManageScope) *string {
		if v == nil {
			return nil
		}
		return v.DecisionStrategy
	}).(pulumi.StringPtrOutput)
}

func (o ClientPermissionsManageScopePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientPermissionsManageScope) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o ClientPermissionsManageScopePtrOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClientPermissionsManageScope) []string {
		if v == nil {
			return nil
		}
		return v.Policies
	}).(pulumi.StringArrayOutput)
}

type ClientPermissionsMapRolesClientScopeScope struct {
	DecisionStrategy *string  `pulumi:"decisionStrategy"`
	Description      *string  `pulumi:"description"`
	Policies         []string `pulumi:"policies"`
}

// ClientPermissionsMapRolesClientScopeScopeInput is an input type that accepts ClientPermissionsMapRolesClientScopeScopeArgs and ClientPermissionsMapRolesClientScopeScopeOutput values.
// You can construct a concrete instance of `ClientPermissionsMapRolesClientScopeScopeInput` via:
//
//          ClientPermissionsMapRolesClientScopeScopeArgs{...}
type ClientPermissionsMapRolesClientScopeScopeInput interface {
	pulumi.Input

	ToClientPermissionsMapRolesClientScopeScopeOutput() ClientPermissionsMapRolesClientScopeScopeOutput
	ToClientPermissionsMapRolesClientScopeScopeOutputWithContext(context.Context) ClientPermissionsMapRolesClientScopeScopeOutput
}

type ClientPermissionsMapRolesClientScopeScopeArgs struct {
	DecisionStrategy pulumi.StringPtrInput   `pulumi:"decisionStrategy"`
	Description      pulumi.StringPtrInput   `pulumi:"description"`
	Policies         pulumi.StringArrayInput `pulumi:"policies"`
}

func (ClientPermissionsMapRolesClientScopeScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientPermissionsMapRolesClientScopeScope)(nil)).Elem()
}

func (i ClientPermissionsMapRolesClientScopeScopeArgs) ToClientPermissionsMapRolesClientScopeScopeOutput() ClientPermissionsMapRolesClientScopeScopeOutput {
	return i.ToClientPermissionsMapRolesClientScopeScopeOutputWithContext(context.Background())
}

func (i ClientPermissionsMapRolesClientScopeScopeArgs) ToClientPermissionsMapRolesClientScopeScopeOutputWithContext(ctx context.Context) ClientPermissionsMapRolesClientScopeScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientPermissionsMapRolesClientScopeScopeOutput)
}

func (i ClientPermissionsMapRolesClientScopeScopeArgs) ToClientPermissionsMapRolesClientScopeScopePtrOutput() ClientPermissionsMapRolesClientScopeScopePtrOutput {
	return i.ToClientPermissionsMapRolesClientScopeScopePtrOutputWithContext(context.Background())
}

func (i ClientPermissionsMapRolesClientScopeScopeArgs) ToClientPermissionsMapRolesClientScopeScopePtrOutputWithContext(ctx context.Context) ClientPermissionsMapRolesClientScopeScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientPermissionsMapRolesClientScopeScopeOutput).ToClientPermissionsMapRolesClientScopeScopePtrOutputWithContext(ctx)
}

// ClientPermissionsMapRolesClientScopeScopePtrInput is an input type that accepts ClientPermissionsMapRolesClientScopeScopeArgs, ClientPermissionsMapRolesClientScopeScopePtr and ClientPermissionsMapRolesClientScopeScopePtrOutput values.
// You can construct a concrete instance of `ClientPermissionsMapRolesClientScopeScopePtrInput` via:
//
//          ClientPermissionsMapRolesClientScopeScopeArgs{...}
//
//  or:
//
//          nil
type ClientPermissionsMapRolesClientScopeScopePtrInput interface {
	pulumi.Input

	ToClientPermissionsMapRolesClientScopeScopePtrOutput() ClientPermissionsMapRolesClientScopeScopePtrOutput
	ToClientPermissionsMapRolesClientScopeScopePtrOutputWithContext(context.Context) ClientPermissionsMapRolesClientScopeScopePtrOutput
}

type clientPermissionsMapRolesClientScopeScopePtrType ClientPermissionsMapRolesClientScopeScopeArgs

func ClientPermissionsMapRolesClientScopeScopePtr(v *ClientPermissionsMapRolesClientScopeScopeArgs) ClientPermissionsMapRolesClientScopeScopePtrInput {
	return (*clientPermissionsMapRolesClientScopeScopePtrType)(v)
}

func (*clientPermissionsMapRolesClientScopeScopePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientPermissionsMapRolesClientScopeScope)(nil)).Elem()
}

func (i *clientPermissionsMapRolesClientScopeScopePtrType) ToClientPermissionsMapRolesClientScopeScopePtrOutput() ClientPermissionsMapRolesClientScopeScopePtrOutput {
	return i.ToClientPermissionsMapRolesClientScopeScopePtrOutputWithContext(context.Background())
}

func (i *clientPermissionsMapRolesClientScopeScopePtrType) ToClientPermissionsMapRolesClientScopeScopePtrOutputWithContext(ctx context.Context) ClientPermissionsMapRolesClientScopeScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientPermissionsMapRolesClientScopeScopePtrOutput)
}

type ClientPermissionsMapRolesClientScopeScopeOutput struct{ *pulumi.OutputState }

func (ClientPermissionsMapRolesClientScopeScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientPermissionsMapRolesClientScopeScope)(nil)).Elem()
}

func (o ClientPermissionsMapRolesClientScopeScopeOutput) ToClientPermissionsMapRolesClientScopeScopeOutput() ClientPermissionsMapRolesClientScopeScopeOutput {
	return o
}

func (o ClientPermissionsMapRolesClientScopeScopeOutput) ToClientPermissionsMapRolesClientScopeScopeOutputWithContext(ctx context.Context) ClientPermissionsMapRolesClientScopeScopeOutput {
	return o
}

func (o ClientPermissionsMapRolesClientScopeScopeOutput) ToClientPermissionsMapRolesClientScopeScopePtrOutput() ClientPermissionsMapRolesClientScopeScopePtrOutput {
	return o.ToClientPermissionsMapRolesClientScopeScopePtrOutputWithContext(context.Background())
}

func (o ClientPermissionsMapRolesClientScopeScopeOutput) ToClientPermissionsMapRolesClientScopeScopePtrOutputWithContext(ctx context.Context) ClientPermissionsMapRolesClientScopeScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientPermissionsMapRolesClientScopeScope) *ClientPermissionsMapRolesClientScopeScope {
		return &v
	}).(ClientPermissionsMapRolesClientScopeScopePtrOutput)
}

func (o ClientPermissionsMapRolesClientScopeScopeOutput) DecisionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientPermissionsMapRolesClientScopeScope) *string { return v.DecisionStrategy }).(pulumi.StringPtrOutput)
}

func (o ClientPermissionsMapRolesClientScopeScopeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientPermissionsMapRolesClientScopeScope) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ClientPermissionsMapRolesClientScopeScopeOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClientPermissionsMapRolesClientScopeScope) []string { return v.Policies }).(pulumi.StringArrayOutput)
}

type ClientPermissionsMapRolesClientScopeScopePtrOutput struct{ *pulumi.OutputState }

func (ClientPermissionsMapRolesClientScopeScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientPermissionsMapRolesClientScopeScope)(nil)).Elem()
}

func (o ClientPermissionsMapRolesClientScopeScopePtrOutput) ToClientPermissionsMapRolesClientScopeScopePtrOutput() ClientPermissionsMapRolesClientScopeScopePtrOutput {
	return o
}

func (o ClientPermissionsMapRolesClientScopeScopePtrOutput) ToClientPermissionsMapRolesClientScopeScopePtrOutputWithContext(ctx context.Context) ClientPermissionsMapRolesClientScopeScopePtrOutput {
	return o
}

func (o ClientPermissionsMapRolesClientScopeScopePtrOutput) Elem() ClientPermissionsMapRolesClientScopeScopeOutput {
	return o.ApplyT(func(v *ClientPermissionsMapRolesClientScopeScope) ClientPermissionsMapRolesClientScopeScope {
		if v != nil {
			return *v
		}
		var ret ClientPermissionsMapRolesClientScopeScope
		return ret
	}).(ClientPermissionsMapRolesClientScopeScopeOutput)
}

func (o ClientPermissionsMapRolesClientScopeScopePtrOutput) DecisionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientPermissionsMapRolesClientScopeScope) *string {
		if v == nil {
			return nil
		}
		return v.DecisionStrategy
	}).(pulumi.StringPtrOutput)
}

func (o ClientPermissionsMapRolesClientScopeScopePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientPermissionsMapRolesClientScopeScope) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o ClientPermissionsMapRolesClientScopeScopePtrOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClientPermissionsMapRolesClientScopeScope) []string {
		if v == nil {
			return nil
		}
		return v.Policies
	}).(pulumi.StringArrayOutput)
}

type ClientPermissionsMapRolesCompositeScope struct {
	DecisionStrategy *string  `pulumi:"decisionStrategy"`
	Description      *string  `pulumi:"description"`
	Policies         []string `pulumi:"policies"`
}

// ClientPermissionsMapRolesCompositeScopeInput is an input type that accepts ClientPermissionsMapRolesCompositeScopeArgs and ClientPermissionsMapRolesCompositeScopeOutput values.
// You can construct a concrete instance of `ClientPermissionsMapRolesCompositeScopeInput` via:
//
//          ClientPermissionsMapRolesCompositeScopeArgs{...}
type ClientPermissionsMapRolesCompositeScopeInput interface {
	pulumi.Input

	ToClientPermissionsMapRolesCompositeScopeOutput() ClientPermissionsMapRolesCompositeScopeOutput
	ToClientPermissionsMapRolesCompositeScopeOutputWithContext(context.Context) ClientPermissionsMapRolesCompositeScopeOutput
}

type ClientPermissionsMapRolesCompositeScopeArgs struct {
	DecisionStrategy pulumi.StringPtrInput   `pulumi:"decisionStrategy"`
	Description      pulumi.StringPtrInput   `pulumi:"description"`
	Policies         pulumi.StringArrayInput `pulumi:"policies"`
}

func (ClientPermissionsMapRolesCompositeScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientPermissionsMapRolesCompositeScope)(nil)).Elem()
}

func (i ClientPermissionsMapRolesCompositeScopeArgs) ToClientPermissionsMapRolesCompositeScopeOutput() ClientPermissionsMapRolesCompositeScopeOutput {
	return i.ToClientPermissionsMapRolesCompositeScopeOutputWithContext(context.Background())
}

func (i ClientPermissionsMapRolesCompositeScopeArgs) ToClientPermissionsMapRolesCompositeScopeOutputWithContext(ctx context.Context) ClientPermissionsMapRolesCompositeScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientPermissionsMapRolesCompositeScopeOutput)
}

func (i ClientPermissionsMapRolesCompositeScopeArgs) ToClientPermissionsMapRolesCompositeScopePtrOutput() ClientPermissionsMapRolesCompositeScopePtrOutput {
	return i.ToClientPermissionsMapRolesCompositeScopePtrOutputWithContext(context.Background())
}

func (i ClientPermissionsMapRolesCompositeScopeArgs) ToClientPermissionsMapRolesCompositeScopePtrOutputWithContext(ctx context.Context) ClientPermissionsMapRolesCompositeScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientPermissionsMapRolesCompositeScopeOutput).ToClientPermissionsMapRolesCompositeScopePtrOutputWithContext(ctx)
}

// ClientPermissionsMapRolesCompositeScopePtrInput is an input type that accepts ClientPermissionsMapRolesCompositeScopeArgs, ClientPermissionsMapRolesCompositeScopePtr and ClientPermissionsMapRolesCompositeScopePtrOutput values.
// You can construct a concrete instance of `ClientPermissionsMapRolesCompositeScopePtrInput` via:
//
//          ClientPermissionsMapRolesCompositeScopeArgs{...}
//
//  or:
//
//          nil
type ClientPermissionsMapRolesCompositeScopePtrInput interface {
	pulumi.Input

	ToClientPermissionsMapRolesCompositeScopePtrOutput() ClientPermissionsMapRolesCompositeScopePtrOutput
	ToClientPermissionsMapRolesCompositeScopePtrOutputWithContext(context.Context) ClientPermissionsMapRolesCompositeScopePtrOutput
}

type clientPermissionsMapRolesCompositeScopePtrType ClientPermissionsMapRolesCompositeScopeArgs

func ClientPermissionsMapRolesCompositeScopePtr(v *ClientPermissionsMapRolesCompositeScopeArgs) ClientPermissionsMapRolesCompositeScopePtrInput {
	return (*clientPermissionsMapRolesCompositeScopePtrType)(v)
}

func (*clientPermissionsMapRolesCompositeScopePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientPermissionsMapRolesCompositeScope)(nil)).Elem()
}

func (i *clientPermissionsMapRolesCompositeScopePtrType) ToClientPermissionsMapRolesCompositeScopePtrOutput() ClientPermissionsMapRolesCompositeScopePtrOutput {
	return i.ToClientPermissionsMapRolesCompositeScopePtrOutputWithContext(context.Background())
}

func (i *clientPermissionsMapRolesCompositeScopePtrType) ToClientPermissionsMapRolesCompositeScopePtrOutputWithContext(ctx context.Context) ClientPermissionsMapRolesCompositeScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientPermissionsMapRolesCompositeScopePtrOutput)
}

type ClientPermissionsMapRolesCompositeScopeOutput struct{ *pulumi.OutputState }

func (ClientPermissionsMapRolesCompositeScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientPermissionsMapRolesCompositeScope)(nil)).Elem()
}

func (o ClientPermissionsMapRolesCompositeScopeOutput) ToClientPermissionsMapRolesCompositeScopeOutput() ClientPermissionsMapRolesCompositeScopeOutput {
	return o
}

func (o ClientPermissionsMapRolesCompositeScopeOutput) ToClientPermissionsMapRolesCompositeScopeOutputWithContext(ctx context.Context) ClientPermissionsMapRolesCompositeScopeOutput {
	return o
}

func (o ClientPermissionsMapRolesCompositeScopeOutput) ToClientPermissionsMapRolesCompositeScopePtrOutput() ClientPermissionsMapRolesCompositeScopePtrOutput {
	return o.ToClientPermissionsMapRolesCompositeScopePtrOutputWithContext(context.Background())
}

func (o ClientPermissionsMapRolesCompositeScopeOutput) ToClientPermissionsMapRolesCompositeScopePtrOutputWithContext(ctx context.Context) ClientPermissionsMapRolesCompositeScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientPermissionsMapRolesCompositeScope) *ClientPermissionsMapRolesCompositeScope {
		return &v
	}).(ClientPermissionsMapRolesCompositeScopePtrOutput)
}

func (o ClientPermissionsMapRolesCompositeScopeOutput) DecisionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientPermissionsMapRolesCompositeScope) *string { return v.DecisionStrategy }).(pulumi.StringPtrOutput)
}

func (o ClientPermissionsMapRolesCompositeScopeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientPermissionsMapRolesCompositeScope) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ClientPermissionsMapRolesCompositeScopeOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClientPermissionsMapRolesCompositeScope) []string { return v.Policies }).(pulumi.StringArrayOutput)
}

type ClientPermissionsMapRolesCompositeScopePtrOutput struct{ *pulumi.OutputState }

func (ClientPermissionsMapRolesCompositeScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientPermissionsMapRolesCompositeScope)(nil)).Elem()
}

func (o ClientPermissionsMapRolesCompositeScopePtrOutput) ToClientPermissionsMapRolesCompositeScopePtrOutput() ClientPermissionsMapRolesCompositeScopePtrOutput {
	return o
}

func (o ClientPermissionsMapRolesCompositeScopePtrOutput) ToClientPermissionsMapRolesCompositeScopePtrOutputWithContext(ctx context.Context) ClientPermissionsMapRolesCompositeScopePtrOutput {
	return o
}

func (o ClientPermissionsMapRolesCompositeScopePtrOutput) Elem() ClientPermissionsMapRolesCompositeScopeOutput {
	return o.ApplyT(func(v *ClientPermissionsMapRolesCompositeScope) ClientPermissionsMapRolesCompositeScope {
		if v != nil {
			return *v
		}
		var ret ClientPermissionsMapRolesCompositeScope
		return ret
	}).(ClientPermissionsMapRolesCompositeScopeOutput)
}

func (o ClientPermissionsMapRolesCompositeScopePtrOutput) DecisionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientPermissionsMapRolesCompositeScope) *string {
		if v == nil {
			return nil
		}
		return v.DecisionStrategy
	}).(pulumi.StringPtrOutput)
}

func (o ClientPermissionsMapRolesCompositeScopePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientPermissionsMapRolesCompositeScope) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o ClientPermissionsMapRolesCompositeScopePtrOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClientPermissionsMapRolesCompositeScope) []string {
		if v == nil {
			return nil
		}
		return v.Policies
	}).(pulumi.StringArrayOutput)
}

type ClientPermissionsMapRolesScope struct {
	DecisionStrategy *string  `pulumi:"decisionStrategy"`
	Description      *string  `pulumi:"description"`
	Policies         []string `pulumi:"policies"`
}

// ClientPermissionsMapRolesScopeInput is an input type that accepts ClientPermissionsMapRolesScopeArgs and ClientPermissionsMapRolesScopeOutput values.
// You can construct a concrete instance of `ClientPermissionsMapRolesScopeInput` via:
//
//          ClientPermissionsMapRolesScopeArgs{...}
type ClientPermissionsMapRolesScopeInput interface {
	pulumi.Input

	ToClientPermissionsMapRolesScopeOutput() ClientPermissionsMapRolesScopeOutput
	ToClientPermissionsMapRolesScopeOutputWithContext(context.Context) ClientPermissionsMapRolesScopeOutput
}

type ClientPermissionsMapRolesScopeArgs struct {
	DecisionStrategy pulumi.StringPtrInput   `pulumi:"decisionStrategy"`
	Description      pulumi.StringPtrInput   `pulumi:"description"`
	Policies         pulumi.StringArrayInput `pulumi:"policies"`
}

func (ClientPermissionsMapRolesScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientPermissionsMapRolesScope)(nil)).Elem()
}

func (i ClientPermissionsMapRolesScopeArgs) ToClientPermissionsMapRolesScopeOutput() ClientPermissionsMapRolesScopeOutput {
	return i.ToClientPermissionsMapRolesScopeOutputWithContext(context.Background())
}

func (i ClientPermissionsMapRolesScopeArgs) ToClientPermissionsMapRolesScopeOutputWithContext(ctx context.Context) ClientPermissionsMapRolesScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientPermissionsMapRolesScopeOutput)
}

func (i ClientPermissionsMapRolesScopeArgs) ToClientPermissionsMapRolesScopePtrOutput() ClientPermissionsMapRolesScopePtrOutput {
	return i.ToClientPermissionsMapRolesScopePtrOutputWithContext(context.Background())
}

func (i ClientPermissionsMapRolesScopeArgs) ToClientPermissionsMapRolesScopePtrOutputWithContext(ctx context.Context) ClientPermissionsMapRolesScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientPermissionsMapRolesScopeOutput).ToClientPermissionsMapRolesScopePtrOutputWithContext(ctx)
}

// ClientPermissionsMapRolesScopePtrInput is an input type that accepts ClientPermissionsMapRolesScopeArgs, ClientPermissionsMapRolesScopePtr and ClientPermissionsMapRolesScopePtrOutput values.
// You can construct a concrete instance of `ClientPermissionsMapRolesScopePtrInput` via:
//
//          ClientPermissionsMapRolesScopeArgs{...}
//
//  or:
//
//          nil
type ClientPermissionsMapRolesScopePtrInput interface {
	pulumi.Input

	ToClientPermissionsMapRolesScopePtrOutput() ClientPermissionsMapRolesScopePtrOutput
	ToClientPermissionsMapRolesScopePtrOutputWithContext(context.Context) ClientPermissionsMapRolesScopePtrOutput
}

type clientPermissionsMapRolesScopePtrType ClientPermissionsMapRolesScopeArgs

func ClientPermissionsMapRolesScopePtr(v *ClientPermissionsMapRolesScopeArgs) ClientPermissionsMapRolesScopePtrInput {
	return (*clientPermissionsMapRolesScopePtrType)(v)
}

func (*clientPermissionsMapRolesScopePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientPermissionsMapRolesScope)(nil)).Elem()
}

func (i *clientPermissionsMapRolesScopePtrType) ToClientPermissionsMapRolesScopePtrOutput() ClientPermissionsMapRolesScopePtrOutput {
	return i.ToClientPermissionsMapRolesScopePtrOutputWithContext(context.Background())
}

func (i *clientPermissionsMapRolesScopePtrType) ToClientPermissionsMapRolesScopePtrOutputWithContext(ctx context.Context) ClientPermissionsMapRolesScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientPermissionsMapRolesScopePtrOutput)
}

type ClientPermissionsMapRolesScopeOutput struct{ *pulumi.OutputState }

func (ClientPermissionsMapRolesScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientPermissionsMapRolesScope)(nil)).Elem()
}

func (o ClientPermissionsMapRolesScopeOutput) ToClientPermissionsMapRolesScopeOutput() ClientPermissionsMapRolesScopeOutput {
	return o
}

func (o ClientPermissionsMapRolesScopeOutput) ToClientPermissionsMapRolesScopeOutputWithContext(ctx context.Context) ClientPermissionsMapRolesScopeOutput {
	return o
}

func (o ClientPermissionsMapRolesScopeOutput) ToClientPermissionsMapRolesScopePtrOutput() ClientPermissionsMapRolesScopePtrOutput {
	return o.ToClientPermissionsMapRolesScopePtrOutputWithContext(context.Background())
}

func (o ClientPermissionsMapRolesScopeOutput) ToClientPermissionsMapRolesScopePtrOutputWithContext(ctx context.Context) ClientPermissionsMapRolesScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientPermissionsMapRolesScope) *ClientPermissionsMapRolesScope {
		return &v
	}).(ClientPermissionsMapRolesScopePtrOutput)
}

func (o ClientPermissionsMapRolesScopeOutput) DecisionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientPermissionsMapRolesScope) *string { return v.DecisionStrategy }).(pulumi.StringPtrOutput)
}

func (o ClientPermissionsMapRolesScopeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientPermissionsMapRolesScope) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ClientPermissionsMapRolesScopeOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClientPermissionsMapRolesScope) []string { return v.Policies }).(pulumi.StringArrayOutput)
}

type ClientPermissionsMapRolesScopePtrOutput struct{ *pulumi.OutputState }

func (ClientPermissionsMapRolesScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientPermissionsMapRolesScope)(nil)).Elem()
}

func (o ClientPermissionsMapRolesScopePtrOutput) ToClientPermissionsMapRolesScopePtrOutput() ClientPermissionsMapRolesScopePtrOutput {
	return o
}

func (o ClientPermissionsMapRolesScopePtrOutput) ToClientPermissionsMapRolesScopePtrOutputWithContext(ctx context.Context) ClientPermissionsMapRolesScopePtrOutput {
	return o
}

func (o ClientPermissionsMapRolesScopePtrOutput) Elem() ClientPermissionsMapRolesScopeOutput {
	return o.ApplyT(func(v *ClientPermissionsMapRolesScope) ClientPermissionsMapRolesScope {
		if v != nil {
			return *v
		}
		var ret ClientPermissionsMapRolesScope
		return ret
	}).(ClientPermissionsMapRolesScopeOutput)
}

func (o ClientPermissionsMapRolesScopePtrOutput) DecisionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientPermissionsMapRolesScope) *string {
		if v == nil {
			return nil
		}
		return v.DecisionStrategy
	}).(pulumi.StringPtrOutput)
}

func (o ClientPermissionsMapRolesScopePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientPermissionsMapRolesScope) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o ClientPermissionsMapRolesScopePtrOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClientPermissionsMapRolesScope) []string {
		if v == nil {
			return nil
		}
		return v.Policies
	}).(pulumi.StringArrayOutput)
}

type ClientPermissionsTokenExchangeScope struct {
	DecisionStrategy *string  `pulumi:"decisionStrategy"`
	Description      *string  `pulumi:"description"`
	Policies         []string `pulumi:"policies"`
}

// ClientPermissionsTokenExchangeScopeInput is an input type that accepts ClientPermissionsTokenExchangeScopeArgs and ClientPermissionsTokenExchangeScopeOutput values.
// You can construct a concrete instance of `ClientPermissionsTokenExchangeScopeInput` via:
//
//          ClientPermissionsTokenExchangeScopeArgs{...}
type ClientPermissionsTokenExchangeScopeInput interface {
	pulumi.Input

	ToClientPermissionsTokenExchangeScopeOutput() ClientPermissionsTokenExchangeScopeOutput
	ToClientPermissionsTokenExchangeScopeOutputWithContext(context.Context) ClientPermissionsTokenExchangeScopeOutput
}

type ClientPermissionsTokenExchangeScopeArgs struct {
	DecisionStrategy pulumi.StringPtrInput   `pulumi:"decisionStrategy"`
	Description      pulumi.StringPtrInput   `pulumi:"description"`
	Policies         pulumi.StringArrayInput `pulumi:"policies"`
}

func (ClientPermissionsTokenExchangeScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientPermissionsTokenExchangeScope)(nil)).Elem()
}

func (i ClientPermissionsTokenExchangeScopeArgs) ToClientPermissionsTokenExchangeScopeOutput() ClientPermissionsTokenExchangeScopeOutput {
	return i.ToClientPermissionsTokenExchangeScopeOutputWithContext(context.Background())
}

func (i ClientPermissionsTokenExchangeScopeArgs) ToClientPermissionsTokenExchangeScopeOutputWithContext(ctx context.Context) ClientPermissionsTokenExchangeScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientPermissionsTokenExchangeScopeOutput)
}

func (i ClientPermissionsTokenExchangeScopeArgs) ToClientPermissionsTokenExchangeScopePtrOutput() ClientPermissionsTokenExchangeScopePtrOutput {
	return i.ToClientPermissionsTokenExchangeScopePtrOutputWithContext(context.Background())
}

func (i ClientPermissionsTokenExchangeScopeArgs) ToClientPermissionsTokenExchangeScopePtrOutputWithContext(ctx context.Context) ClientPermissionsTokenExchangeScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientPermissionsTokenExchangeScopeOutput).ToClientPermissionsTokenExchangeScopePtrOutputWithContext(ctx)
}

// ClientPermissionsTokenExchangeScopePtrInput is an input type that accepts ClientPermissionsTokenExchangeScopeArgs, ClientPermissionsTokenExchangeScopePtr and ClientPermissionsTokenExchangeScopePtrOutput values.
// You can construct a concrete instance of `ClientPermissionsTokenExchangeScopePtrInput` via:
//
//          ClientPermissionsTokenExchangeScopeArgs{...}
//
//  or:
//
//          nil
type ClientPermissionsTokenExchangeScopePtrInput interface {
	pulumi.Input

	ToClientPermissionsTokenExchangeScopePtrOutput() ClientPermissionsTokenExchangeScopePtrOutput
	ToClientPermissionsTokenExchangeScopePtrOutputWithContext(context.Context) ClientPermissionsTokenExchangeScopePtrOutput
}

type clientPermissionsTokenExchangeScopePtrType ClientPermissionsTokenExchangeScopeArgs

func ClientPermissionsTokenExchangeScopePtr(v *ClientPermissionsTokenExchangeScopeArgs) ClientPermissionsTokenExchangeScopePtrInput {
	return (*clientPermissionsTokenExchangeScopePtrType)(v)
}

func (*clientPermissionsTokenExchangeScopePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientPermissionsTokenExchangeScope)(nil)).Elem()
}

func (i *clientPermissionsTokenExchangeScopePtrType) ToClientPermissionsTokenExchangeScopePtrOutput() ClientPermissionsTokenExchangeScopePtrOutput {
	return i.ToClientPermissionsTokenExchangeScopePtrOutputWithContext(context.Background())
}

func (i *clientPermissionsTokenExchangeScopePtrType) ToClientPermissionsTokenExchangeScopePtrOutputWithContext(ctx context.Context) ClientPermissionsTokenExchangeScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientPermissionsTokenExchangeScopePtrOutput)
}

type ClientPermissionsTokenExchangeScopeOutput struct{ *pulumi.OutputState }

func (ClientPermissionsTokenExchangeScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientPermissionsTokenExchangeScope)(nil)).Elem()
}

func (o ClientPermissionsTokenExchangeScopeOutput) ToClientPermissionsTokenExchangeScopeOutput() ClientPermissionsTokenExchangeScopeOutput {
	return o
}

func (o ClientPermissionsTokenExchangeScopeOutput) ToClientPermissionsTokenExchangeScopeOutputWithContext(ctx context.Context) ClientPermissionsTokenExchangeScopeOutput {
	return o
}

func (o ClientPermissionsTokenExchangeScopeOutput) ToClientPermissionsTokenExchangeScopePtrOutput() ClientPermissionsTokenExchangeScopePtrOutput {
	return o.ToClientPermissionsTokenExchangeScopePtrOutputWithContext(context.Background())
}

func (o ClientPermissionsTokenExchangeScopeOutput) ToClientPermissionsTokenExchangeScopePtrOutputWithContext(ctx context.Context) ClientPermissionsTokenExchangeScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientPermissionsTokenExchangeScope) *ClientPermissionsTokenExchangeScope {
		return &v
	}).(ClientPermissionsTokenExchangeScopePtrOutput)
}

func (o ClientPermissionsTokenExchangeScopeOutput) DecisionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientPermissionsTokenExchangeScope) *string { return v.DecisionStrategy }).(pulumi.StringPtrOutput)
}

func (o ClientPermissionsTokenExchangeScopeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientPermissionsTokenExchangeScope) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ClientPermissionsTokenExchangeScopeOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClientPermissionsTokenExchangeScope) []string { return v.Policies }).(pulumi.StringArrayOutput)
}

type ClientPermissionsTokenExchangeScopePtrOutput struct{ *pulumi.OutputState }

func (ClientPermissionsTokenExchangeScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientPermissionsTokenExchangeScope)(nil)).Elem()
}

func (o ClientPermissionsTokenExchangeScopePtrOutput) ToClientPermissionsTokenExchangeScopePtrOutput() ClientPermissionsTokenExchangeScopePtrOutput {
	return o
}

func (o ClientPermissionsTokenExchangeScopePtrOutput) ToClientPermissionsTokenExchangeScopePtrOutputWithContext(ctx context.Context) ClientPermissionsTokenExchangeScopePtrOutput {
	return o
}

func (o ClientPermissionsTokenExchangeScopePtrOutput) Elem() ClientPermissionsTokenExchangeScopeOutput {
	return o.ApplyT(func(v *ClientPermissionsTokenExchangeScope) ClientPermissionsTokenExchangeScope {
		if v != nil {
			return *v
		}
		var ret ClientPermissionsTokenExchangeScope
		return ret
	}).(ClientPermissionsTokenExchangeScopeOutput)
}

func (o ClientPermissionsTokenExchangeScopePtrOutput) DecisionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientPermissionsTokenExchangeScope) *string {
		if v == nil {
			return nil
		}
		return v.DecisionStrategy
	}).(pulumi.StringPtrOutput)
}

func (o ClientPermissionsTokenExchangeScopePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientPermissionsTokenExchangeScope) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o ClientPermissionsTokenExchangeScopePtrOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClientPermissionsTokenExchangeScope) []string {
		if v == nil {
			return nil
		}
		return v.Policies
	}).(pulumi.StringArrayOutput)
}

type ClientPermissionsViewScope struct {
	DecisionStrategy *string  `pulumi:"decisionStrategy"`
	Description      *string  `pulumi:"description"`
	Policies         []string `pulumi:"policies"`
}

// ClientPermissionsViewScopeInput is an input type that accepts ClientPermissionsViewScopeArgs and ClientPermissionsViewScopeOutput values.
// You can construct a concrete instance of `ClientPermissionsViewScopeInput` via:
//
//          ClientPermissionsViewScopeArgs{...}
type ClientPermissionsViewScopeInput interface {
	pulumi.Input

	ToClientPermissionsViewScopeOutput() ClientPermissionsViewScopeOutput
	ToClientPermissionsViewScopeOutputWithContext(context.Context) ClientPermissionsViewScopeOutput
}

type ClientPermissionsViewScopeArgs struct {
	DecisionStrategy pulumi.StringPtrInput   `pulumi:"decisionStrategy"`
	Description      pulumi.StringPtrInput   `pulumi:"description"`
	Policies         pulumi.StringArrayInput `pulumi:"policies"`
}

func (ClientPermissionsViewScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientPermissionsViewScope)(nil)).Elem()
}

func (i ClientPermissionsViewScopeArgs) ToClientPermissionsViewScopeOutput() ClientPermissionsViewScopeOutput {
	return i.ToClientPermissionsViewScopeOutputWithContext(context.Background())
}

func (i ClientPermissionsViewScopeArgs) ToClientPermissionsViewScopeOutputWithContext(ctx context.Context) ClientPermissionsViewScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientPermissionsViewScopeOutput)
}

func (i ClientPermissionsViewScopeArgs) ToClientPermissionsViewScopePtrOutput() ClientPermissionsViewScopePtrOutput {
	return i.ToClientPermissionsViewScopePtrOutputWithContext(context.Background())
}

func (i ClientPermissionsViewScopeArgs) ToClientPermissionsViewScopePtrOutputWithContext(ctx context.Context) ClientPermissionsViewScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientPermissionsViewScopeOutput).ToClientPermissionsViewScopePtrOutputWithContext(ctx)
}

// ClientPermissionsViewScopePtrInput is an input type that accepts ClientPermissionsViewScopeArgs, ClientPermissionsViewScopePtr and ClientPermissionsViewScopePtrOutput values.
// You can construct a concrete instance of `ClientPermissionsViewScopePtrInput` via:
//
//          ClientPermissionsViewScopeArgs{...}
//
//  or:
//
//          nil
type ClientPermissionsViewScopePtrInput interface {
	pulumi.Input

	ToClientPermissionsViewScopePtrOutput() ClientPermissionsViewScopePtrOutput
	ToClientPermissionsViewScopePtrOutputWithContext(context.Context) ClientPermissionsViewScopePtrOutput
}

type clientPermissionsViewScopePtrType ClientPermissionsViewScopeArgs

func ClientPermissionsViewScopePtr(v *ClientPermissionsViewScopeArgs) ClientPermissionsViewScopePtrInput {
	return (*clientPermissionsViewScopePtrType)(v)
}

func (*clientPermissionsViewScopePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientPermissionsViewScope)(nil)).Elem()
}

func (i *clientPermissionsViewScopePtrType) ToClientPermissionsViewScopePtrOutput() ClientPermissionsViewScopePtrOutput {
	return i.ToClientPermissionsViewScopePtrOutputWithContext(context.Background())
}

func (i *clientPermissionsViewScopePtrType) ToClientPermissionsViewScopePtrOutputWithContext(ctx context.Context) ClientPermissionsViewScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientPermissionsViewScopePtrOutput)
}

type ClientPermissionsViewScopeOutput struct{ *pulumi.OutputState }

func (ClientPermissionsViewScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientPermissionsViewScope)(nil)).Elem()
}

func (o ClientPermissionsViewScopeOutput) ToClientPermissionsViewScopeOutput() ClientPermissionsViewScopeOutput {
	return o
}

func (o ClientPermissionsViewScopeOutput) ToClientPermissionsViewScopeOutputWithContext(ctx context.Context) ClientPermissionsViewScopeOutput {
	return o
}

func (o ClientPermissionsViewScopeOutput) ToClientPermissionsViewScopePtrOutput() ClientPermissionsViewScopePtrOutput {
	return o.ToClientPermissionsViewScopePtrOutputWithContext(context.Background())
}

func (o ClientPermissionsViewScopeOutput) ToClientPermissionsViewScopePtrOutputWithContext(ctx context.Context) ClientPermissionsViewScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientPermissionsViewScope) *ClientPermissionsViewScope {
		return &v
	}).(ClientPermissionsViewScopePtrOutput)
}

func (o ClientPermissionsViewScopeOutput) DecisionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientPermissionsViewScope) *string { return v.DecisionStrategy }).(pulumi.StringPtrOutput)
}

func (o ClientPermissionsViewScopeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientPermissionsViewScope) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ClientPermissionsViewScopeOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClientPermissionsViewScope) []string { return v.Policies }).(pulumi.StringArrayOutput)
}

type ClientPermissionsViewScopePtrOutput struct{ *pulumi.OutputState }

func (ClientPermissionsViewScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientPermissionsViewScope)(nil)).Elem()
}

func (o ClientPermissionsViewScopePtrOutput) ToClientPermissionsViewScopePtrOutput() ClientPermissionsViewScopePtrOutput {
	return o
}

func (o ClientPermissionsViewScopePtrOutput) ToClientPermissionsViewScopePtrOutputWithContext(ctx context.Context) ClientPermissionsViewScopePtrOutput {
	return o
}

func (o ClientPermissionsViewScopePtrOutput) Elem() ClientPermissionsViewScopeOutput {
	return o.ApplyT(func(v *ClientPermissionsViewScope) ClientPermissionsViewScope {
		if v != nil {
			return *v
		}
		var ret ClientPermissionsViewScope
		return ret
	}).(ClientPermissionsViewScopeOutput)
}

func (o ClientPermissionsViewScopePtrOutput) DecisionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientPermissionsViewScope) *string {
		if v == nil {
			return nil
		}
		return v.DecisionStrategy
	}).(pulumi.StringPtrOutput)
}

func (o ClientPermissionsViewScopePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientPermissionsViewScope) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o ClientPermissionsViewScopePtrOutput) Policies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClientPermissionsViewScope) []string {
		if v == nil {
			return nil
		}
		return v.Policies
	}).(pulumi.StringArrayOutput)
}

type ClientRolePolicyRole struct {
	Id       string `pulumi:"id"`
	Required bool   `pulumi:"required"`
}

// ClientRolePolicyRoleInput is an input type that accepts ClientRolePolicyRoleArgs and ClientRolePolicyRoleOutput values.
// You can construct a concrete instance of `ClientRolePolicyRoleInput` via:
//
//          ClientRolePolicyRoleArgs{...}
type ClientRolePolicyRoleInput interface {
	pulumi.Input

	ToClientRolePolicyRoleOutput() ClientRolePolicyRoleOutput
	ToClientRolePolicyRoleOutputWithContext(context.Context) ClientRolePolicyRoleOutput
}

type ClientRolePolicyRoleArgs struct {
	Id       pulumi.StringInput `pulumi:"id"`
	Required pulumi.BoolInput   `pulumi:"required"`
}

func (ClientRolePolicyRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientRolePolicyRole)(nil)).Elem()
}

func (i ClientRolePolicyRoleArgs) ToClientRolePolicyRoleOutput() ClientRolePolicyRoleOutput {
	return i.ToClientRolePolicyRoleOutputWithContext(context.Background())
}

func (i ClientRolePolicyRoleArgs) ToClientRolePolicyRoleOutputWithContext(ctx context.Context) ClientRolePolicyRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientRolePolicyRoleOutput)
}

// ClientRolePolicyRoleArrayInput is an input type that accepts ClientRolePolicyRoleArray and ClientRolePolicyRoleArrayOutput values.
// You can construct a concrete instance of `ClientRolePolicyRoleArrayInput` via:
//
//          ClientRolePolicyRoleArray{ ClientRolePolicyRoleArgs{...} }
type ClientRolePolicyRoleArrayInput interface {
	pulumi.Input

	ToClientRolePolicyRoleArrayOutput() ClientRolePolicyRoleArrayOutput
	ToClientRolePolicyRoleArrayOutputWithContext(context.Context) ClientRolePolicyRoleArrayOutput
}

type ClientRolePolicyRoleArray []ClientRolePolicyRoleInput

func (ClientRolePolicyRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClientRolePolicyRole)(nil)).Elem()
}

func (i ClientRolePolicyRoleArray) ToClientRolePolicyRoleArrayOutput() ClientRolePolicyRoleArrayOutput {
	return i.ToClientRolePolicyRoleArrayOutputWithContext(context.Background())
}

func (i ClientRolePolicyRoleArray) ToClientRolePolicyRoleArrayOutputWithContext(ctx context.Context) ClientRolePolicyRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientRolePolicyRoleArrayOutput)
}

type ClientRolePolicyRoleOutput struct{ *pulumi.OutputState }

func (ClientRolePolicyRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientRolePolicyRole)(nil)).Elem()
}

func (o ClientRolePolicyRoleOutput) ToClientRolePolicyRoleOutput() ClientRolePolicyRoleOutput {
	return o
}

func (o ClientRolePolicyRoleOutput) ToClientRolePolicyRoleOutputWithContext(ctx context.Context) ClientRolePolicyRoleOutput {
	return o
}

func (o ClientRolePolicyRoleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ClientRolePolicyRole) string { return v.Id }).(pulumi.StringOutput)
}

func (o ClientRolePolicyRoleOutput) Required() pulumi.BoolOutput {
	return o.ApplyT(func(v ClientRolePolicyRole) bool { return v.Required }).(pulumi.BoolOutput)
}

type ClientRolePolicyRoleArrayOutput struct{ *pulumi.OutputState }

func (ClientRolePolicyRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClientRolePolicyRole)(nil)).Elem()
}

func (o ClientRolePolicyRoleArrayOutput) ToClientRolePolicyRoleArrayOutput() ClientRolePolicyRoleArrayOutput {
	return o
}

func (o ClientRolePolicyRoleArrayOutput) ToClientRolePolicyRoleArrayOutputWithContext(ctx context.Context) ClientRolePolicyRoleArrayOutput {
	return o
}

func (o ClientRolePolicyRoleArrayOutput) Index(i pulumi.IntInput) ClientRolePolicyRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClientRolePolicyRole {
		return vs[0].([]ClientRolePolicyRole)[vs[1].(int)]
	}).(ClientRolePolicyRoleOutput)
}

type GetClientAuthenticationFlowBindingOverride struct {
	BrowserId     string `pulumi:"browserId"`
	DirectGrantId string `pulumi:"directGrantId"`
}

// GetClientAuthenticationFlowBindingOverrideInput is an input type that accepts GetClientAuthenticationFlowBindingOverrideArgs and GetClientAuthenticationFlowBindingOverrideOutput values.
// You can construct a concrete instance of `GetClientAuthenticationFlowBindingOverrideInput` via:
//
//          GetClientAuthenticationFlowBindingOverrideArgs{...}
type GetClientAuthenticationFlowBindingOverrideInput interface {
	pulumi.Input

	ToGetClientAuthenticationFlowBindingOverrideOutput() GetClientAuthenticationFlowBindingOverrideOutput
	ToGetClientAuthenticationFlowBindingOverrideOutputWithContext(context.Context) GetClientAuthenticationFlowBindingOverrideOutput
}

type GetClientAuthenticationFlowBindingOverrideArgs struct {
	BrowserId     pulumi.StringInput `pulumi:"browserId"`
	DirectGrantId pulumi.StringInput `pulumi:"directGrantId"`
}

func (GetClientAuthenticationFlowBindingOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAuthenticationFlowBindingOverride)(nil)).Elem()
}

func (i GetClientAuthenticationFlowBindingOverrideArgs) ToGetClientAuthenticationFlowBindingOverrideOutput() GetClientAuthenticationFlowBindingOverrideOutput {
	return i.ToGetClientAuthenticationFlowBindingOverrideOutputWithContext(context.Background())
}

func (i GetClientAuthenticationFlowBindingOverrideArgs) ToGetClientAuthenticationFlowBindingOverrideOutputWithContext(ctx context.Context) GetClientAuthenticationFlowBindingOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAuthenticationFlowBindingOverrideOutput)
}

// GetClientAuthenticationFlowBindingOverrideArrayInput is an input type that accepts GetClientAuthenticationFlowBindingOverrideArray and GetClientAuthenticationFlowBindingOverrideArrayOutput values.
// You can construct a concrete instance of `GetClientAuthenticationFlowBindingOverrideArrayInput` via:
//
//          GetClientAuthenticationFlowBindingOverrideArray{ GetClientAuthenticationFlowBindingOverrideArgs{...} }
type GetClientAuthenticationFlowBindingOverrideArrayInput interface {
	pulumi.Input

	ToGetClientAuthenticationFlowBindingOverrideArrayOutput() GetClientAuthenticationFlowBindingOverrideArrayOutput
	ToGetClientAuthenticationFlowBindingOverrideArrayOutputWithContext(context.Context) GetClientAuthenticationFlowBindingOverrideArrayOutput
}

type GetClientAuthenticationFlowBindingOverrideArray []GetClientAuthenticationFlowBindingOverrideInput

func (GetClientAuthenticationFlowBindingOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAuthenticationFlowBindingOverride)(nil)).Elem()
}

func (i GetClientAuthenticationFlowBindingOverrideArray) ToGetClientAuthenticationFlowBindingOverrideArrayOutput() GetClientAuthenticationFlowBindingOverrideArrayOutput {
	return i.ToGetClientAuthenticationFlowBindingOverrideArrayOutputWithContext(context.Background())
}

func (i GetClientAuthenticationFlowBindingOverrideArray) ToGetClientAuthenticationFlowBindingOverrideArrayOutputWithContext(ctx context.Context) GetClientAuthenticationFlowBindingOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAuthenticationFlowBindingOverrideArrayOutput)
}

type GetClientAuthenticationFlowBindingOverrideOutput struct{ *pulumi.OutputState }

func (GetClientAuthenticationFlowBindingOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAuthenticationFlowBindingOverride)(nil)).Elem()
}

func (o GetClientAuthenticationFlowBindingOverrideOutput) ToGetClientAuthenticationFlowBindingOverrideOutput() GetClientAuthenticationFlowBindingOverrideOutput {
	return o
}

func (o GetClientAuthenticationFlowBindingOverrideOutput) ToGetClientAuthenticationFlowBindingOverrideOutputWithContext(ctx context.Context) GetClientAuthenticationFlowBindingOverrideOutput {
	return o
}

func (o GetClientAuthenticationFlowBindingOverrideOutput) BrowserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAuthenticationFlowBindingOverride) string { return v.BrowserId }).(pulumi.StringOutput)
}

func (o GetClientAuthenticationFlowBindingOverrideOutput) DirectGrantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAuthenticationFlowBindingOverride) string { return v.DirectGrantId }).(pulumi.StringOutput)
}

type GetClientAuthenticationFlowBindingOverrideArrayOutput struct{ *pulumi.OutputState }

func (GetClientAuthenticationFlowBindingOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAuthenticationFlowBindingOverride)(nil)).Elem()
}

func (o GetClientAuthenticationFlowBindingOverrideArrayOutput) ToGetClientAuthenticationFlowBindingOverrideArrayOutput() GetClientAuthenticationFlowBindingOverrideArrayOutput {
	return o
}

func (o GetClientAuthenticationFlowBindingOverrideArrayOutput) ToGetClientAuthenticationFlowBindingOverrideArrayOutputWithContext(ctx context.Context) GetClientAuthenticationFlowBindingOverrideArrayOutput {
	return o
}

func (o GetClientAuthenticationFlowBindingOverrideArrayOutput) Index(i pulumi.IntInput) GetClientAuthenticationFlowBindingOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientAuthenticationFlowBindingOverride {
		return vs[0].([]GetClientAuthenticationFlowBindingOverride)[vs[1].(int)]
	}).(GetClientAuthenticationFlowBindingOverrideOutput)
}

type GetClientAuthorization struct {
	AllowRemoteResourceManagement bool   `pulumi:"allowRemoteResourceManagement"`
	DecisionStrategy              string `pulumi:"decisionStrategy"`
	KeepDefaults                  bool   `pulumi:"keepDefaults"`
	PolicyEnforcementMode         string `pulumi:"policyEnforcementMode"`
}

// GetClientAuthorizationInput is an input type that accepts GetClientAuthorizationArgs and GetClientAuthorizationOutput values.
// You can construct a concrete instance of `GetClientAuthorizationInput` via:
//
//          GetClientAuthorizationArgs{...}
type GetClientAuthorizationInput interface {
	pulumi.Input

	ToGetClientAuthorizationOutput() GetClientAuthorizationOutput
	ToGetClientAuthorizationOutputWithContext(context.Context) GetClientAuthorizationOutput
}

type GetClientAuthorizationArgs struct {
	AllowRemoteResourceManagement pulumi.BoolInput   `pulumi:"allowRemoteResourceManagement"`
	DecisionStrategy              pulumi.StringInput `pulumi:"decisionStrategy"`
	KeepDefaults                  pulumi.BoolInput   `pulumi:"keepDefaults"`
	PolicyEnforcementMode         pulumi.StringInput `pulumi:"policyEnforcementMode"`
}

func (GetClientAuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAuthorization)(nil)).Elem()
}

func (i GetClientAuthorizationArgs) ToGetClientAuthorizationOutput() GetClientAuthorizationOutput {
	return i.ToGetClientAuthorizationOutputWithContext(context.Background())
}

func (i GetClientAuthorizationArgs) ToGetClientAuthorizationOutputWithContext(ctx context.Context) GetClientAuthorizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAuthorizationOutput)
}

// GetClientAuthorizationArrayInput is an input type that accepts GetClientAuthorizationArray and GetClientAuthorizationArrayOutput values.
// You can construct a concrete instance of `GetClientAuthorizationArrayInput` via:
//
//          GetClientAuthorizationArray{ GetClientAuthorizationArgs{...} }
type GetClientAuthorizationArrayInput interface {
	pulumi.Input

	ToGetClientAuthorizationArrayOutput() GetClientAuthorizationArrayOutput
	ToGetClientAuthorizationArrayOutputWithContext(context.Context) GetClientAuthorizationArrayOutput
}

type GetClientAuthorizationArray []GetClientAuthorizationInput

func (GetClientAuthorizationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAuthorization)(nil)).Elem()
}

func (i GetClientAuthorizationArray) ToGetClientAuthorizationArrayOutput() GetClientAuthorizationArrayOutput {
	return i.ToGetClientAuthorizationArrayOutputWithContext(context.Background())
}

func (i GetClientAuthorizationArray) ToGetClientAuthorizationArrayOutputWithContext(ctx context.Context) GetClientAuthorizationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAuthorizationArrayOutput)
}

type GetClientAuthorizationOutput struct{ *pulumi.OutputState }

func (GetClientAuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAuthorization)(nil)).Elem()
}

func (o GetClientAuthorizationOutput) ToGetClientAuthorizationOutput() GetClientAuthorizationOutput {
	return o
}

func (o GetClientAuthorizationOutput) ToGetClientAuthorizationOutputWithContext(ctx context.Context) GetClientAuthorizationOutput {
	return o
}

func (o GetClientAuthorizationOutput) AllowRemoteResourceManagement() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientAuthorization) bool { return v.AllowRemoteResourceManagement }).(pulumi.BoolOutput)
}

func (o GetClientAuthorizationOutput) DecisionStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAuthorization) string { return v.DecisionStrategy }).(pulumi.StringOutput)
}

func (o GetClientAuthorizationOutput) KeepDefaults() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientAuthorization) bool { return v.KeepDefaults }).(pulumi.BoolOutput)
}

func (o GetClientAuthorizationOutput) PolicyEnforcementMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAuthorization) string { return v.PolicyEnforcementMode }).(pulumi.StringOutput)
}

type GetClientAuthorizationArrayOutput struct{ *pulumi.OutputState }

func (GetClientAuthorizationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAuthorization)(nil)).Elem()
}

func (o GetClientAuthorizationArrayOutput) ToGetClientAuthorizationArrayOutput() GetClientAuthorizationArrayOutput {
	return o
}

func (o GetClientAuthorizationArrayOutput) ToGetClientAuthorizationArrayOutputWithContext(ctx context.Context) GetClientAuthorizationArrayOutput {
	return o
}

func (o GetClientAuthorizationArrayOutput) Index(i pulumi.IntInput) GetClientAuthorizationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientAuthorization {
		return vs[0].([]GetClientAuthorization)[vs[1].(int)]
	}).(GetClientAuthorizationOutput)
}

type GetClientServiceAccountUserFederatedIdentity struct {
	IdentityProvider string `pulumi:"identityProvider"`
	UserId           string `pulumi:"userId"`
	UserName         string `pulumi:"userName"`
}

// GetClientServiceAccountUserFederatedIdentityInput is an input type that accepts GetClientServiceAccountUserFederatedIdentityArgs and GetClientServiceAccountUserFederatedIdentityOutput values.
// You can construct a concrete instance of `GetClientServiceAccountUserFederatedIdentityInput` via:
//
//          GetClientServiceAccountUserFederatedIdentityArgs{...}
type GetClientServiceAccountUserFederatedIdentityInput interface {
	pulumi.Input

	ToGetClientServiceAccountUserFederatedIdentityOutput() GetClientServiceAccountUserFederatedIdentityOutput
	ToGetClientServiceAccountUserFederatedIdentityOutputWithContext(context.Context) GetClientServiceAccountUserFederatedIdentityOutput
}

type GetClientServiceAccountUserFederatedIdentityArgs struct {
	IdentityProvider pulumi.StringInput `pulumi:"identityProvider"`
	UserId           pulumi.StringInput `pulumi:"userId"`
	UserName         pulumi.StringInput `pulumi:"userName"`
}

func (GetClientServiceAccountUserFederatedIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientServiceAccountUserFederatedIdentity)(nil)).Elem()
}

func (i GetClientServiceAccountUserFederatedIdentityArgs) ToGetClientServiceAccountUserFederatedIdentityOutput() GetClientServiceAccountUserFederatedIdentityOutput {
	return i.ToGetClientServiceAccountUserFederatedIdentityOutputWithContext(context.Background())
}

func (i GetClientServiceAccountUserFederatedIdentityArgs) ToGetClientServiceAccountUserFederatedIdentityOutputWithContext(ctx context.Context) GetClientServiceAccountUserFederatedIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientServiceAccountUserFederatedIdentityOutput)
}

// GetClientServiceAccountUserFederatedIdentityArrayInput is an input type that accepts GetClientServiceAccountUserFederatedIdentityArray and GetClientServiceAccountUserFederatedIdentityArrayOutput values.
// You can construct a concrete instance of `GetClientServiceAccountUserFederatedIdentityArrayInput` via:
//
//          GetClientServiceAccountUserFederatedIdentityArray{ GetClientServiceAccountUserFederatedIdentityArgs{...} }
type GetClientServiceAccountUserFederatedIdentityArrayInput interface {
	pulumi.Input

	ToGetClientServiceAccountUserFederatedIdentityArrayOutput() GetClientServiceAccountUserFederatedIdentityArrayOutput
	ToGetClientServiceAccountUserFederatedIdentityArrayOutputWithContext(context.Context) GetClientServiceAccountUserFederatedIdentityArrayOutput
}

type GetClientServiceAccountUserFederatedIdentityArray []GetClientServiceAccountUserFederatedIdentityInput

func (GetClientServiceAccountUserFederatedIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientServiceAccountUserFederatedIdentity)(nil)).Elem()
}

func (i GetClientServiceAccountUserFederatedIdentityArray) ToGetClientServiceAccountUserFederatedIdentityArrayOutput() GetClientServiceAccountUserFederatedIdentityArrayOutput {
	return i.ToGetClientServiceAccountUserFederatedIdentityArrayOutputWithContext(context.Background())
}

func (i GetClientServiceAccountUserFederatedIdentityArray) ToGetClientServiceAccountUserFederatedIdentityArrayOutputWithContext(ctx context.Context) GetClientServiceAccountUserFederatedIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientServiceAccountUserFederatedIdentityArrayOutput)
}

type GetClientServiceAccountUserFederatedIdentityOutput struct{ *pulumi.OutputState }

func (GetClientServiceAccountUserFederatedIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientServiceAccountUserFederatedIdentity)(nil)).Elem()
}

func (o GetClientServiceAccountUserFederatedIdentityOutput) ToGetClientServiceAccountUserFederatedIdentityOutput() GetClientServiceAccountUserFederatedIdentityOutput {
	return o
}

func (o GetClientServiceAccountUserFederatedIdentityOutput) ToGetClientServiceAccountUserFederatedIdentityOutputWithContext(ctx context.Context) GetClientServiceAccountUserFederatedIdentityOutput {
	return o
}

func (o GetClientServiceAccountUserFederatedIdentityOutput) IdentityProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientServiceAccountUserFederatedIdentity) string { return v.IdentityProvider }).(pulumi.StringOutput)
}

func (o GetClientServiceAccountUserFederatedIdentityOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientServiceAccountUserFederatedIdentity) string { return v.UserId }).(pulumi.StringOutput)
}

func (o GetClientServiceAccountUserFederatedIdentityOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientServiceAccountUserFederatedIdentity) string { return v.UserName }).(pulumi.StringOutput)
}

type GetClientServiceAccountUserFederatedIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetClientServiceAccountUserFederatedIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientServiceAccountUserFederatedIdentity)(nil)).Elem()
}

func (o GetClientServiceAccountUserFederatedIdentityArrayOutput) ToGetClientServiceAccountUserFederatedIdentityArrayOutput() GetClientServiceAccountUserFederatedIdentityArrayOutput {
	return o
}

func (o GetClientServiceAccountUserFederatedIdentityArrayOutput) ToGetClientServiceAccountUserFederatedIdentityArrayOutputWithContext(ctx context.Context) GetClientServiceAccountUserFederatedIdentityArrayOutput {
	return o
}

func (o GetClientServiceAccountUserFederatedIdentityArrayOutput) Index(i pulumi.IntInput) GetClientServiceAccountUserFederatedIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientServiceAccountUserFederatedIdentity {
		return vs[0].([]GetClientServiceAccountUserFederatedIdentity)[vs[1].(int)]
	}).(GetClientServiceAccountUserFederatedIdentityOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAuthenticationFlowBindingOverridesInput)(nil)).Elem(), ClientAuthenticationFlowBindingOverridesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAuthenticationFlowBindingOverridesPtrInput)(nil)).Elem(), ClientAuthenticationFlowBindingOverridesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAuthorizationInput)(nil)).Elem(), ClientAuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAuthorizationPtrInput)(nil)).Elem(), ClientAuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientGroupPolicyGroupInput)(nil)).Elem(), ClientGroupPolicyGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientGroupPolicyGroupArrayInput)(nil)).Elem(), ClientGroupPolicyGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientPermissionsConfigureScopeInput)(nil)).Elem(), ClientPermissionsConfigureScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientPermissionsConfigureScopePtrInput)(nil)).Elem(), ClientPermissionsConfigureScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientPermissionsManageScopeInput)(nil)).Elem(), ClientPermissionsManageScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientPermissionsManageScopePtrInput)(nil)).Elem(), ClientPermissionsManageScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientPermissionsMapRolesClientScopeScopeInput)(nil)).Elem(), ClientPermissionsMapRolesClientScopeScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientPermissionsMapRolesClientScopeScopePtrInput)(nil)).Elem(), ClientPermissionsMapRolesClientScopeScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientPermissionsMapRolesCompositeScopeInput)(nil)).Elem(), ClientPermissionsMapRolesCompositeScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientPermissionsMapRolesCompositeScopePtrInput)(nil)).Elem(), ClientPermissionsMapRolesCompositeScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientPermissionsMapRolesScopeInput)(nil)).Elem(), ClientPermissionsMapRolesScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientPermissionsMapRolesScopePtrInput)(nil)).Elem(), ClientPermissionsMapRolesScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientPermissionsTokenExchangeScopeInput)(nil)).Elem(), ClientPermissionsTokenExchangeScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientPermissionsTokenExchangeScopePtrInput)(nil)).Elem(), ClientPermissionsTokenExchangeScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientPermissionsViewScopeInput)(nil)).Elem(), ClientPermissionsViewScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientPermissionsViewScopePtrInput)(nil)).Elem(), ClientPermissionsViewScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientRolePolicyRoleInput)(nil)).Elem(), ClientRolePolicyRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientRolePolicyRoleArrayInput)(nil)).Elem(), ClientRolePolicyRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAuthenticationFlowBindingOverrideInput)(nil)).Elem(), GetClientAuthenticationFlowBindingOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAuthenticationFlowBindingOverrideArrayInput)(nil)).Elem(), GetClientAuthenticationFlowBindingOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAuthorizationInput)(nil)).Elem(), GetClientAuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAuthorizationArrayInput)(nil)).Elem(), GetClientAuthorizationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientServiceAccountUserFederatedIdentityInput)(nil)).Elem(), GetClientServiceAccountUserFederatedIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientServiceAccountUserFederatedIdentityArrayInput)(nil)).Elem(), GetClientServiceAccountUserFederatedIdentityArray{})
	pulumi.RegisterOutputType(ClientAuthenticationFlowBindingOverridesOutput{})
	pulumi.RegisterOutputType(ClientAuthenticationFlowBindingOverridesPtrOutput{})
	pulumi.RegisterOutputType(ClientAuthorizationOutput{})
	pulumi.RegisterOutputType(ClientAuthorizationPtrOutput{})
	pulumi.RegisterOutputType(ClientGroupPolicyGroupOutput{})
	pulumi.RegisterOutputType(ClientGroupPolicyGroupArrayOutput{})
	pulumi.RegisterOutputType(ClientPermissionsConfigureScopeOutput{})
	pulumi.RegisterOutputType(ClientPermissionsConfigureScopePtrOutput{})
	pulumi.RegisterOutputType(ClientPermissionsManageScopeOutput{})
	pulumi.RegisterOutputType(ClientPermissionsManageScopePtrOutput{})
	pulumi.RegisterOutputType(ClientPermissionsMapRolesClientScopeScopeOutput{})
	pulumi.RegisterOutputType(ClientPermissionsMapRolesClientScopeScopePtrOutput{})
	pulumi.RegisterOutputType(ClientPermissionsMapRolesCompositeScopeOutput{})
	pulumi.RegisterOutputType(ClientPermissionsMapRolesCompositeScopePtrOutput{})
	pulumi.RegisterOutputType(ClientPermissionsMapRolesScopeOutput{})
	pulumi.RegisterOutputType(ClientPermissionsMapRolesScopePtrOutput{})
	pulumi.RegisterOutputType(ClientPermissionsTokenExchangeScopeOutput{})
	pulumi.RegisterOutputType(ClientPermissionsTokenExchangeScopePtrOutput{})
	pulumi.RegisterOutputType(ClientPermissionsViewScopeOutput{})
	pulumi.RegisterOutputType(ClientPermissionsViewScopePtrOutput{})
	pulumi.RegisterOutputType(ClientRolePolicyRoleOutput{})
	pulumi.RegisterOutputType(ClientRolePolicyRoleArrayOutput{})
	pulumi.RegisterOutputType(GetClientAuthenticationFlowBindingOverrideOutput{})
	pulumi.RegisterOutputType(GetClientAuthenticationFlowBindingOverrideArrayOutput{})
	pulumi.RegisterOutputType(GetClientAuthorizationOutput{})
	pulumi.RegisterOutputType(GetClientAuthorizationArrayOutput{})
	pulumi.RegisterOutputType(GetClientServiceAccountUserFederatedIdentityOutput{})
	pulumi.RegisterOutputType(GetClientServiceAccountUserFederatedIdentityArrayOutput{})
}
