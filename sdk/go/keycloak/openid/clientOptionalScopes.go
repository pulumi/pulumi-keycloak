// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package openid

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ClientOptionalScopes struct {
	pulumi.CustomResourceState

	ClientId       pulumi.StringOutput      `pulumi:"clientId"`
	OptionalScopes pulumi.StringArrayOutput `pulumi:"optionalScopes"`
	RealmId        pulumi.StringOutput      `pulumi:"realmId"`
}

// NewClientOptionalScopes registers a new resource with the given unique name, arguments, and options.
func NewClientOptionalScopes(ctx *pulumi.Context,
	name string, args *ClientOptionalScopesArgs, opts ...pulumi.ResourceOption) (*ClientOptionalScopes, error) {
	if args == nil || args.ClientId == nil {
		return nil, errors.New("missing required argument 'ClientId'")
	}
	if args == nil || args.OptionalScopes == nil {
		return nil, errors.New("missing required argument 'OptionalScopes'")
	}
	if args == nil || args.RealmId == nil {
		return nil, errors.New("missing required argument 'RealmId'")
	}
	if args == nil {
		args = &ClientOptionalScopesArgs{}
	}
	var resource ClientOptionalScopes
	err := ctx.RegisterResource("keycloak:openid/clientOptionalScopes:ClientOptionalScopes", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClientOptionalScopes gets an existing ClientOptionalScopes resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClientOptionalScopes(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClientOptionalScopesState, opts ...pulumi.ResourceOption) (*ClientOptionalScopes, error) {
	var resource ClientOptionalScopes
	err := ctx.ReadResource("keycloak:openid/clientOptionalScopes:ClientOptionalScopes", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClientOptionalScopes resources.
type clientOptionalScopesState struct {
	ClientId       *string  `pulumi:"clientId"`
	OptionalScopes []string `pulumi:"optionalScopes"`
	RealmId        *string  `pulumi:"realmId"`
}

type ClientOptionalScopesState struct {
	ClientId       pulumi.StringPtrInput
	OptionalScopes pulumi.StringArrayInput
	RealmId        pulumi.StringPtrInput
}

func (ClientOptionalScopesState) ElementType() reflect.Type {
	return reflect.TypeOf((*clientOptionalScopesState)(nil)).Elem()
}

type clientOptionalScopesArgs struct {
	ClientId       string   `pulumi:"clientId"`
	OptionalScopes []string `pulumi:"optionalScopes"`
	RealmId        string   `pulumi:"realmId"`
}

// The set of arguments for constructing a ClientOptionalScopes resource.
type ClientOptionalScopesArgs struct {
	ClientId       pulumi.StringInput
	OptionalScopes pulumi.StringArrayInput
	RealmId        pulumi.StringInput
}

func (ClientOptionalScopesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clientOptionalScopesArgs)(nil)).Elem()
}
