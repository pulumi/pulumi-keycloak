// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package authentication

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ExecutionConfig struct {
	pulumi.CustomResourceState

	Alias       pulumi.StringOutput    `pulumi:"alias"`
	Config      pulumi.StringMapOutput `pulumi:"config"`
	ExecutionId pulumi.StringOutput    `pulumi:"executionId"`
	RealmId     pulumi.StringOutput    `pulumi:"realmId"`
}

// NewExecutionConfig registers a new resource with the given unique name, arguments, and options.
func NewExecutionConfig(ctx *pulumi.Context,
	name string, args *ExecutionConfigArgs, opts ...pulumi.ResourceOption) (*ExecutionConfig, error) {
	if args == nil || args.Alias == nil {
		return nil, errors.New("missing required argument 'Alias'")
	}
	if args == nil || args.Config == nil {
		return nil, errors.New("missing required argument 'Config'")
	}
	if args == nil || args.ExecutionId == nil {
		return nil, errors.New("missing required argument 'ExecutionId'")
	}
	if args == nil || args.RealmId == nil {
		return nil, errors.New("missing required argument 'RealmId'")
	}
	if args == nil {
		args = &ExecutionConfigArgs{}
	}
	var resource ExecutionConfig
	err := ctx.RegisterResource("keycloak:authentication/executionConfig:ExecutionConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExecutionConfig gets an existing ExecutionConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExecutionConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExecutionConfigState, opts ...pulumi.ResourceOption) (*ExecutionConfig, error) {
	var resource ExecutionConfig
	err := ctx.ReadResource("keycloak:authentication/executionConfig:ExecutionConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExecutionConfig resources.
type executionConfigState struct {
	Alias       *string           `pulumi:"alias"`
	Config      map[string]string `pulumi:"config"`
	ExecutionId *string           `pulumi:"executionId"`
	RealmId     *string           `pulumi:"realmId"`
}

type ExecutionConfigState struct {
	Alias       pulumi.StringPtrInput
	Config      pulumi.StringMapInput
	ExecutionId pulumi.StringPtrInput
	RealmId     pulumi.StringPtrInput
}

func (ExecutionConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*executionConfigState)(nil)).Elem()
}

type executionConfigArgs struct {
	Alias       string            `pulumi:"alias"`
	Config      map[string]string `pulumi:"config"`
	ExecutionId string            `pulumi:"executionId"`
	RealmId     string            `pulumi:"realmId"`
}

// The set of arguments for constructing a ExecutionConfig resource.
type ExecutionConfigArgs struct {
	Alias       pulumi.StringInput
	Config      pulumi.StringMapInput
	ExecutionId pulumi.StringInput
	RealmId     pulumi.StringInput
}

func (ExecutionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*executionConfigArgs)(nil)).Elem()
}
