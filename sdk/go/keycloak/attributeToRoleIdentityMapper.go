// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package keycloak

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type AttributeToRoleIdentityMapper struct {
	pulumi.CustomResourceState

	// Attribute Friendly Name
	AttributeFriendlyName pulumi.StringPtrOutput `pulumi:"attributeFriendlyName"`
	// Attribute Name
	AttributeName pulumi.StringPtrOutput `pulumi:"attributeName"`
	// Attribute Value
	AttributeValue pulumi.StringPtrOutput `pulumi:"attributeValue"`
	// OIDC Claim Name
	ClaimName pulumi.StringPtrOutput `pulumi:"claimName"`
	// OIDC Claim Value
	ClaimValue pulumi.StringPtrOutput `pulumi:"claimValue"`
	// IDP Alias
	IdentityProviderAlias pulumi.StringOutput `pulumi:"identityProviderAlias"`
	// IDP Mapper Name
	Name pulumi.StringOutput `pulumi:"name"`
	// Realm Name
	Realm pulumi.StringOutput `pulumi:"realm"`
	// Role Name
	Role pulumi.StringOutput `pulumi:"role"`
}

// NewAttributeToRoleIdentityMapper registers a new resource with the given unique name, arguments, and options.
func NewAttributeToRoleIdentityMapper(ctx *pulumi.Context,
	name string, args *AttributeToRoleIdentityMapperArgs, opts ...pulumi.ResourceOption) (*AttributeToRoleIdentityMapper, error) {
	if args == nil || args.IdentityProviderAlias == nil {
		return nil, errors.New("missing required argument 'IdentityProviderAlias'")
	}
	if args == nil || args.Realm == nil {
		return nil, errors.New("missing required argument 'Realm'")
	}
	if args == nil || args.Role == nil {
		return nil, errors.New("missing required argument 'Role'")
	}
	if args == nil {
		args = &AttributeToRoleIdentityMapperArgs{}
	}
	var resource AttributeToRoleIdentityMapper
	err := ctx.RegisterResource("keycloak:index/attributeToRoleIdentityMapper:AttributeToRoleIdentityMapper", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAttributeToRoleIdentityMapper gets an existing AttributeToRoleIdentityMapper resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAttributeToRoleIdentityMapper(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AttributeToRoleIdentityMapperState, opts ...pulumi.ResourceOption) (*AttributeToRoleIdentityMapper, error) {
	var resource AttributeToRoleIdentityMapper
	err := ctx.ReadResource("keycloak:index/attributeToRoleIdentityMapper:AttributeToRoleIdentityMapper", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AttributeToRoleIdentityMapper resources.
type attributeToRoleIdentityMapperState struct {
	// Attribute Friendly Name
	AttributeFriendlyName *string `pulumi:"attributeFriendlyName"`
	// Attribute Name
	AttributeName *string `pulumi:"attributeName"`
	// Attribute Value
	AttributeValue *string `pulumi:"attributeValue"`
	// OIDC Claim Name
	ClaimName *string `pulumi:"claimName"`
	// OIDC Claim Value
	ClaimValue *string `pulumi:"claimValue"`
	// IDP Alias
	IdentityProviderAlias *string `pulumi:"identityProviderAlias"`
	// IDP Mapper Name
	Name *string `pulumi:"name"`
	// Realm Name
	Realm *string `pulumi:"realm"`
	// Role Name
	Role *string `pulumi:"role"`
}

type AttributeToRoleIdentityMapperState struct {
	// Attribute Friendly Name
	AttributeFriendlyName pulumi.StringPtrInput
	// Attribute Name
	AttributeName pulumi.StringPtrInput
	// Attribute Value
	AttributeValue pulumi.StringPtrInput
	// OIDC Claim Name
	ClaimName pulumi.StringPtrInput
	// OIDC Claim Value
	ClaimValue pulumi.StringPtrInput
	// IDP Alias
	IdentityProviderAlias pulumi.StringPtrInput
	// IDP Mapper Name
	Name pulumi.StringPtrInput
	// Realm Name
	Realm pulumi.StringPtrInput
	// Role Name
	Role pulumi.StringPtrInput
}

func (AttributeToRoleIdentityMapperState) ElementType() reflect.Type {
	return reflect.TypeOf((*attributeToRoleIdentityMapperState)(nil)).Elem()
}

type attributeToRoleIdentityMapperArgs struct {
	// Attribute Friendly Name
	AttributeFriendlyName *string `pulumi:"attributeFriendlyName"`
	// Attribute Name
	AttributeName *string `pulumi:"attributeName"`
	// Attribute Value
	AttributeValue *string `pulumi:"attributeValue"`
	// OIDC Claim Name
	ClaimName *string `pulumi:"claimName"`
	// OIDC Claim Value
	ClaimValue *string `pulumi:"claimValue"`
	// IDP Alias
	IdentityProviderAlias string `pulumi:"identityProviderAlias"`
	// IDP Mapper Name
	Name *string `pulumi:"name"`
	// Realm Name
	Realm string `pulumi:"realm"`
	// Role Name
	Role string `pulumi:"role"`
}

// The set of arguments for constructing a AttributeToRoleIdentityMapper resource.
type AttributeToRoleIdentityMapperArgs struct {
	// Attribute Friendly Name
	AttributeFriendlyName pulumi.StringPtrInput
	// Attribute Name
	AttributeName pulumi.StringPtrInput
	// Attribute Value
	AttributeValue pulumi.StringPtrInput
	// OIDC Claim Name
	ClaimName pulumi.StringPtrInput
	// OIDC Claim Value
	ClaimValue pulumi.StringPtrInput
	// IDP Alias
	IdentityProviderAlias pulumi.StringInput
	// IDP Mapper Name
	Name pulumi.StringPtrInput
	// Realm Name
	Realm pulumi.StringInput
	// Role Name
	Role pulumi.StringInput
}

func (AttributeToRoleIdentityMapperArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*attributeToRoleIdentityMapperArgs)(nil)).Elem()
}
