// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package keycloak

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-keycloak/sdk/v6/go/keycloak/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can be used to fetch properties of a Keycloak organization for
// usage with other resources.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-keycloak/sdk/v6/go/keycloak"
//	"github.com/pulumi/pulumi-keycloak/sdk/v6/go/keycloak/oidc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			realm, err := keycloak.LookupRealm(ctx, &keycloak.LookupRealmArgs{
//				Realm: "my-realm",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			organization, err := keycloak.LookupOrganization(ctx, &keycloak.LookupOrganizationArgs{
//				Realm: realm.Id,
//				Name:  "my-org",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			// use the data source
//			_, err = oidc.NewIdentityProvider(ctx, "realm_identity_provider", &oidc.IdentityProviderArgs{
//				Realm:            pulumi.String(realm.Id),
//				Alias:            pulumi.String("my-idp"),
//				AuthorizationUrl: pulumi.String("https://authorizationurl.com"),
//				ClientId:         pulumi.String("clientID"),
//				ClientSecret:     pulumi.String("clientSecret"),
//				TokenUrl:         pulumi.String("https://tokenurl.com"),
//				OrganizationId:   pulumi.String(organization.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupOrganization(ctx *pulumi.Context, args *LookupOrganizationArgs, opts ...pulumi.InvokeOption) (*LookupOrganizationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupOrganizationResult
	err := ctx.Invoke("keycloak:index/getOrganization:getOrganization", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOrganization.
type LookupOrganizationArgs struct {
	// The organization name.
	Name string `pulumi:"name"`
	// The name of the realm this organization exists within.
	Realm string `pulumi:"realm"`
}

// A collection of values returned by getOrganization.
type LookupOrganizationResult struct {
	Alias       string                  `pulumi:"alias"`
	Attributes  map[string]string       `pulumi:"attributes"`
	Description string                  `pulumi:"description"`
	Domains     []GetOrganizationDomain `pulumi:"domains"`
	Enabled     bool                    `pulumi:"enabled"`
	// The provider-assigned unique ID for this managed resource.
	Id          string `pulumi:"id"`
	Name        string `pulumi:"name"`
	Realm       string `pulumi:"realm"`
	RedirectUrl string `pulumi:"redirectUrl"`
}

func LookupOrganizationOutput(ctx *pulumi.Context, args LookupOrganizationOutputArgs, opts ...pulumi.InvokeOption) LookupOrganizationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupOrganizationResultOutput, error) {
			args := v.(LookupOrganizationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("keycloak:index/getOrganization:getOrganization", args, LookupOrganizationResultOutput{}, options).(LookupOrganizationResultOutput), nil
		}).(LookupOrganizationResultOutput)
}

// A collection of arguments for invoking getOrganization.
type LookupOrganizationOutputArgs struct {
	// The organization name.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the realm this organization exists within.
	Realm pulumi.StringInput `pulumi:"realm"`
}

func (LookupOrganizationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOrganizationArgs)(nil)).Elem()
}

// A collection of values returned by getOrganization.
type LookupOrganizationResultOutput struct{ *pulumi.OutputState }

func (LookupOrganizationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOrganizationResult)(nil)).Elem()
}

func (o LookupOrganizationResultOutput) ToLookupOrganizationResultOutput() LookupOrganizationResultOutput {
	return o
}

func (o LookupOrganizationResultOutput) ToLookupOrganizationResultOutputWithContext(ctx context.Context) LookupOrganizationResultOutput {
	return o
}

func (o LookupOrganizationResultOutput) Alias() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationResult) string { return v.Alias }).(pulumi.StringOutput)
}

func (o LookupOrganizationResultOutput) Attributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupOrganizationResult) map[string]string { return v.Attributes }).(pulumi.StringMapOutput)
}

func (o LookupOrganizationResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupOrganizationResultOutput) Domains() GetOrganizationDomainArrayOutput {
	return o.ApplyT(func(v LookupOrganizationResult) []GetOrganizationDomain { return v.Domains }).(GetOrganizationDomainArrayOutput)
}

func (o LookupOrganizationResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOrganizationResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupOrganizationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupOrganizationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupOrganizationResultOutput) Realm() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationResult) string { return v.Realm }).(pulumi.StringOutput)
}

func (o LookupOrganizationResultOutput) RedirectUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationResult) string { return v.RedirectUrl }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupOrganizationResultOutput{})
}
