// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package keycloak

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-keycloak/sdk/v6/go/keycloak/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Allows for creating and managing Realms within Keycloak.
//
// A realm manages a logical collection of users, credentials, roles, and groups. Users log in to realms and can be federated
// from multiple sources.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-keycloak/sdk/v6/go/keycloak"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := keycloak.NewRealm(ctx, "realm", &keycloak.RealmArgs{
//				Realm:              pulumi.String("my-realm"),
//				Enabled:            pulumi.Bool(true),
//				DisplayName:        pulumi.String("my realm"),
//				DisplayNameHtml:    pulumi.String("<b>my realm</b>"),
//				LoginTheme:         pulumi.String("base"),
//				AccessCodeLifespan: pulumi.String("1h"),
//				SslRequired:        pulumi.String("external"),
//				PasswordPolicy:     pulumi.String("upperCase(1) and length(8) and forceExpiredPasswordChange(365) and notUsername"),
//				Attributes: pulumi.StringMap{
//					"mycustomAttribute": pulumi.String("myCustomValue"),
//				},
//				SmtpServer: &keycloak.RealmSmtpServerArgs{
//					Host: pulumi.String("smtp.example.com"),
//					From: pulumi.String("example@example.com"),
//					Auth: &keycloak.RealmSmtpServerAuthArgs{
//						Username: pulumi.String("tom"),
//						Password: pulumi.String("password"),
//					},
//				},
//				Internationalization: &keycloak.RealmInternationalizationArgs{
//					SupportedLocales: pulumi.StringArray{
//						pulumi.String("en"),
//						pulumi.String("de"),
//						pulumi.String("es"),
//					},
//					DefaultLocale: pulumi.String("en"),
//				},
//				SecurityDefenses: &keycloak.RealmSecurityDefensesArgs{
//					Headers: &keycloak.RealmSecurityDefensesHeadersArgs{
//						XFrameOptions:                   pulumi.String("DENY"),
//						ContentSecurityPolicy:           pulumi.String("frame-src 'self'; frame-ancestors 'self'; object-src 'none';"),
//						ContentSecurityPolicyReportOnly: pulumi.String(""),
//						XContentTypeOptions:             pulumi.String("nosniff"),
//						XRobotsTag:                      pulumi.String("none"),
//						XXssProtection:                  pulumi.String("1; mode=block"),
//						StrictTransportSecurity:         pulumi.String("max-age=31536000; includeSubDomains"),
//					},
//					BruteForceDetection: &keycloak.RealmSecurityDefensesBruteForceDetectionArgs{
//						PermanentLockout:             pulumi.Bool(false),
//						MaxLoginFailures:             pulumi.Int(30),
//						WaitIncrementSeconds:         pulumi.Int(60),
//						QuickLoginCheckMilliSeconds:  pulumi.Int(1000),
//						MinimumQuickLoginWaitSeconds: pulumi.Int(60),
//						MaxFailureWaitSeconds:        pulumi.Int(900),
//						FailureResetTimeSeconds:      pulumi.Int(43200),
//					},
//				},
//				WebAuthnPolicy: &keycloak.RealmWebAuthnPolicyArgs{
//					RelyingPartyEntityName: pulumi.String("Example"),
//					RelyingPartyId:         pulumi.String("keycloak.example.com"),
//					SignatureAlgorithms: pulumi.StringArray{
//						pulumi.String("ES256"),
//						pulumi.String("RS256"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Default Client Scopes
//
// - `defaultDefaultClientScopes` - (Optional) A list of default `default client scopes` to be used for client definitions. Defaults to `[]` or keycloak's built-in default `default client-scopes`. For an alternative, please refer to the dedicated resource `RealmDefaultClientScopes`.
// - `defaultOptionalClientScopes` - (Optional) A list of default `optional client scopes` to be used for client definitions. Defaults to `[]` or keycloak's built-in default `optional client-scopes`. For an alternative, please refer to the dedicated resource `RealmOptionalClientScopes`.
//
// ## Import
//
// Realms can be imported using their name.
//
// Example:
//
// bash
//
// ```sh
// $ pulumi import keycloak:index/realm:Realm realm my-realm
// ```
type Realm struct {
	pulumi.CustomResourceState

	AccessCodeLifespan                  pulumi.StringOutput    `pulumi:"accessCodeLifespan"`
	AccessCodeLifespanLogin             pulumi.StringOutput    `pulumi:"accessCodeLifespanLogin"`
	AccessCodeLifespanUserAction        pulumi.StringOutput    `pulumi:"accessCodeLifespanUserAction"`
	AccessTokenLifespan                 pulumi.StringOutput    `pulumi:"accessTokenLifespan"`
	AccessTokenLifespanForImplicitFlow  pulumi.StringOutput    `pulumi:"accessTokenLifespanForImplicitFlow"`
	AccountTheme                        pulumi.StringPtrOutput `pulumi:"accountTheme"`
	ActionTokenGeneratedByAdminLifespan pulumi.StringOutput    `pulumi:"actionTokenGeneratedByAdminLifespan"`
	ActionTokenGeneratedByUserLifespan  pulumi.StringOutput    `pulumi:"actionTokenGeneratedByUserLifespan"`
	AdminTheme                          pulumi.StringPtrOutput `pulumi:"adminTheme"`
	// A map of custom attributes to add to the realm.
	Attributes pulumi.StringMapOutput `pulumi:"attributes"`
	// Which flow should be used for BrowserFlow
	BrowserFlow pulumi.StringOutput `pulumi:"browserFlow"`
	// Which flow should be used for ClientAuthenticationFlow
	ClientAuthenticationFlow    pulumi.StringOutput      `pulumi:"clientAuthenticationFlow"`
	ClientSessionIdleTimeout    pulumi.StringOutput      `pulumi:"clientSessionIdleTimeout"`
	ClientSessionMaxLifespan    pulumi.StringOutput      `pulumi:"clientSessionMaxLifespan"`
	DefaultDefaultClientScopes  pulumi.StringArrayOutput `pulumi:"defaultDefaultClientScopes"`
	DefaultOptionalClientScopes pulumi.StringArrayOutput `pulumi:"defaultOptionalClientScopes"`
	DefaultSignatureAlgorithm   pulumi.StringPtrOutput   `pulumi:"defaultSignatureAlgorithm"`
	// Which flow should be used for DirectGrantFlow
	DirectGrantFlow pulumi.StringOutput `pulumi:"directGrantFlow"`
	// The display name for the realm that is shown when logging in to the admin console.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// The display name for the realm that is rendered as HTML on the screen when logging in to the admin console.
	DisplayNameHtml pulumi.StringPtrOutput `pulumi:"displayNameHtml"`
	// Which flow should be used for DockerAuthenticationFlow
	DockerAuthenticationFlow pulumi.StringOutput    `pulumi:"dockerAuthenticationFlow"`
	DuplicateEmailsAllowed   pulumi.BoolOutput      `pulumi:"duplicateEmailsAllowed"`
	EditUsernameAllowed      pulumi.BoolOutput      `pulumi:"editUsernameAllowed"`
	EmailTheme               pulumi.StringPtrOutput `pulumi:"emailTheme"`
	// When `false`, users and clients will not be able to access this realm. Defaults to `true`.
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Which flow should be used for FirstBrokerLoginFlow
	FirstBrokerLoginFlow pulumi.StringOutput `pulumi:"firstBrokerLoginFlow"`
	// When specified, this will be used as the realm's internal ID within Keycloak. When not specified, the realm's internal ID will be set to the realm's name.
	InternalId                       pulumi.StringOutput                `pulumi:"internalId"`
	Internationalization             RealmInternationalizationPtrOutput `pulumi:"internationalization"`
	LoginTheme                       pulumi.StringPtrOutput             `pulumi:"loginTheme"`
	LoginWithEmailAllowed            pulumi.BoolOutput                  `pulumi:"loginWithEmailAllowed"`
	Oauth2DeviceCodeLifespan         pulumi.StringOutput                `pulumi:"oauth2DeviceCodeLifespan"`
	Oauth2DevicePollingInterval      pulumi.IntOutput                   `pulumi:"oauth2DevicePollingInterval"`
	OfflineSessionIdleTimeout        pulumi.StringOutput                `pulumi:"offlineSessionIdleTimeout"`
	OfflineSessionMaxLifespan        pulumi.StringOutput                `pulumi:"offlineSessionMaxLifespan"`
	OfflineSessionMaxLifespanEnabled pulumi.BoolPtrOutput               `pulumi:"offlineSessionMaxLifespanEnabled"`
	// When `true`, organization support is enabled. Defaults to `false`.
	OrganizationsEnabled pulumi.BoolPtrOutput `pulumi:"organizationsEnabled"`
	OtpPolicy            RealmOtpPolicyOutput `pulumi:"otpPolicy"`
	// String that represents the passwordPolicies that are in place. Each policy is separated with " and ". Supported policies
	// can be found in the server-info providers page. example: "upperCase(1) and length(8) and forceExpiredPasswordChange(365)
	// and notUsername(undefined)"
	PasswordPolicy pulumi.StringPtrOutput `pulumi:"passwordPolicy"`
	// The name of the realm. This is unique across Keycloak. This will also be used as the realm's internal ID within Keycloak.
	Realm                       pulumi.StringOutput `pulumi:"realm"`
	RefreshTokenMaxReuse        pulumi.IntPtrOutput `pulumi:"refreshTokenMaxReuse"`
	RegistrationAllowed         pulumi.BoolOutput   `pulumi:"registrationAllowed"`
	RegistrationEmailAsUsername pulumi.BoolOutput   `pulumi:"registrationEmailAsUsername"`
	// Which flow should be used for RegistrationFlow
	RegistrationFlow pulumi.StringOutput `pulumi:"registrationFlow"`
	RememberMe       pulumi.BoolOutput   `pulumi:"rememberMe"`
	// Which flow should be used for ResetCredentialsFlow
	ResetCredentialsFlow pulumi.StringOutput            `pulumi:"resetCredentialsFlow"`
	ResetPasswordAllowed pulumi.BoolOutput              `pulumi:"resetPasswordAllowed"`
	RevokeRefreshToken   pulumi.BoolPtrOutput           `pulumi:"revokeRefreshToken"`
	SecurityDefenses     RealmSecurityDefensesPtrOutput `pulumi:"securityDefenses"`
	SmtpServer           RealmSmtpServerPtrOutput       `pulumi:"smtpServer"`
	// SSL Required: Values can be 'none', 'external' or 'all'.
	SslRequired                     pulumi.StringPtrOutput `pulumi:"sslRequired"`
	SsoSessionIdleTimeout           pulumi.StringOutput    `pulumi:"ssoSessionIdleTimeout"`
	SsoSessionIdleTimeoutRememberMe pulumi.StringOutput    `pulumi:"ssoSessionIdleTimeoutRememberMe"`
	SsoSessionMaxLifespan           pulumi.StringOutput    `pulumi:"ssoSessionMaxLifespan"`
	SsoSessionMaxLifespanRememberMe pulumi.StringOutput    `pulumi:"ssoSessionMaxLifespanRememberMe"`
	// When `true`, users are allowed to manage their own resources. Defaults to `false`.
	UserManagedAccess          pulumi.BoolPtrOutput                  `pulumi:"userManagedAccess"`
	VerifyEmail                pulumi.BoolOutput                     `pulumi:"verifyEmail"`
	WebAuthnPasswordlessPolicy RealmWebAuthnPasswordlessPolicyOutput `pulumi:"webAuthnPasswordlessPolicy"`
	WebAuthnPolicy             RealmWebAuthnPolicyOutput             `pulumi:"webAuthnPolicy"`
}

// NewRealm registers a new resource with the given unique name, arguments, and options.
func NewRealm(ctx *pulumi.Context,
	name string, args *RealmArgs, opts ...pulumi.ResourceOption) (*Realm, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Realm == nil {
		return nil, errors.New("invalid value for required argument 'Realm'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Realm
	err := ctx.RegisterResource("keycloak:index/realm:Realm", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRealm gets an existing Realm resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRealm(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RealmState, opts ...pulumi.ResourceOption) (*Realm, error) {
	var resource Realm
	err := ctx.ReadResource("keycloak:index/realm:Realm", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Realm resources.
type realmState struct {
	AccessCodeLifespan                  *string `pulumi:"accessCodeLifespan"`
	AccessCodeLifespanLogin             *string `pulumi:"accessCodeLifespanLogin"`
	AccessCodeLifespanUserAction        *string `pulumi:"accessCodeLifespanUserAction"`
	AccessTokenLifespan                 *string `pulumi:"accessTokenLifespan"`
	AccessTokenLifespanForImplicitFlow  *string `pulumi:"accessTokenLifespanForImplicitFlow"`
	AccountTheme                        *string `pulumi:"accountTheme"`
	ActionTokenGeneratedByAdminLifespan *string `pulumi:"actionTokenGeneratedByAdminLifespan"`
	ActionTokenGeneratedByUserLifespan  *string `pulumi:"actionTokenGeneratedByUserLifespan"`
	AdminTheme                          *string `pulumi:"adminTheme"`
	// A map of custom attributes to add to the realm.
	Attributes map[string]string `pulumi:"attributes"`
	// Which flow should be used for BrowserFlow
	BrowserFlow *string `pulumi:"browserFlow"`
	// Which flow should be used for ClientAuthenticationFlow
	ClientAuthenticationFlow    *string  `pulumi:"clientAuthenticationFlow"`
	ClientSessionIdleTimeout    *string  `pulumi:"clientSessionIdleTimeout"`
	ClientSessionMaxLifespan    *string  `pulumi:"clientSessionMaxLifespan"`
	DefaultDefaultClientScopes  []string `pulumi:"defaultDefaultClientScopes"`
	DefaultOptionalClientScopes []string `pulumi:"defaultOptionalClientScopes"`
	DefaultSignatureAlgorithm   *string  `pulumi:"defaultSignatureAlgorithm"`
	// Which flow should be used for DirectGrantFlow
	DirectGrantFlow *string `pulumi:"directGrantFlow"`
	// The display name for the realm that is shown when logging in to the admin console.
	DisplayName *string `pulumi:"displayName"`
	// The display name for the realm that is rendered as HTML on the screen when logging in to the admin console.
	DisplayNameHtml *string `pulumi:"displayNameHtml"`
	// Which flow should be used for DockerAuthenticationFlow
	DockerAuthenticationFlow *string `pulumi:"dockerAuthenticationFlow"`
	DuplicateEmailsAllowed   *bool   `pulumi:"duplicateEmailsAllowed"`
	EditUsernameAllowed      *bool   `pulumi:"editUsernameAllowed"`
	EmailTheme               *string `pulumi:"emailTheme"`
	// When `false`, users and clients will not be able to access this realm. Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// Which flow should be used for FirstBrokerLoginFlow
	FirstBrokerLoginFlow *string `pulumi:"firstBrokerLoginFlow"`
	// When specified, this will be used as the realm's internal ID within Keycloak. When not specified, the realm's internal ID will be set to the realm's name.
	InternalId                       *string                    `pulumi:"internalId"`
	Internationalization             *RealmInternationalization `pulumi:"internationalization"`
	LoginTheme                       *string                    `pulumi:"loginTheme"`
	LoginWithEmailAllowed            *bool                      `pulumi:"loginWithEmailAllowed"`
	Oauth2DeviceCodeLifespan         *string                    `pulumi:"oauth2DeviceCodeLifespan"`
	Oauth2DevicePollingInterval      *int                       `pulumi:"oauth2DevicePollingInterval"`
	OfflineSessionIdleTimeout        *string                    `pulumi:"offlineSessionIdleTimeout"`
	OfflineSessionMaxLifespan        *string                    `pulumi:"offlineSessionMaxLifespan"`
	OfflineSessionMaxLifespanEnabled *bool                      `pulumi:"offlineSessionMaxLifespanEnabled"`
	// When `true`, organization support is enabled. Defaults to `false`.
	OrganizationsEnabled *bool           `pulumi:"organizationsEnabled"`
	OtpPolicy            *RealmOtpPolicy `pulumi:"otpPolicy"`
	// String that represents the passwordPolicies that are in place. Each policy is separated with " and ". Supported policies
	// can be found in the server-info providers page. example: "upperCase(1) and length(8) and forceExpiredPasswordChange(365)
	// and notUsername(undefined)"
	PasswordPolicy *string `pulumi:"passwordPolicy"`
	// The name of the realm. This is unique across Keycloak. This will also be used as the realm's internal ID within Keycloak.
	Realm                       *string `pulumi:"realm"`
	RefreshTokenMaxReuse        *int    `pulumi:"refreshTokenMaxReuse"`
	RegistrationAllowed         *bool   `pulumi:"registrationAllowed"`
	RegistrationEmailAsUsername *bool   `pulumi:"registrationEmailAsUsername"`
	// Which flow should be used for RegistrationFlow
	RegistrationFlow *string `pulumi:"registrationFlow"`
	RememberMe       *bool   `pulumi:"rememberMe"`
	// Which flow should be used for ResetCredentialsFlow
	ResetCredentialsFlow *string                `pulumi:"resetCredentialsFlow"`
	ResetPasswordAllowed *bool                  `pulumi:"resetPasswordAllowed"`
	RevokeRefreshToken   *bool                  `pulumi:"revokeRefreshToken"`
	SecurityDefenses     *RealmSecurityDefenses `pulumi:"securityDefenses"`
	SmtpServer           *RealmSmtpServer       `pulumi:"smtpServer"`
	// SSL Required: Values can be 'none', 'external' or 'all'.
	SslRequired                     *string `pulumi:"sslRequired"`
	SsoSessionIdleTimeout           *string `pulumi:"ssoSessionIdleTimeout"`
	SsoSessionIdleTimeoutRememberMe *string `pulumi:"ssoSessionIdleTimeoutRememberMe"`
	SsoSessionMaxLifespan           *string `pulumi:"ssoSessionMaxLifespan"`
	SsoSessionMaxLifespanRememberMe *string `pulumi:"ssoSessionMaxLifespanRememberMe"`
	// When `true`, users are allowed to manage their own resources. Defaults to `false`.
	UserManagedAccess          *bool                            `pulumi:"userManagedAccess"`
	VerifyEmail                *bool                            `pulumi:"verifyEmail"`
	WebAuthnPasswordlessPolicy *RealmWebAuthnPasswordlessPolicy `pulumi:"webAuthnPasswordlessPolicy"`
	WebAuthnPolicy             *RealmWebAuthnPolicy             `pulumi:"webAuthnPolicy"`
}

type RealmState struct {
	AccessCodeLifespan                  pulumi.StringPtrInput
	AccessCodeLifespanLogin             pulumi.StringPtrInput
	AccessCodeLifespanUserAction        pulumi.StringPtrInput
	AccessTokenLifespan                 pulumi.StringPtrInput
	AccessTokenLifespanForImplicitFlow  pulumi.StringPtrInput
	AccountTheme                        pulumi.StringPtrInput
	ActionTokenGeneratedByAdminLifespan pulumi.StringPtrInput
	ActionTokenGeneratedByUserLifespan  pulumi.StringPtrInput
	AdminTheme                          pulumi.StringPtrInput
	// A map of custom attributes to add to the realm.
	Attributes pulumi.StringMapInput
	// Which flow should be used for BrowserFlow
	BrowserFlow pulumi.StringPtrInput
	// Which flow should be used for ClientAuthenticationFlow
	ClientAuthenticationFlow    pulumi.StringPtrInput
	ClientSessionIdleTimeout    pulumi.StringPtrInput
	ClientSessionMaxLifespan    pulumi.StringPtrInput
	DefaultDefaultClientScopes  pulumi.StringArrayInput
	DefaultOptionalClientScopes pulumi.StringArrayInput
	DefaultSignatureAlgorithm   pulumi.StringPtrInput
	// Which flow should be used for DirectGrantFlow
	DirectGrantFlow pulumi.StringPtrInput
	// The display name for the realm that is shown when logging in to the admin console.
	DisplayName pulumi.StringPtrInput
	// The display name for the realm that is rendered as HTML on the screen when logging in to the admin console.
	DisplayNameHtml pulumi.StringPtrInput
	// Which flow should be used for DockerAuthenticationFlow
	DockerAuthenticationFlow pulumi.StringPtrInput
	DuplicateEmailsAllowed   pulumi.BoolPtrInput
	EditUsernameAllowed      pulumi.BoolPtrInput
	EmailTheme               pulumi.StringPtrInput
	// When `false`, users and clients will not be able to access this realm. Defaults to `true`.
	Enabled pulumi.BoolPtrInput
	// Which flow should be used for FirstBrokerLoginFlow
	FirstBrokerLoginFlow pulumi.StringPtrInput
	// When specified, this will be used as the realm's internal ID within Keycloak. When not specified, the realm's internal ID will be set to the realm's name.
	InternalId                       pulumi.StringPtrInput
	Internationalization             RealmInternationalizationPtrInput
	LoginTheme                       pulumi.StringPtrInput
	LoginWithEmailAllowed            pulumi.BoolPtrInput
	Oauth2DeviceCodeLifespan         pulumi.StringPtrInput
	Oauth2DevicePollingInterval      pulumi.IntPtrInput
	OfflineSessionIdleTimeout        pulumi.StringPtrInput
	OfflineSessionMaxLifespan        pulumi.StringPtrInput
	OfflineSessionMaxLifespanEnabled pulumi.BoolPtrInput
	// When `true`, organization support is enabled. Defaults to `false`.
	OrganizationsEnabled pulumi.BoolPtrInput
	OtpPolicy            RealmOtpPolicyPtrInput
	// String that represents the passwordPolicies that are in place. Each policy is separated with " and ". Supported policies
	// can be found in the server-info providers page. example: "upperCase(1) and length(8) and forceExpiredPasswordChange(365)
	// and notUsername(undefined)"
	PasswordPolicy pulumi.StringPtrInput
	// The name of the realm. This is unique across Keycloak. This will also be used as the realm's internal ID within Keycloak.
	Realm                       pulumi.StringPtrInput
	RefreshTokenMaxReuse        pulumi.IntPtrInput
	RegistrationAllowed         pulumi.BoolPtrInput
	RegistrationEmailAsUsername pulumi.BoolPtrInput
	// Which flow should be used for RegistrationFlow
	RegistrationFlow pulumi.StringPtrInput
	RememberMe       pulumi.BoolPtrInput
	// Which flow should be used for ResetCredentialsFlow
	ResetCredentialsFlow pulumi.StringPtrInput
	ResetPasswordAllowed pulumi.BoolPtrInput
	RevokeRefreshToken   pulumi.BoolPtrInput
	SecurityDefenses     RealmSecurityDefensesPtrInput
	SmtpServer           RealmSmtpServerPtrInput
	// SSL Required: Values can be 'none', 'external' or 'all'.
	SslRequired                     pulumi.StringPtrInput
	SsoSessionIdleTimeout           pulumi.StringPtrInput
	SsoSessionIdleTimeoutRememberMe pulumi.StringPtrInput
	SsoSessionMaxLifespan           pulumi.StringPtrInput
	SsoSessionMaxLifespanRememberMe pulumi.StringPtrInput
	// When `true`, users are allowed to manage their own resources. Defaults to `false`.
	UserManagedAccess          pulumi.BoolPtrInput
	VerifyEmail                pulumi.BoolPtrInput
	WebAuthnPasswordlessPolicy RealmWebAuthnPasswordlessPolicyPtrInput
	WebAuthnPolicy             RealmWebAuthnPolicyPtrInput
}

func (RealmState) ElementType() reflect.Type {
	return reflect.TypeOf((*realmState)(nil)).Elem()
}

type realmArgs struct {
	AccessCodeLifespan                  *string `pulumi:"accessCodeLifespan"`
	AccessCodeLifespanLogin             *string `pulumi:"accessCodeLifespanLogin"`
	AccessCodeLifespanUserAction        *string `pulumi:"accessCodeLifespanUserAction"`
	AccessTokenLifespan                 *string `pulumi:"accessTokenLifespan"`
	AccessTokenLifespanForImplicitFlow  *string `pulumi:"accessTokenLifespanForImplicitFlow"`
	AccountTheme                        *string `pulumi:"accountTheme"`
	ActionTokenGeneratedByAdminLifespan *string `pulumi:"actionTokenGeneratedByAdminLifespan"`
	ActionTokenGeneratedByUserLifespan  *string `pulumi:"actionTokenGeneratedByUserLifespan"`
	AdminTheme                          *string `pulumi:"adminTheme"`
	// A map of custom attributes to add to the realm.
	Attributes map[string]string `pulumi:"attributes"`
	// Which flow should be used for BrowserFlow
	BrowserFlow *string `pulumi:"browserFlow"`
	// Which flow should be used for ClientAuthenticationFlow
	ClientAuthenticationFlow    *string  `pulumi:"clientAuthenticationFlow"`
	ClientSessionIdleTimeout    *string  `pulumi:"clientSessionIdleTimeout"`
	ClientSessionMaxLifespan    *string  `pulumi:"clientSessionMaxLifespan"`
	DefaultDefaultClientScopes  []string `pulumi:"defaultDefaultClientScopes"`
	DefaultOptionalClientScopes []string `pulumi:"defaultOptionalClientScopes"`
	DefaultSignatureAlgorithm   *string  `pulumi:"defaultSignatureAlgorithm"`
	// Which flow should be used for DirectGrantFlow
	DirectGrantFlow *string `pulumi:"directGrantFlow"`
	// The display name for the realm that is shown when logging in to the admin console.
	DisplayName *string `pulumi:"displayName"`
	// The display name for the realm that is rendered as HTML on the screen when logging in to the admin console.
	DisplayNameHtml *string `pulumi:"displayNameHtml"`
	// Which flow should be used for DockerAuthenticationFlow
	DockerAuthenticationFlow *string `pulumi:"dockerAuthenticationFlow"`
	DuplicateEmailsAllowed   *bool   `pulumi:"duplicateEmailsAllowed"`
	EditUsernameAllowed      *bool   `pulumi:"editUsernameAllowed"`
	EmailTheme               *string `pulumi:"emailTheme"`
	// When `false`, users and clients will not be able to access this realm. Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// Which flow should be used for FirstBrokerLoginFlow
	FirstBrokerLoginFlow *string `pulumi:"firstBrokerLoginFlow"`
	// When specified, this will be used as the realm's internal ID within Keycloak. When not specified, the realm's internal ID will be set to the realm's name.
	InternalId                       *string                    `pulumi:"internalId"`
	Internationalization             *RealmInternationalization `pulumi:"internationalization"`
	LoginTheme                       *string                    `pulumi:"loginTheme"`
	LoginWithEmailAllowed            *bool                      `pulumi:"loginWithEmailAllowed"`
	Oauth2DeviceCodeLifespan         *string                    `pulumi:"oauth2DeviceCodeLifespan"`
	Oauth2DevicePollingInterval      *int                       `pulumi:"oauth2DevicePollingInterval"`
	OfflineSessionIdleTimeout        *string                    `pulumi:"offlineSessionIdleTimeout"`
	OfflineSessionMaxLifespan        *string                    `pulumi:"offlineSessionMaxLifespan"`
	OfflineSessionMaxLifespanEnabled *bool                      `pulumi:"offlineSessionMaxLifespanEnabled"`
	// When `true`, organization support is enabled. Defaults to `false`.
	OrganizationsEnabled *bool           `pulumi:"organizationsEnabled"`
	OtpPolicy            *RealmOtpPolicy `pulumi:"otpPolicy"`
	// String that represents the passwordPolicies that are in place. Each policy is separated with " and ". Supported policies
	// can be found in the server-info providers page. example: "upperCase(1) and length(8) and forceExpiredPasswordChange(365)
	// and notUsername(undefined)"
	PasswordPolicy *string `pulumi:"passwordPolicy"`
	// The name of the realm. This is unique across Keycloak. This will also be used as the realm's internal ID within Keycloak.
	Realm                       string `pulumi:"realm"`
	RefreshTokenMaxReuse        *int   `pulumi:"refreshTokenMaxReuse"`
	RegistrationAllowed         *bool  `pulumi:"registrationAllowed"`
	RegistrationEmailAsUsername *bool  `pulumi:"registrationEmailAsUsername"`
	// Which flow should be used for RegistrationFlow
	RegistrationFlow *string `pulumi:"registrationFlow"`
	RememberMe       *bool   `pulumi:"rememberMe"`
	// Which flow should be used for ResetCredentialsFlow
	ResetCredentialsFlow *string                `pulumi:"resetCredentialsFlow"`
	ResetPasswordAllowed *bool                  `pulumi:"resetPasswordAllowed"`
	RevokeRefreshToken   *bool                  `pulumi:"revokeRefreshToken"`
	SecurityDefenses     *RealmSecurityDefenses `pulumi:"securityDefenses"`
	SmtpServer           *RealmSmtpServer       `pulumi:"smtpServer"`
	// SSL Required: Values can be 'none', 'external' or 'all'.
	SslRequired                     *string `pulumi:"sslRequired"`
	SsoSessionIdleTimeout           *string `pulumi:"ssoSessionIdleTimeout"`
	SsoSessionIdleTimeoutRememberMe *string `pulumi:"ssoSessionIdleTimeoutRememberMe"`
	SsoSessionMaxLifespan           *string `pulumi:"ssoSessionMaxLifespan"`
	SsoSessionMaxLifespanRememberMe *string `pulumi:"ssoSessionMaxLifespanRememberMe"`
	// When `true`, users are allowed to manage their own resources. Defaults to `false`.
	UserManagedAccess          *bool                            `pulumi:"userManagedAccess"`
	VerifyEmail                *bool                            `pulumi:"verifyEmail"`
	WebAuthnPasswordlessPolicy *RealmWebAuthnPasswordlessPolicy `pulumi:"webAuthnPasswordlessPolicy"`
	WebAuthnPolicy             *RealmWebAuthnPolicy             `pulumi:"webAuthnPolicy"`
}

// The set of arguments for constructing a Realm resource.
type RealmArgs struct {
	AccessCodeLifespan                  pulumi.StringPtrInput
	AccessCodeLifespanLogin             pulumi.StringPtrInput
	AccessCodeLifespanUserAction        pulumi.StringPtrInput
	AccessTokenLifespan                 pulumi.StringPtrInput
	AccessTokenLifespanForImplicitFlow  pulumi.StringPtrInput
	AccountTheme                        pulumi.StringPtrInput
	ActionTokenGeneratedByAdminLifespan pulumi.StringPtrInput
	ActionTokenGeneratedByUserLifespan  pulumi.StringPtrInput
	AdminTheme                          pulumi.StringPtrInput
	// A map of custom attributes to add to the realm.
	Attributes pulumi.StringMapInput
	// Which flow should be used for BrowserFlow
	BrowserFlow pulumi.StringPtrInput
	// Which flow should be used for ClientAuthenticationFlow
	ClientAuthenticationFlow    pulumi.StringPtrInput
	ClientSessionIdleTimeout    pulumi.StringPtrInput
	ClientSessionMaxLifespan    pulumi.StringPtrInput
	DefaultDefaultClientScopes  pulumi.StringArrayInput
	DefaultOptionalClientScopes pulumi.StringArrayInput
	DefaultSignatureAlgorithm   pulumi.StringPtrInput
	// Which flow should be used for DirectGrantFlow
	DirectGrantFlow pulumi.StringPtrInput
	// The display name for the realm that is shown when logging in to the admin console.
	DisplayName pulumi.StringPtrInput
	// The display name for the realm that is rendered as HTML on the screen when logging in to the admin console.
	DisplayNameHtml pulumi.StringPtrInput
	// Which flow should be used for DockerAuthenticationFlow
	DockerAuthenticationFlow pulumi.StringPtrInput
	DuplicateEmailsAllowed   pulumi.BoolPtrInput
	EditUsernameAllowed      pulumi.BoolPtrInput
	EmailTheme               pulumi.StringPtrInput
	// When `false`, users and clients will not be able to access this realm. Defaults to `true`.
	Enabled pulumi.BoolPtrInput
	// Which flow should be used for FirstBrokerLoginFlow
	FirstBrokerLoginFlow pulumi.StringPtrInput
	// When specified, this will be used as the realm's internal ID within Keycloak. When not specified, the realm's internal ID will be set to the realm's name.
	InternalId                       pulumi.StringPtrInput
	Internationalization             RealmInternationalizationPtrInput
	LoginTheme                       pulumi.StringPtrInput
	LoginWithEmailAllowed            pulumi.BoolPtrInput
	Oauth2DeviceCodeLifespan         pulumi.StringPtrInput
	Oauth2DevicePollingInterval      pulumi.IntPtrInput
	OfflineSessionIdleTimeout        pulumi.StringPtrInput
	OfflineSessionMaxLifespan        pulumi.StringPtrInput
	OfflineSessionMaxLifespanEnabled pulumi.BoolPtrInput
	// When `true`, organization support is enabled. Defaults to `false`.
	OrganizationsEnabled pulumi.BoolPtrInput
	OtpPolicy            RealmOtpPolicyPtrInput
	// String that represents the passwordPolicies that are in place. Each policy is separated with " and ". Supported policies
	// can be found in the server-info providers page. example: "upperCase(1) and length(8) and forceExpiredPasswordChange(365)
	// and notUsername(undefined)"
	PasswordPolicy pulumi.StringPtrInput
	// The name of the realm. This is unique across Keycloak. This will also be used as the realm's internal ID within Keycloak.
	Realm                       pulumi.StringInput
	RefreshTokenMaxReuse        pulumi.IntPtrInput
	RegistrationAllowed         pulumi.BoolPtrInput
	RegistrationEmailAsUsername pulumi.BoolPtrInput
	// Which flow should be used for RegistrationFlow
	RegistrationFlow pulumi.StringPtrInput
	RememberMe       pulumi.BoolPtrInput
	// Which flow should be used for ResetCredentialsFlow
	ResetCredentialsFlow pulumi.StringPtrInput
	ResetPasswordAllowed pulumi.BoolPtrInput
	RevokeRefreshToken   pulumi.BoolPtrInput
	SecurityDefenses     RealmSecurityDefensesPtrInput
	SmtpServer           RealmSmtpServerPtrInput
	// SSL Required: Values can be 'none', 'external' or 'all'.
	SslRequired                     pulumi.StringPtrInput
	SsoSessionIdleTimeout           pulumi.StringPtrInput
	SsoSessionIdleTimeoutRememberMe pulumi.StringPtrInput
	SsoSessionMaxLifespan           pulumi.StringPtrInput
	SsoSessionMaxLifespanRememberMe pulumi.StringPtrInput
	// When `true`, users are allowed to manage their own resources. Defaults to `false`.
	UserManagedAccess          pulumi.BoolPtrInput
	VerifyEmail                pulumi.BoolPtrInput
	WebAuthnPasswordlessPolicy RealmWebAuthnPasswordlessPolicyPtrInput
	WebAuthnPolicy             RealmWebAuthnPolicyPtrInput
}

func (RealmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*realmArgs)(nil)).Elem()
}

type RealmInput interface {
	pulumi.Input

	ToRealmOutput() RealmOutput
	ToRealmOutputWithContext(ctx context.Context) RealmOutput
}

func (*Realm) ElementType() reflect.Type {
	return reflect.TypeOf((**Realm)(nil)).Elem()
}

func (i *Realm) ToRealmOutput() RealmOutput {
	return i.ToRealmOutputWithContext(context.Background())
}

func (i *Realm) ToRealmOutputWithContext(ctx context.Context) RealmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealmOutput)
}

// RealmArrayInput is an input type that accepts RealmArray and RealmArrayOutput values.
// You can construct a concrete instance of `RealmArrayInput` via:
//
//	RealmArray{ RealmArgs{...} }
type RealmArrayInput interface {
	pulumi.Input

	ToRealmArrayOutput() RealmArrayOutput
	ToRealmArrayOutputWithContext(context.Context) RealmArrayOutput
}

type RealmArray []RealmInput

func (RealmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Realm)(nil)).Elem()
}

func (i RealmArray) ToRealmArrayOutput() RealmArrayOutput {
	return i.ToRealmArrayOutputWithContext(context.Background())
}

func (i RealmArray) ToRealmArrayOutputWithContext(ctx context.Context) RealmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealmArrayOutput)
}

// RealmMapInput is an input type that accepts RealmMap and RealmMapOutput values.
// You can construct a concrete instance of `RealmMapInput` via:
//
//	RealmMap{ "key": RealmArgs{...} }
type RealmMapInput interface {
	pulumi.Input

	ToRealmMapOutput() RealmMapOutput
	ToRealmMapOutputWithContext(context.Context) RealmMapOutput
}

type RealmMap map[string]RealmInput

func (RealmMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Realm)(nil)).Elem()
}

func (i RealmMap) ToRealmMapOutput() RealmMapOutput {
	return i.ToRealmMapOutputWithContext(context.Background())
}

func (i RealmMap) ToRealmMapOutputWithContext(ctx context.Context) RealmMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealmMapOutput)
}

type RealmOutput struct{ *pulumi.OutputState }

func (RealmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Realm)(nil)).Elem()
}

func (o RealmOutput) ToRealmOutput() RealmOutput {
	return o
}

func (o RealmOutput) ToRealmOutputWithContext(ctx context.Context) RealmOutput {
	return o
}

func (o RealmOutput) AccessCodeLifespan() pulumi.StringOutput {
	return o.ApplyT(func(v *Realm) pulumi.StringOutput { return v.AccessCodeLifespan }).(pulumi.StringOutput)
}

func (o RealmOutput) AccessCodeLifespanLogin() pulumi.StringOutput {
	return o.ApplyT(func(v *Realm) pulumi.StringOutput { return v.AccessCodeLifespanLogin }).(pulumi.StringOutput)
}

func (o RealmOutput) AccessCodeLifespanUserAction() pulumi.StringOutput {
	return o.ApplyT(func(v *Realm) pulumi.StringOutput { return v.AccessCodeLifespanUserAction }).(pulumi.StringOutput)
}

func (o RealmOutput) AccessTokenLifespan() pulumi.StringOutput {
	return o.ApplyT(func(v *Realm) pulumi.StringOutput { return v.AccessTokenLifespan }).(pulumi.StringOutput)
}

func (o RealmOutput) AccessTokenLifespanForImplicitFlow() pulumi.StringOutput {
	return o.ApplyT(func(v *Realm) pulumi.StringOutput { return v.AccessTokenLifespanForImplicitFlow }).(pulumi.StringOutput)
}

func (o RealmOutput) AccountTheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Realm) pulumi.StringPtrOutput { return v.AccountTheme }).(pulumi.StringPtrOutput)
}

func (o RealmOutput) ActionTokenGeneratedByAdminLifespan() pulumi.StringOutput {
	return o.ApplyT(func(v *Realm) pulumi.StringOutput { return v.ActionTokenGeneratedByAdminLifespan }).(pulumi.StringOutput)
}

func (o RealmOutput) ActionTokenGeneratedByUserLifespan() pulumi.StringOutput {
	return o.ApplyT(func(v *Realm) pulumi.StringOutput { return v.ActionTokenGeneratedByUserLifespan }).(pulumi.StringOutput)
}

func (o RealmOutput) AdminTheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Realm) pulumi.StringPtrOutput { return v.AdminTheme }).(pulumi.StringPtrOutput)
}

// A map of custom attributes to add to the realm.
func (o RealmOutput) Attributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Realm) pulumi.StringMapOutput { return v.Attributes }).(pulumi.StringMapOutput)
}

// Which flow should be used for BrowserFlow
func (o RealmOutput) BrowserFlow() pulumi.StringOutput {
	return o.ApplyT(func(v *Realm) pulumi.StringOutput { return v.BrowserFlow }).(pulumi.StringOutput)
}

// Which flow should be used for ClientAuthenticationFlow
func (o RealmOutput) ClientAuthenticationFlow() pulumi.StringOutput {
	return o.ApplyT(func(v *Realm) pulumi.StringOutput { return v.ClientAuthenticationFlow }).(pulumi.StringOutput)
}

func (o RealmOutput) ClientSessionIdleTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v *Realm) pulumi.StringOutput { return v.ClientSessionIdleTimeout }).(pulumi.StringOutput)
}

func (o RealmOutput) ClientSessionMaxLifespan() pulumi.StringOutput {
	return o.ApplyT(func(v *Realm) pulumi.StringOutput { return v.ClientSessionMaxLifespan }).(pulumi.StringOutput)
}

func (o RealmOutput) DefaultDefaultClientScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Realm) pulumi.StringArrayOutput { return v.DefaultDefaultClientScopes }).(pulumi.StringArrayOutput)
}

func (o RealmOutput) DefaultOptionalClientScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Realm) pulumi.StringArrayOutput { return v.DefaultOptionalClientScopes }).(pulumi.StringArrayOutput)
}

func (o RealmOutput) DefaultSignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Realm) pulumi.StringPtrOutput { return v.DefaultSignatureAlgorithm }).(pulumi.StringPtrOutput)
}

// Which flow should be used for DirectGrantFlow
func (o RealmOutput) DirectGrantFlow() pulumi.StringOutput {
	return o.ApplyT(func(v *Realm) pulumi.StringOutput { return v.DirectGrantFlow }).(pulumi.StringOutput)
}

// The display name for the realm that is shown when logging in to the admin console.
func (o RealmOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Realm) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The display name for the realm that is rendered as HTML on the screen when logging in to the admin console.
func (o RealmOutput) DisplayNameHtml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Realm) pulumi.StringPtrOutput { return v.DisplayNameHtml }).(pulumi.StringPtrOutput)
}

// Which flow should be used for DockerAuthenticationFlow
func (o RealmOutput) DockerAuthenticationFlow() pulumi.StringOutput {
	return o.ApplyT(func(v *Realm) pulumi.StringOutput { return v.DockerAuthenticationFlow }).(pulumi.StringOutput)
}

func (o RealmOutput) DuplicateEmailsAllowed() pulumi.BoolOutput {
	return o.ApplyT(func(v *Realm) pulumi.BoolOutput { return v.DuplicateEmailsAllowed }).(pulumi.BoolOutput)
}

func (o RealmOutput) EditUsernameAllowed() pulumi.BoolOutput {
	return o.ApplyT(func(v *Realm) pulumi.BoolOutput { return v.EditUsernameAllowed }).(pulumi.BoolOutput)
}

func (o RealmOutput) EmailTheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Realm) pulumi.StringPtrOutput { return v.EmailTheme }).(pulumi.StringPtrOutput)
}

// When `false`, users and clients will not be able to access this realm. Defaults to `true`.
func (o RealmOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Realm) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Which flow should be used for FirstBrokerLoginFlow
func (o RealmOutput) FirstBrokerLoginFlow() pulumi.StringOutput {
	return o.ApplyT(func(v *Realm) pulumi.StringOutput { return v.FirstBrokerLoginFlow }).(pulumi.StringOutput)
}

// When specified, this will be used as the realm's internal ID within Keycloak. When not specified, the realm's internal ID will be set to the realm's name.
func (o RealmOutput) InternalId() pulumi.StringOutput {
	return o.ApplyT(func(v *Realm) pulumi.StringOutput { return v.InternalId }).(pulumi.StringOutput)
}

func (o RealmOutput) Internationalization() RealmInternationalizationPtrOutput {
	return o.ApplyT(func(v *Realm) RealmInternationalizationPtrOutput { return v.Internationalization }).(RealmInternationalizationPtrOutput)
}

func (o RealmOutput) LoginTheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Realm) pulumi.StringPtrOutput { return v.LoginTheme }).(pulumi.StringPtrOutput)
}

func (o RealmOutput) LoginWithEmailAllowed() pulumi.BoolOutput {
	return o.ApplyT(func(v *Realm) pulumi.BoolOutput { return v.LoginWithEmailAllowed }).(pulumi.BoolOutput)
}

func (o RealmOutput) Oauth2DeviceCodeLifespan() pulumi.StringOutput {
	return o.ApplyT(func(v *Realm) pulumi.StringOutput { return v.Oauth2DeviceCodeLifespan }).(pulumi.StringOutput)
}

func (o RealmOutput) Oauth2DevicePollingInterval() pulumi.IntOutput {
	return o.ApplyT(func(v *Realm) pulumi.IntOutput { return v.Oauth2DevicePollingInterval }).(pulumi.IntOutput)
}

func (o RealmOutput) OfflineSessionIdleTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v *Realm) pulumi.StringOutput { return v.OfflineSessionIdleTimeout }).(pulumi.StringOutput)
}

func (o RealmOutput) OfflineSessionMaxLifespan() pulumi.StringOutput {
	return o.ApplyT(func(v *Realm) pulumi.StringOutput { return v.OfflineSessionMaxLifespan }).(pulumi.StringOutput)
}

func (o RealmOutput) OfflineSessionMaxLifespanEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Realm) pulumi.BoolPtrOutput { return v.OfflineSessionMaxLifespanEnabled }).(pulumi.BoolPtrOutput)
}

// When `true`, organization support is enabled. Defaults to `false`.
func (o RealmOutput) OrganizationsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Realm) pulumi.BoolPtrOutput { return v.OrganizationsEnabled }).(pulumi.BoolPtrOutput)
}

func (o RealmOutput) OtpPolicy() RealmOtpPolicyOutput {
	return o.ApplyT(func(v *Realm) RealmOtpPolicyOutput { return v.OtpPolicy }).(RealmOtpPolicyOutput)
}

// String that represents the passwordPolicies that are in place. Each policy is separated with " and ". Supported policies
// can be found in the server-info providers page. example: "upperCase(1) and length(8) and forceExpiredPasswordChange(365)
// and notUsername(undefined)"
func (o RealmOutput) PasswordPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Realm) pulumi.StringPtrOutput { return v.PasswordPolicy }).(pulumi.StringPtrOutput)
}

// The name of the realm. This is unique across Keycloak. This will also be used as the realm's internal ID within Keycloak.
func (o RealmOutput) Realm() pulumi.StringOutput {
	return o.ApplyT(func(v *Realm) pulumi.StringOutput { return v.Realm }).(pulumi.StringOutput)
}

func (o RealmOutput) RefreshTokenMaxReuse() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Realm) pulumi.IntPtrOutput { return v.RefreshTokenMaxReuse }).(pulumi.IntPtrOutput)
}

func (o RealmOutput) RegistrationAllowed() pulumi.BoolOutput {
	return o.ApplyT(func(v *Realm) pulumi.BoolOutput { return v.RegistrationAllowed }).(pulumi.BoolOutput)
}

func (o RealmOutput) RegistrationEmailAsUsername() pulumi.BoolOutput {
	return o.ApplyT(func(v *Realm) pulumi.BoolOutput { return v.RegistrationEmailAsUsername }).(pulumi.BoolOutput)
}

// Which flow should be used for RegistrationFlow
func (o RealmOutput) RegistrationFlow() pulumi.StringOutput {
	return o.ApplyT(func(v *Realm) pulumi.StringOutput { return v.RegistrationFlow }).(pulumi.StringOutput)
}

func (o RealmOutput) RememberMe() pulumi.BoolOutput {
	return o.ApplyT(func(v *Realm) pulumi.BoolOutput { return v.RememberMe }).(pulumi.BoolOutput)
}

// Which flow should be used for ResetCredentialsFlow
func (o RealmOutput) ResetCredentialsFlow() pulumi.StringOutput {
	return o.ApplyT(func(v *Realm) pulumi.StringOutput { return v.ResetCredentialsFlow }).(pulumi.StringOutput)
}

func (o RealmOutput) ResetPasswordAllowed() pulumi.BoolOutput {
	return o.ApplyT(func(v *Realm) pulumi.BoolOutput { return v.ResetPasswordAllowed }).(pulumi.BoolOutput)
}

func (o RealmOutput) RevokeRefreshToken() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Realm) pulumi.BoolPtrOutput { return v.RevokeRefreshToken }).(pulumi.BoolPtrOutput)
}

func (o RealmOutput) SecurityDefenses() RealmSecurityDefensesPtrOutput {
	return o.ApplyT(func(v *Realm) RealmSecurityDefensesPtrOutput { return v.SecurityDefenses }).(RealmSecurityDefensesPtrOutput)
}

func (o RealmOutput) SmtpServer() RealmSmtpServerPtrOutput {
	return o.ApplyT(func(v *Realm) RealmSmtpServerPtrOutput { return v.SmtpServer }).(RealmSmtpServerPtrOutput)
}

// SSL Required: Values can be 'none', 'external' or 'all'.
func (o RealmOutput) SslRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Realm) pulumi.StringPtrOutput { return v.SslRequired }).(pulumi.StringPtrOutput)
}

func (o RealmOutput) SsoSessionIdleTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v *Realm) pulumi.StringOutput { return v.SsoSessionIdleTimeout }).(pulumi.StringOutput)
}

func (o RealmOutput) SsoSessionIdleTimeoutRememberMe() pulumi.StringOutput {
	return o.ApplyT(func(v *Realm) pulumi.StringOutput { return v.SsoSessionIdleTimeoutRememberMe }).(pulumi.StringOutput)
}

func (o RealmOutput) SsoSessionMaxLifespan() pulumi.StringOutput {
	return o.ApplyT(func(v *Realm) pulumi.StringOutput { return v.SsoSessionMaxLifespan }).(pulumi.StringOutput)
}

func (o RealmOutput) SsoSessionMaxLifespanRememberMe() pulumi.StringOutput {
	return o.ApplyT(func(v *Realm) pulumi.StringOutput { return v.SsoSessionMaxLifespanRememberMe }).(pulumi.StringOutput)
}

// When `true`, users are allowed to manage their own resources. Defaults to `false`.
func (o RealmOutput) UserManagedAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Realm) pulumi.BoolPtrOutput { return v.UserManagedAccess }).(pulumi.BoolPtrOutput)
}

func (o RealmOutput) VerifyEmail() pulumi.BoolOutput {
	return o.ApplyT(func(v *Realm) pulumi.BoolOutput { return v.VerifyEmail }).(pulumi.BoolOutput)
}

func (o RealmOutput) WebAuthnPasswordlessPolicy() RealmWebAuthnPasswordlessPolicyOutput {
	return o.ApplyT(func(v *Realm) RealmWebAuthnPasswordlessPolicyOutput { return v.WebAuthnPasswordlessPolicy }).(RealmWebAuthnPasswordlessPolicyOutput)
}

func (o RealmOutput) WebAuthnPolicy() RealmWebAuthnPolicyOutput {
	return o.ApplyT(func(v *Realm) RealmWebAuthnPolicyOutput { return v.WebAuthnPolicy }).(RealmWebAuthnPolicyOutput)
}

type RealmArrayOutput struct{ *pulumi.OutputState }

func (RealmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Realm)(nil)).Elem()
}

func (o RealmArrayOutput) ToRealmArrayOutput() RealmArrayOutput {
	return o
}

func (o RealmArrayOutput) ToRealmArrayOutputWithContext(ctx context.Context) RealmArrayOutput {
	return o
}

func (o RealmArrayOutput) Index(i pulumi.IntInput) RealmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Realm {
		return vs[0].([]*Realm)[vs[1].(int)]
	}).(RealmOutput)
}

type RealmMapOutput struct{ *pulumi.OutputState }

func (RealmMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Realm)(nil)).Elem()
}

func (o RealmMapOutput) ToRealmMapOutput() RealmMapOutput {
	return o
}

func (o RealmMapOutput) ToRealmMapOutputWithContext(ctx context.Context) RealmMapOutput {
	return o
}

func (o RealmMapOutput) MapIndex(k pulumi.StringInput) RealmOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Realm {
		return vs[0].(map[string]*Realm)[vs[1].(string)]
	}).(RealmOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RealmInput)(nil)).Elem(), &Realm{})
	pulumi.RegisterInputType(reflect.TypeOf((*RealmArrayInput)(nil)).Elem(), RealmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RealmMapInput)(nil)).Elem(), RealmMap{})
	pulumi.RegisterOutputType(RealmOutput{})
	pulumi.RegisterOutputType(RealmArrayOutput{})
	pulumi.RegisterOutputType(RealmMapOutput{})
}
